{"noir_version":"1.0.0-beta.1+03b58fa2dfcc8acc8cf5198b1b23b55676fbdb02","hash":18315980005078816759,"abi":{"parameters":[{"name":"header","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":512,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"body","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":1024,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"pubkey","type":{"kind":"struct","path":"zkemail::dkim::RSAPubkey","fields":[{"name":"modulus","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"redc","type":{"kind":"array","length":18,"type":{"kind":"field"}}}]},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"dkim_header_sequence","type":{"kind":"struct","path":"zkemail::Sequence","fields":[{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":2,"type":{"kind":"field"}},"visibility":"public"},"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"3951064283418873378":{"error_kind":"fmtstring","length":123,"item_types":[{"kind":"integer","sign":"unsigned","width":32},{"kind":"integer","sign":"unsigned","width":32}]},"4118337510742699159":{"error_kind":"string","string":"No ';' suffix found at asserted bh index"},"4524007320076231485":{"error_kind":"string","string":"Header field out of bounds of header"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"5466606472443271855":{"error_kind":"string","string":"Header field must not contain newlines"},"5634341720269277520":{"error_kind":"fmtstring","length":58,"item_types":[{"kind":"integer","sign":"unsigned","width":8},{"kind":"integer","sign":"unsigned","width":32}]},"6485997221020871071":{"error_kind":"string","string":"call to assert_max_bit_size"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"},"8386845565670372523":{"error_kind":"string","string":"SHA256 hash computed over body does not match body hash found in DKIM-signed header"},"9619408434855056367":{"error_kind":"string","string":"Header field name must be followed by a colon"},"11883698362854120768":{"error_kind":"string","string":"Header field must start with CRLF"},"11944910942351401099":{"error_kind":"string","string":"No 'bh=' prefix found at asserted bh index"},"12712340723692189130":{"error_kind":"string","string":"Header field name does not match"},"14304927234259905409":{"error_kind":"fmtstring","length":129,"item_types":[{"kind":"integer","sign":"unsigned","width":32},{"kind":"integer","sign":"unsigned","width":32}]},"14514982005979867414":{"error_kind":"string","string":"attempt to bit-shift with overflow"},"14734181347393705282":{"error_kind":"string","string":"Header field must end with CRLF"},"15512795827244806757":{"error_kind":"string","string":"Body hash index accessed outside of DKIM header field"},"16761564377371454734":{"error_kind":"string","string":"Array index out of bounds"},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"}}},"bytecode":"","debug_symbols":"5L3dijbblh53L32sgzd/Z07dijFGtmUjMJKx5CPhe3d+pr9NiyoyUJOUI6h91BZrNZGNGc+eT403xn/9p//13//P//f//j/9h//4v/2n//xP//Z/+K//9H/8p//l3/2X//Cf/uP9//Vf/2k59vX/+3/9z//nv/uPf/4f/vN/+Xf/13/5p3+7bJ/xb/7p3//H//XP/7if/8+/+af/7T/8H//+n/7tuf4//+O/+fNvbf+qf2v/V/1bx7/q3zq//7fOzz/+rXl8/bfGv+rfuv5V/9b81/xbx+fbf2u//vFvHZ/rX/5b/+bLP7yu2/XP//C6XuMf//DYvvuHP+vf/zuvn3/xf+d1/DPPIuNZZTybjGf/YZ5z/wfPOdevPIeM55TxDBnPJeOZLp7zI+NZZDyrjGeT8cjm8ymbz6dsPp+y+XzK5vMpm89DNp+HbD6Pn57PYzn//sNj/3zl2WQ8u4znkPGcMp4h47lkPNPFc31kPIuMRzafL9l8vmTz+ZLN50s2ny/ZfL5k8/mSzecpm89TNp+nbD5P2Xyesvk8ZfN5yubzlM3nKZvP0zWfz49rPp8f13w+P675fH5c8/n8uObz+XHN5/Pjms/nxzWfz49rPp8f2XxeZPN5kc3nRTafF9l8XmTzeZHN50U2nxfZfF5k83mRzedVNp9X2XxeZfN5lc3nVTaf15+ez3Nf//7Dc85/yfP1H76usf/zP3xdc3/+h5d9HH8/9f6fx/r1W89f9K3D/K3zWv5+65zjK/xVhp9h+O1Thl/E8POz/V2smZ9z+Qq/luG3MvxehjfnN8KbAxnhzQmL8OaERXhzwhL8bk5YhC8n7F5O2L2csLs7YedfjLl8zq/w7oQFeHfCArw7YQHenbAA707YZ/hD/YZ9t+Y5zIH89rea85u6icOc3whvzm+EVzfcBF9+IR/lF/JRfiEf5RfyWX4hn+UX8ll+IZ/lF/KP/6z/VfhyB32WE/YsJ+xZTtiz/EIe7oQFeHfCArw7YQHenbAA705YgC930KPcQY9yBz3KHfRQ71G9W21ev6iyvtSVNfRxV7mDvsod9I+LO16FL7+Qr/IL+Sq/kK/yC/kqd9Cz3EHPcgc9yx30LHfQP65eeRW+nLCznLCznLCz/EKe4Q56fMId9PiEO+jxCXfQ4xPuoMfHnbAAH+6gxyfcQY9PuIMen3DCjk85YRd1qXz/3/ZvYza26yu8uiUmeHVLTPDqlpjgzQmL8OpNZYJXyzUIXm3LGPP4B/z8Zs6rbRkEr/4rL8Cvv+fPtmP9Pb80Gmv4r7xjDf+Vd/y4HutV+PAvjYZajgU17lDbrhA+/FfeobZdEbzadoXw4b/yjrLtapRtV6Nsuxpl29Uo265G2XY1yrarIbddPXfQctsVwJf/yiu3XQF8+a+8ZdvVKNuuRtl2Ncq2q1G2XY2y7WqobVcI/4tKZbe+6uVvLXfQZdvVKNuuhtp2hfDlF3LZdjXKtqtRtl2Nsu1qlG1Xo2y7GmXb1SjbrkbZdjXKtqtRtl0Nue3qGb5suxpl29Uo265G2XY1yrarUbZdjbLtapRtV6Nsuxpq2xXBq/VVCF9OWLeP6t1S2a2vevlbzflNTajadoXw5Q5abbtC+PILuWy7GmXb1SjbrkbZdjXKtqtRtl2Nsu1qlG1Xo2y7GnLbFcCHE/aS264APvxCvsq2q6tsu7o+7oQF+HAHfZVtV1fZdnWVbVdX2XZ1qW1XCF9OWLXtCuF/T6l8ueVYL39ruIO+3C4tgg930JfbpUXw5Rey2qWF8OEO+lLbrhA+3EFfatsVwoc76Ktsu7rKtqurbLu6yrarq2y7usq2q0tuu3p+IcttVwDvTliAL3fQctsVwJc7aLntCuDLHXTZdnWVbVdX2XZ1lW1Xl9p29d94/9ev/8VMbbtC+MzFhe/g3RcXHs9FXGrbFcK7Ly48w6ttVwgfvml0ufVVBB++aXS5fVTj/MffpMb59b8euH1UBO9OWIB3JyzAuxMW4N0J+wyv9lHBQaZL7aNCeHfCAvwv2qNS66ve/tbyHpXadoXw5T0qte0K4ct/5ZXbrgC+/Fdeue0K4Mt7VHLbFcCX96jktiuAL+9RyW1XAF9OWLntCuDLCau2XdEfStX6KoR3JyzAl/eo1D4qhC/vUcl9VABf3qOS+6gAvrxHJfdRAXw5YdU+qpdLZbW+6u1vLXfQatsVwpc7aLXtCuBn2XY15bYrgA930FNuuwJ4c34jfLiDnnLbFcCHO+gpt10BfLiDnnLbFcCXE1ZuuwL48At5qvVVCB/uoKfaR4Xw4Q56qn1UCB/uoKfcRwXw4Q56yn1UAF9OWLmPCuB/T6k81fqqt7813EFPte0K4csdtNp2hfDlF7LcdgXw5Q5abrsC+HIHLbddAXy5g5bbrgC+3EHLbVcAX05Yue0K4MsJq7Zd0QtZbbtC+HIHrbZdIXy5g1bbrghebbtC+HIHrbZdIXy5g1bbrhC+nLBu29W7pbJbjvXyt5Y7aLdLC+DdLi2CV7u0CL78Qla7tBDend8AX+6g1bYrhC930GrbFcKXO+iy7WqWbVezbLuaZdvVLNuuptx29fxCltuuAL7cQcttVwBf7qDltiuAL3fQZdvVLNuuZtl2Ncu2q1m2XU217QoOMk217QrhwzeNptp2hfDhm0ZTbbtC+PBNo+m2XRF85mrgd/Dhm0bT7aMi+PBNo+n2UT3Crx+1jwrh3QkL8O6EBXh3wgK8O2EBvns18IbvJuwN303YG96dsE8X1G54d8I+w6t9VAivTtg3lwHvb1UH8svfqs7vxw22G16d3wTfvRp4w3eNzTd8d4/qhu/uUd3w3T2q9SO3XQF8d4/qhu/uUd3w3T2qG96csAjf3VS+4bubyjd8OWHVPiqELyes2kf1vNlww3f3qG747h7VDd/do7rh3QkL8N09qhu+u0d1w3c3lW/47qbyDd/dVF4/ch8VwJcTVu2jerlUVuur3v5Wc35TE6q2XSF8uYNW264QvvxCltuunuHltiuAL3fQctsVwJc7aLntCuDLHbTadoXw5Q5a7aNC+HLCqn1UCF9+Ict9VABf7qDlPiqAL3fQch8VwJc7aLmPCuDLHbTcRwXw5YSV+6gA/heVymp91dvfWu6g1bYrhC930GrbFcKXX8hy2xXAlztoue0K4MsdtNx2BfDlDlpuuwL4cgettl0hfDlh1bYrhC8nrNp2RS9kte0K4d0JC/DlDlptu0L4cgettl0hfLiDXtS2K4QPd9CL2naF8OGEXT7mhH23VF7ccqyXvzXcQS9ulxbBhzvoxe3SAni1SwsemYvapYXw4Q56UduuEN6c3wgf7qAXte0K4cMd9FK2XS1l29VStl0tZdvVUrZdLXLb1fMLWW67AvhwB73IbVcAH+6gF7ntCuDLHXTZdrWUbVdL2Xa1lG1XS9l2tahtV8/n325498UFgM9cDfxyTeqGz1wN/A6+ezVwXdS2K4TvXg284btXA2/47tXAG96csHCcZnH7qAg+fNNocfuoCL57NfCGD18NXNQ+KoQPXw1c1D4qhA9fDVzUPiqELyes2kcFF9QWtY8K4cNXAxe1j+rlZUC1vurtb1XnN2ywqW1XCB++GriobVcIX96jktuuAL68RyW3XQF8eY9KbrsC+PIeldx2BfDlTWW1vgrhywmr9lEhfDlh1T4q2myQ+6ie4eU+KoAv71HJfVQAX96jkvuoAL68qSz3UQF8eVNZ7qMC+HLCqn1UL5fKan3V299a7qDVtiuEN+c3woeNzYvcdvX8yJTbrgC+3EHLbVeP8KvcdgXw4Q56lduuAD7cQa8fc8IifLiDXtU+KoQPJ+yq9lEhfPiFvMp9VAAf7qBXuY8K4MMd9Cr3UQF8uINe5T4qgA930KvcRwXw5YSV+6gA/veUyqtaX/X2t4Y76FVtu0L4cAe9qm1XCF9+IcttVwBf7qDltiuAL3fQctsVwJc7aLntCuDLHbTadoXw5YRV264QvpywatsVvZDVtiuEL3fQatsVwrsTFuDLHbTadoXw5Q5abbtC+HIHrbZdIXw5Yd22q3dLZbcc6+VvNec3NaFulxbBlztot0uL4MsvZLVLi+DVciyEL3fQatsVwpc7aLXtCuHLHXTZdrWWbVdr2Xa1lm1Xa9l2tcptV88vZLntCuDLHbTcdgXw5Q5abrsC+HIHXbZdrWXb1Vq2Xa1l29Vatl2tatsVnH9b1bYrhM9cDfx6TWpV264QPnw1cFXbrhA+fDVwdduuCD58NXB1+6iej9Osbh8VwbsTFuDDN41WtY8K4cNXA1e1jwrhw1cDN7WPCuHDVwM3tY8K4cMJu33cCft4QW1T+6gQPnw1cFP7qN5dBtzU+qq3v1Wd388bbJvadoXw4auBm9p2hfDhPapNbrsC+PAe1Sa3XQF8eI9qk9uuAD68R7XJbVcAH95U3tT6KoQvJ6zaR4Xw5YRV+6hgs2GT+6gAPrxHtcl9VM/wch8VwIf3qDa5jwrgw5vKm9xHBfDhTeVN7qMC+HLCqn1UL5fKan3Vy9+qtl1RE6q2XSF8uYNW264Q3p3fz49Mue0K4MsdtNx2BfDlDlpuu3qGl9uuAL7cQattVwhf7qDVPiqELyes2keF8OUXstxHBfDlDlruowL4cgct91EBfLmDlvuoAL7cQct9VABfTli5jwrgf1GprNZXvf2t5Q5abbtC+HIHrbZdIXz5hSy3XQF8uYOW264AvtxBy21XAF/uoOW2K4Avd9Bq2xXClxNWbbtC+HLCqm1X9EJW264IXm27QvhyB622XSF8uYNW264QvtxBq21XCF/uoNW2K4QPJ+zutl29WirvbjnWy98a7qB3t0uL4M35jfDhq4G72qUFj8xd7dJC+HAHvattVwSvtl0hfLiD3tW2K4QPd9B72Xa1l21Xe9l2tZdtV3vZdrXLbVfPL2S57Qrgwx30LrddAXy4g97ltiuAD3fQe9l2tZdtV3vZdrWXbVd72Xa1q21XcP5tV9uuED5zNfDrNaldbbtC+PDVwF1tu0L48NXA3W27Ivjw1cDd7aN6Pk6zu31UBB++abS7fVQE705YgA9fDdzVPiqED18N3NU+KoQPXw3c1T4qhC8nrNpHBRfUdrWPCuHdCQvw6oR9dxlQra96+1vV+Q0bbGrbFcKHrwbuatsVwpf3qOS2K4Av71HJbVcAX96jktuuAL68RyW3XQF8eVNZra9C+HLCqn1UCF9OWLWPijYb5D4qgC/vUcl9VABf3qOS+6ie4eU+KoAvbyrLfVQAX95UlvuoAL6csGof1culslpf9fa3ljtote2K4NW2K4QPG5t3ue3q+ZEpt10BvDu/Ab7cQcttVwBf7qDltiuAD3fQh9p2hfDhDvpQ+6gQPpywxyecsIfaRwUv5EPuowL4cAd9yH1UAB/uoA+5jwrgwx30IfdRAXy4gz7kPiqALyes3EcF8L+nVD7U+qq3vzXcQR9q2xXChzvoQ227QvjyC1luuwL4cAd9yG1XAB/uoA+57Qrgyx203HYF8OUOWm27QvhywqptVwhfTli17YpeyGrbFcKXO2i17Yrg1bYrhC930GrbFcKXO2i17Qrhyx202naF8OWEdduu3i2V3XKsd7/V7dKCJtTt0iL4cgftdmkRvDu/nx+ZapcWwpc7aLXtCuHLHbTadkXwatsVwpc76LLt6ijbro6y7eoo266Osu3qkNuunl/IctsVwJc7aLntCuDLHbTcdgXw5Q66bLs6yraro2y7Osq2q6NsuzrUtis4/3aobVcIn7ka+PWa1KG2XSF8+GrgobZdIXz4auDhtl0RfPhq4OH2UT0fpzncPiqAd/uoCD580+hQ+6gQPnw18FD7qBA+fDXwUPuoED58NfBQ+6gQPpywp9pHBRfUTrWPCuHDVwNPtY/q3WXA86MO5Je/VZ3fzxtsp9p2hfDhq4Gn2naF8OE9qlNuuwL48B7VKbddAXx4j+qU264APrxHdcptVwAf3lQ+1foqhC8nrNpHhfDlhFX7qGCz4ZT7qADenbAAH96jOuU+KoAP71Gdch8VwIc3lU+5jwrgw5vKp9xHBfDlhFX7qF4uldX6qre/tdxBq21XCF/uoNW2K4KX266eH5ly2xXAlztoue0K4M35jfDlDlpuuwL4cgettl0hfLmDVvuoEL6csGofFcKXX8hyHxXAlztouY8K4MsdtNxHBfDlDlruowL4cgct91EBfDlh5T4qgP9FpbJaX/X2t5Y7aLXtCuHLHbTadoXw5Rey3HYF8OUOWm67AvhyBy23XQF8uYOW264AvtxBq21XCF9OWLXtCuHLCau2XdELWW27QvhyB622XSF8uYNW264IXm27QvhyB622XSF8uYNW264QvpywbtvVu6WyW4718reWO2i3S+sZfrhdWgQfvho41C4teGQOtUsL4d35DfDhDnqobVcIH+6gh9p2hfDhDnqUbVejbLsaZdvVKNuuRtl2NeS2q8cX8pDbrgA+3EEPue0K4MMd9JDbrgA+3EGPsu1qlG1Xo2y7GmXb1SjbrobadgXn34badoXwmauBX69JDbXtCuHDVwOH2naF8OGrgcNtuyL48NXA4fZRPR+nGW4fFcGHbxoNt48K4NU+KoQPXw0cah8VwoevBg61jwrhw1cDh9pHhfDlhFX7qOCC2lD7qAhe7aNCeHXCvroMONT6qre/VZ3fsMGmtl0hfPhq4FDbrhC+vEclt10BfHmPSm67AvjyHpXcdgXw5T0que0K4Mubymp9FcKXE1bto0L4csKqfVS02SD3UQF8eY9K7qMCeHfCAnx5j0ruowL48qay3EcF8OVNZbmPCuDLCav2Ub1cKqv1VW9/qzm/qQlV264QvtxBq21XCF9+IcttV8/wctsVwJc7aLntCuDLHbTcdgXw5Q5abbtC+HIHrfZRIXw4YS+1jwrhwy/kS+6jAvhwB3193AkL8OEO+pL7qAA+3EFfch8VwIc76EvuowL4csLKfVQA/3tK5Uutr3r7W8Md9KW2XSF8uIO+1LYrhC+/kOW2K4APd9CX3HYF8OEO+pLbrgA+3EFfctsVwIc76Ettu0L4csKqbVcIX05Yte2KXshq2xXCuxMW4MsdtNp2hfDlDlptu0L4cgettl0hfLmDVtuuEL6csG7b1bulsluO9fK3ljtot0uL4MsdtNulBfBqlxY9MtUuLYQvd9Bq2xXCm/Mb4csdtNp2hfDlDrpsu7rKtqurbLu6yrarq2y7uuS2q+cXstx2BfDlDlpuuwL4cgctt10BfLmDLtuurrLt6irbrq6y7eoq264ute0Kzr9datsVwmeuBn69JnWpbVcIH74aeKltVwgfvhp4uW1XBB++Gni5fVTPx2kut4+K4MM3jS63j4rgw1cDL7WPiuDVPiqED18NvNQ+KoQPXw281D4qhC8nrNpHBRfULrWPCuHDVwMvtY/q3WXAqdZXvf2t6vx+3mCbatsVwoevBs6POr8JPrxHNeW2K4AP71FNue0K4MN7VFNuuwL48B7VlNuuAD68qTzV+iqELyes2keF8OWEVfuoYLNhyn1Uz/ByHxXAh/eoptxHBfDhPaop91EBfHhTecp9VAAf3lSech8VwJcTVu2jerlUVuur3v7Wcgettl0hvDm/ET5sbJ5y29XzI1NuuwL4cgctt109w8ttVwBf7qDltiuAL3fQatsVwpc7aLWPCuHLCav2USF8+YUs91EBfLmDlvuoAL7cQct9VABf7qDlPiqAL3fQch8VwJcTVu6jAvhfVCqr9VVvf2u5g1bbrhC+3EGrbVcIX34hy21XAF/uoOW2K4Avd9By2xXAlztoue0K4MsdtNp2hfDlhFXbrhC+nLBq2xW9kNW2K4Qvd9Bq2xXCuxMW4MsdtNp2hfDlDlptu0L4cgettl0hfDlh3bard0tltxzr5W815zc1oW6XFsGXO2i3S4vgyy9ktUvrGX77qOVYCN/toG/4bgd9w3c76BvenLAI3+2gb/huB33DdzvoG76bsDd8OWHDtqsbvvtCvuG7HfQN3+2gb3h3wgJ8t4O+4bsd9A3f7aBv+G4HfcN3O+jtE7Zd3fDlhA3brm74zE2j9et/MVPbrhA+czXwyzWpGz5zNfA7+O7VwBu+ezXwhu9eDdw+btsVwXevBt7w3ZtGN3z3ptEN705YgO/eNLrhu1cDb/ju1cAbvns18IbvXg3cPmofFcJ3rwbe8OWEVfuoEN6dsE8X1G54d8ICfPdq4A2vTtg3lwHvb1UH8svfqs7vxw227aO2XSF892rgDd81Nt/w5T0que0K4Mt7VHLbFcCX96jktiuAL+9RyW1XAF/eVFbrqxC+nLBqHxXClxNW7aOizQa5jwrgy3tUch/VM7zcRwXw5T0quY8K4MubynIfFcCXN5XlPiqALyes2kf1cqms1le9/K1q2xU1oWrbFcKXO2i17Qrh3fn9/MiU264AvtxBy21XAF/uoOW2q2d4ue0K4MsdtNp2hfDlDlrto0L4csKqfVQIX34hy31UAB/uoBe5jwrgwx30IvdRAXy4g14+7oQF+HAHvch9VAAfTthF7qMC+N9TKi9qfdXb3xruoBe17Qrhwx30orZdIXz4hbzIbVcAH+6gF7ntCuDDHfQit10BfLiDXuS2K4APd9CL2naF8OWEVduuEL6csGrbFb2Q1bYrglfbrhC+3EGrbVcIX+6g1bYrhC930GrbFcKXO2i17Qrhywnrtl29Wyq75Vgvf2u5g3a7tAjenN8I370aeMOXX8hqlxbClztote2K4NW2K4Qvd9Bq2xXClzvosu1qKduulrLtainbrpay7WqR266eX8hy2xXAlztoue0K4MsdtNx2BfDlDrpsu1rKtqulbLtayrarpWy7WtS2Kzj/tqhtVwifuRr49ZrUorZdIXz4auCitl0hfPhq4OK2XRF8+Grg4vZRPR+nWdw+KoIP3zRa3D4qgncnLMCHrwYuah8VwoevBi5qHxXCh68GLmofFcKXE1bto4ILaovaR4Xw7oQFeHXCvrsMqNZXvf2t6vyGDTa17Qrhw1cDV7XtCuHDe1Sr3HYF8OE9qvVjzm+ED+9RrXLbFcCH96hWue0K4MObyqtaX4Xw5YRV+6gQvpywah8VbDasch8VwIf3qFa5jwrgw3tUq9xH9Qwv91EBfHhTeZX7qAA+vKm8yn1UAF9OWLWP6t1SeVXrq97+1nAHvaptVwSvtl0hfNjYvMptV8+PTLntCuDd+Q3w5Q5abrsC+HIHLbddAXy5g1bbrhC+3EGrfVQIX05YtY8K4csvZLmPCuDLHbTcRwXw5Q5a7qMC+HIHLfdRAXy5g5b7qAC+nLByHxXA/6JSWa2vevtbyx202naF8OUOWm27QvjyC1luuwL4cgctt10BfLmDltuuAL7cQcttVwBf7qDVtiuELyes2naF8OWEVduu6IWstl0hfLmDVtuuCF5tu0L4cgettl0hfLmDVtuuEL7cQattVwhfTli37erdUtktx3r3W90uLWhC3S4tgi930G6XFsG78/v5kal2aSF8uYNW264QvtxBq21XAL+pbVcIH+6gt7LtaivbrrZPOGG3su1qK9uuNrnt6vGFvMltVwAf7qA3ue0K4MMd9Ca3XQF8uIPeyrarrWy72sq2q61su9rKtqtNbbuC82+b2naF8JmrgV+vSW1q2xXCh68GbmrbFcKHrwZubtsVwYevBm5uH9XzcZrN7aMCeLePiuDDN402tY8K4cNXAze1jwrhw1cDN7WPCuHDVwM3tY8K4csJq/ZRwQW1Te2jQvjw1cBN7aN6dxlwU+ur3v5WdX4/b7BtatsVwoevBm5q2xXCl/eo5LYrgC/vUcltVwBf3qOS264AvrxHJbddAXx4U3lT66sQvpywah8VwpcTVu2jos0GuY8K4N0JC/DlPSq5jwrgy3tUch8VwJc3leU+KoAvbyrLfVQAX05YtY/q5VJZra96+1vLHbTadoXw5Q5abbsieLnt6vmRKbddAXy5g5bbrgDenN8IX+6g5bYrgC930GrbFcKXO2i1jwrhywmr9lEhfPmFLPdRAXy5g5b7qAC+3EHLfVQAH+6gd7mPCuDDHfQu91EBfDhh9084YXe1j+rdUnlX66ve/tZwB72rbVcIH+6gd7XtCuHDL+RdbrsC+HAHvcttVwAf7qB3ue0K4MMd9C63XQF8uIPe1bYrhC8nrNp2hfDlhFXbruiFrLZdIXy4g97VtiuED3fQu9p2RfBq2xXClztote0K4csdtNp2hfDlhHXbrt4tld1yrJe/tdxBu11aAO92aRF8+GrgrnZp0SNT7dJCeHd+A3y5g1bbrhC+3EGrbVcIX+6gy7arvWy72su2q71su9rLtqtdbrt6fiHLbVcAX+6g5bYrgC930HLbFcCXO+iy7Wov2672su1qL9uu9rLtalfbruD82662XSF85mrg12tSu9p2hfDhq4G72naF8OGrgbvbdkXw4auBu9tH9XycZnf7qAg+fNNod/uoAF7to0L48NXAXe2jQvjw1cBd7aNC+PDVwF3to0L4csKqfVRwQW1X+6gIXu2jQnh1wr67DKjWV739rer8hg02te0K4cNXA3e17Qrhy3tUctsVwIf3qA657Qrgw3tUh9x2BfDhParjY05YhA9vKh9qfRXChxP2UPuoEL6csGofFWw2HHIfFcCH96gOuY8K4N0JC/DhPapD7qMC+PCm8iH3UQF8eFP5kPuoAL6csGof1bul8qHWV739reb8hib0UNuuED7cQR9q2xXCl1/IctvVM7zcdgXw5Q5abrsC+HIHLbddAXy5g1bbrhC+3EGrfVQIX05YtY8K4csvZLmPCuDLHbTcRwXw5Q5a7qMC+HIHLfdRAXy5g5b7qAC+nLByHxXA/6JSWa2vevtbyx202naF8OUOWm27QvjyC1luuwL4cgctt10BfLmDltuuAL7cQcttVwBf7qDVtiuELyes2naF8OWEVduu6IWstl0hvDthAb7cQattVwhf7qDVtiuEL3fQatsVwpc7aLXtCuHLCeu2Xb1bKrvlWC9/a7mDdru0CL7cQbtdWgCvdmnRI1Pt0kL4cgettl0hvDm/Eb7cQattVwhf7qDLtqujbLs6y7ars2y7Osu2q1Nuu3p8IZ8fd8ICfLiDPuW2K4APd9Cn3HYF8OEO+izbrs6y7eos267Osu3qLNuuTrXtCs6/nWrbFcJnrgZ+vSZ1qm1XCB++GniqbVcIH74aeLptVwQfvhp4un1Uz8dpTrePiuDDN41Ot4+K4MNXA0+1j4rg1T4qhA9fDTzVPiqED18NPNU+KoQvJ6zaRwUX1E61jwrhw1cDT7WP6t1lwFOtr3r7W9X5/bzBdqptVwgfvhp4qm1XCB/eozrltiuAD+9RnXLbFcCX96jktiuAL+9RyW1XAB/eVD7V+iqELyes2keF8OWEVfuoaLNB7qN6hpf7qAC+vEcl91EBfHmPSu6jAvjyprLcRwXw5U1luY8K4MsJq/ZRvVwqq/VVb39ruYNW264Q3pzfCB82Np9y29XzI1NuuwL4cgctt109w8ttVwBf7qDltiuAL3fQatsVwpc7aLWPCuHLCav2USF8+YUs91EBfLmDlvuoAL7cQct9VABf7qDlPiqAL3fQch8VwIcTdsh9VAD/e0rlodZXvf2t4Q56fMz5jfDhDnqobVcIH34hD7ntCuDDHfSQ264APtxBD7ntCuDDHfSQ264APtxBD7XtCuHLCau2XSF8OWHVtit6IattVwgf7qCH2naF8O6EBfhwBz3UtiuED3fQQ227QvhyB622XSF8OWHdtqt3S2W3HOvlbzXnNzWhbpcWwZc7aLdLi+DLL2S1S4vg1XIshC930GrbFcKXO2i17Qrhyx102XY1yrarUbZdjbLtapRtV0Nuu3p+IcttVwBf7qDltiuAL3fQctsVwJc76LLtapRtV6Nsuxpl29Uo266G2nYF59+G2naF8JmrgV+vSQ217Qrhw1cDh9p2hfDhq4HDbbsi+PDVwOH2UT0fpxluHxXBuxMW4MM3jYbaR4Xw4auBQ+2jQvjw1cCh9lEhfPhq4FD7qBC+nLBqHxVcUBtqHxXCh68GDrWP6uVlQLW+6u1vVec3bLCpbVcIH74aONS2K4Qv71HJbVcAX96jktuuAL68RyW3XQF8eI/qktuuAD68qXyp9VUIH07Y6xNO2Evto0L48B7VJfdRAXx4j+qS+6ie4eU+KoAP71Fdch8VwIc3lS+5jwrgw5vKl9xHBfDlhFX7qN4tlS+1vurlb1XbrqAJvdS2K4QPd9CX2naF8O78fn5kym1XAB/uoC+57Qrgwx30JbddPcPLbVcAX+6g1bYrhC930GofFcKXE1bto0L48gtZ7qMC+HIHLfdRAXy5g5b7qAC+3EHLfVQAX+6g5T4qgC8nrNxHBfC/qFRW66ve/tZyB622XSF8uYNW264QvvxCltuuAL7cQcttVwBf7qDltiuAL3fQctsVwJc7aLXtCuHLCau2XSF8OWHVtit6IattVwSvtl0hfLmDVtuuEL7cQattVwhf7qDVtiuEL3fQatsVwpcT1m27erdUdsuxXv7WcgftdmkRvDm/ET58NfBSu7Tokal2aSF8uYNW264IXm27QvhyB622XSF8uYMu266usu3qKtuurrLt6irbri657erxhTzltiuAD3fQU267AvhwBz0/7oQF+HAHPcu2q1m2Xc2y7WqWbVezbLuaatsVnH+batsVwmeuBn69JjXVtiuED18NnGrbFcKHrwZOt+2K4MNXA2fZRzXLPqpZ9lHNso9qyn1Uz/+tUu6jAvjyG/anfVTbdvzd+9i26/OV55LxTBfPT4ugkOeH02rbP3//N2/7tn7lWWU8m4xnl/EcMp5TxjNkPJeMZ7p4flojhDyy+bzL5vMum8+7bD7vsvm8y+bzLpvPu2w+77L5fMjm8yGbz4dsPh+y+XzI5vMhm8+HbD4fsvl8yObzIZvPp2w+n7L5fMrm8ymbz6dsPp+y+XzK5vMpm8+nbD6fsvk8ZPN5yObzkM3nIZvPQzafh2w+D9l8HrL5PGTzecjm8yWbz5dsPl+y+XzJ5vMlm8+XbD5fsvl8yebzJZvPl2w+T9l8nrL5PGXzecrm85TN5x//ffe5//3t7XrOb3hOGc+Q8Vwynmniuf9/9o+MZ5HxrDKeTcazy3hU8/nmUc3nm0c1n28e1Xy+eWTzeZHN50U2nxfZfP7xX62O5a8pch375yvPLuM5ZDynjGfIeC4Zz3Tx/PhPL4lnkfGsMh7ZfF5l83mVzedVNp9X2XxeZfN5lc3nTTafN9l83mTzeZPN5002nzfZfN5k83mTzedNNp832XzeZfN5l83nXTafd9l83mXzeZfN5102n3fZfN5l83mXzedDNp8P2Xw+ZPP5kM3nQzafD9l8PmTz+ZDN50M2nw/ZfD5l8/mUzedTNp9P2Xw+ZfP5lM3nUzafT9l8PmXz+ZTN5yGbz0M2n4dsPg/ZfB6y+Txk83nI5vOQzechm89DNp8v2Xy+ZPP5ks3nSzafL9l8vmTz+ZLN50s2ny/ZfL5k83nK5vOUzecpm89TNp+nbD5P2Xyesvk8ZfN5yubzdM3n5eOaz8vHNZ+Xj2s+Lx/XfF4+rvm8fFzzefm45vPycc3n5eOaz8tHNp8X2XxeZPN5kc1n2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8HF9nvBxfZ7wcX2e8Hlx///eB/1w30a/w9Rnxdc3/+h5d9HH8/9f6fx/r1W81Xx9/+VvOR8ufb9jf8KMNfZfgZhv/x32r+98DPz/ZXnDc/5/IVfinDr2X4rQxvzm+ENwcywpsTFuHNCYvw5oRFeHPCEvxZTtiznLBnOWFPd8LOvxhz+Zxf4d0JC/DuhAV4d8ICvDthAd6dsACvfsO+W/MMcyC//a3m/KZuYpjzG+HN+Y3w5vxG+PILeZRfyKP8Qh7lF/Iov5Cv8gv5Kr+Qr/IL+Sp30D/uAHgVvpywVzlhr3LCXuUX8uVO2Gf46U5YgHcnLMC7Exbgyx30j1scXoUvd9Cz3EHPcgc91XtU71ab8/dU1utHXVk/93HrJ9xBr59wB71+wh30+nHn9+NTZ/2EX8jrJ/xCXj/hF/L6CXfQ6yfcQa9LuINel3AHvS7hDnpdwh30+uOellfhywm7lBN2Cb+Q1yXcQa9LuINe13AHva7hDnpdwx30uoY76PXHTTuvwoc76HUNd9DrWk7YtZywq7pUHp/5tzEb2/UFflO3xASvbokJXt0SE7y6JSZ4c8IivFquQfBqW8aYxz/g59c5v6ltGQSv/isvwf+iP9vuv+eXRute/ivvXv4r717+K6/bpUXw5Q5abbtC+PJfedW2K4Qv/5W3bLtay7artWy7Wsu2q7Vsu1rLtqu1bLtay7arVW67eu6g5barZ3i57Qrgy3/llduuAL78V96y7Wot267Wsu1qLduu1rLtalXbrgj+F+mrVre+6uVvLXfQZdvVWrZdrWrbFcKXX8hl29Vatl2tZdvVWrZdrWXb1Vq2Xa1l29Vatl2tZdvVWrZdrWXb1Sq3XQF8+YVctl2tZdvVWrZdrWXb1Vq2Xa1l29Vatl2tZdvVqrZdIXw4YTe1jwrhf0+pvLn1VS9/a7iD3j7m/Eb4cAe9qW1XCB9+IW9l29VWtl1tZdvVVrZdbWXb1Va2XW1l29VWtl1tZdvVJrddAXw5YeW2q2f4su1qK9uutrLtaivbrray7Wor2662su1qK9uutrLtalPbrghebbtC+HLCum1X75bKbjnWy99qzm9qQt0uLYIvd9BulxbBl1/IapcWwavlWAhf7qDVtiuEL3fQatsVwpc76LLtaivbrray7Wor2662su1qk9uunl/IctsVwJc7aLntCuDLHbTcdgXw5Q66bLvayrarrWy72sq2q61su9rUtqv/xvu/fv0vZmrbFcJnLi58B+++uADw7osLAO++uADwmZtG38C7bVcEn7lp9B185qbRd/DlhHX7qAi+nLBqHxXClxNW7aNC+HLCqn1UCF9OWLWPCs6/bWofFcJnEvY7+PDVwE3to0L4TMJ+B59J2O/g3Ql7/mPHbJxf6z61jwrh3QkL8O6EBXh3wgK8O2EB3p2wjwdWN7WPCuHDd3k3tY/q5d8KqPVV737rrrZdwYL77rZdEXz4JsJe9lHtH3N+w+7grvZRIXx4U3kv+6j2so9qL/uo9rKPai/7qPayj2ov+6j2so9qL/uo9rKPapf7qB4XH3e5jwrgw5vKe9lHtZd9VHvZR7WXfVR72Ue1l31Ue9lHtZd9VHvZR7WrfVQvl8pqfdXb31ruoN22K4Ivd9BlH9Wu9lHRI1Pto0L4cgdd9lHtZR/VXvZR7WUf1V72Ue1lH9Ve9lHtZR/VXvZR7WUf1S73UT2/kOU+qmd4uY8K4MsddNlHtZd9VHvZR7WXfVR72Ue1l31Ue9lHtZd9VLvaR/VyqazWV739reUO2m27InhzfiN8+CbCrrZd0SNTbbtC+HIHrbZdEbzadoXw5Q5abbtC+HIHrbZdIXy5g1bbrhC+nLBq2xXCl1/IatsVwpc7aLXtCuHLHbTadoXw5Q5abbtC+HIHrbZdIXw5YdW2K4T/RaWyW4718reWO2i3S4vgyx2026VF8OUXstqlhfDhDvpQ264QPtxBH2rbFcKHO+jjY05YhA930EfZdnWUbVdH2XZ1lG1Xh9x29fhCPuS2K4APd9CH3HYF8O6EBfhwB33IbVcAH+6gj7Lt6ijbro6y7eoo264Ote0KDjIdatsVwpsTFu67HGrbFcKHbxodatsVwodvGh1u2xXAu/VVBB++aXS4fVQEH75pdLh9VATvTliAdycswLsTFuDdCQvw4auBh9pHhfDlhFX7qBDenbCPF9QOtY8K4cNXAw+1j+rdZcBDra96+1vV+f28wXaobVcEr7ZdIXzY2HzIbVfPywFy2xXAm/Mb4ct7VHLbFcCX96jktiuAL+9RqW1XCF/eVFb7qBC+nLBqHxXCl/eo5D4qgC/vUcl9VABf3qOS+6gAvrxHJfdRAXx5U1nuowL4csLKfVQA/4tKZbW+6u1vLXfQatsVwpc7aLXtCuHLL2S57Qrgyx203HYF8OUOWm67AvhyBy23XQF8uYNW66sQvpywah8VwpcTVu2johey3EcF8OUOWu6jeoQ/5T4qgA930KfcRwXw4Q76/LgTFuDDHfQp91EBfDhhT7WP6t1S+VTrq17+VrXtCprQU227QvhwB32qbVcI787vx0fmKbddAXy4gz7ltiuAD3fQp9x29Qwvt10BfLiDPtW2K4QPd9Cn2naF8OWEVduuEL78QlbbrhC+3EGrbVcIX+6g1bYrhC930GrbFcKXO2i17Qrhywmrtl0h/C8qld1yrJe/tdxBu11aBF/uoN0uLYIvv5DVLi2EL3fQatsVwpc7aLXtCuHLHXTZdnWWbVdn2XZ1lm1XZ9l2dZZtV6fcdvX8Qpbbrp7h5bYrgC930HLbFcCXO2i57Qrgyx102XZ1lm1XZ9l2dZZtV6fadgXn30617QrhM1cDv16TOtW2K4Q3JyzCh68GnmrbFcKHrwaebn0VwYdvGp1uHxXBh28anW4fFcGHrwaeah8VwoevBp5qHxXCh68GnmofFcKXE1bto0J4d8I+XlA71T4qhA9fDTzVPqqXlwHV+qq3v1Wd37DBprZdIXz4auCptl0B/JDbrh6XA4bcdgXw4T2qIbddAbw5vxE+vEc15LYrgA/vUQ217Qrhw5vKQ+2jQvhywqp9VAgf3qMach8VwIf3qIbcRwXw4T2qIfdRAXx4j2rIfVQAH95UHnIfFcCXE1buowL431MqD7W+6u1vDXfQQ227QvhyB622XSF8+YUst10BfLmDltuuAL7cQcttVwBf7qDltiuAL3fQan0VwpcTVu2jQvhywqp9VPRClvuoAL7cQct9VABf7qDlPqpneLmPCuDLHbTcRwXw5Q5a7qMC+HLCqn1UL5fKan3V299a7qDVtiuCV9uuED5sbB5y29XzI1NuuwJ4d34DfLmDltuuAL7cQcttVwBf7qDVtiuEL3fQatsVwpcTVm27QvjyC1ltu0L4cgettl0hfLmDVtuuEL7cQattVwhf7qDVtiuELyes2naF8L+oVHbLsV7+1nIH7XZpEXy5g3a7tAi+/EJWu7QQvtxBq21XCF/uoNW2K4QPd9BX2XZ1lW1XV9l2dZVtV9cnnLBX2XZ1yW1Xjy/kS267AvhwB33JbVfP8HLbFcCHO+hLbrsC+HAHfZVtV1fZdnWVbVdX2XZ1qW1XcP7tUtuuCF5tu4JrUpfadoXw4auBl9p2hfDmhEX48NXAy62vIvjwTaPL7aMi+PBNo8vtoyL48NXAS+2jQvjw1cBL7aNC+PDVwEvto0L4csKqfVQI707Yxwtql9pHhfDhq4GX2kf17jLgpdZXvf2t6vx+3mC71LYrhA9fDbzUtiuED+9RXXLb1TO83HYF8OU9KrntCuDLe1Ry2xXAl/eo1LYrhA9vKl9qHxXClxNW7aNC+PIeldxHBfDlPSq5jwrgy3tUch8VwJf3qOQ+KoAvbyrLfVQAX05YuY8K4H9RqazWV739reUOWm27QvhyB622XSF8+YUst10BfLmDltuuAL7cQcttVwBf7qDltiuAL3fQan0VwpcTVu2jQvhywqp9VPRClvuoAN6dsABf7qDlPiqAL3fQch8VwIc76Cn3UQF8uIOech8VwIcTdn7MCftuqTzV+qq3vzXcQU+17Qrhwx30VNuuCF5uu3p8ZE657Qrgwx30lNuuAN6c3wgf7qCn3HYF8OEOeqptVwgf7qCn2naF8OWEVduuEL78QlbbrhA+3EFPte0K4cMd9FTbrhC+3EGrbVcIX+6g1bYrhC8nrNp2hfC/qFR2y7Fe/tZyB+12aRF8uYN2u7QIvvxCVru0EL7cQattVwhf7qDVtiuEL3fQZdvVLNuuZtl2Ncu2q1m2Xc2y7WrKbVfPL2S57Qrgyx203HYF8OUOWm67eoaX264AvtxBl21Xs2y7mmXb1SzbrqbadgXn36badoXwmauBX69JTbXtiuDVtiuED18NnGrbFcKHrwZOt76K4MM3jabbR0Xw4ZtG0+2jIvjw1cCp9lEhfPhq4FT7qBA+fDVwqn1UCF9OWLWPCuHdCft4QW2qfVQIH74aONU+qpeXAdX6qre/VZ3fsMGmtl0hvDq/CT5sbJ5y29XzcoDcdgXw5T0que3qCf74yG1XAN/do7rhu3tUN3x3j+qGNycswnc3lW/4bsLe8N2EveG7CXvDd/eojo/cRwXw3T2qG767R3XDd/eobnh3wgJ8d4/qhu9uKt/w3U3lG767qXzDlxNW7qMC+F9TKt/fqi6VX/7Wbgd9w5vzG+G7HfQN3zU23/DlF7LcdgXw5Q5abrsC+HIHLbddAXy5g5bbrgC+3EGr9VUIX05YtY8K4csJq/ZR0QtZ7qMC+HIHLfdRAbw7YQG+3EHLfVQAX+6g5T4qgC930HIfFcCXE1bto3q5VFbrq97+VnN+UxOqtl0hfLmDVtuuEL78Qpbbrp7h5bYrgC930HLbFcCXO2i57Qrgyx202naF8OUOWm27QvhywqptVwhffiGrbVcIX+6g1bYrhC930GrbFcKXO2i17Qrhyx202naF8OWEVduuEP4XlcpuOdbL31ruoN0uLYIvd9BulxbBl1/IapcWwpc7aLXtCuHLHbTadoXw5Q46bLu64csddNh2dcOHE3Yp266Wsu1qkduuHl/Ii9x2BfDuhAX4cAe9yG1XAB/uoBe57Qrgwx30UrZdLWXb1VK2XS1l29Witl09n3+74d0XFwA+czXwyzWpGz5zNfA7+O7VwBu+ezXwWNS2K4TvXg284btXA2/47k2jG96dsADfvWl0w3dvGt3w3auBN3z3auAN370aeCxqHxXCd68G3vDdq4E3fDlh1T4qhHcn7NMFtRvenbAA370aeMOrE/bVZcBFra96+VvVtivYYFvUtiuE714NvOHDxuZFbrt6Xg6Q264APrxHtchtVwAf3qNa5LarZ3i57Qrgy3tUatsVwoc3lRe1jwrhywmr9lEhfHmPSu6jAvjyHpXcRwXw5T0quY8K4Mt7VHIfFcCXN5XlPiqALyes3EcF8L+oVFbrq97+1nIHrbZdIXy5g1bbrhC+/EKW264AvtxBy21XAF/uoOW2K4Avd9By2xXAlztotb4K4csJq/ZRIXw5YdU+Knohy31Uz/ByHxXAlztouY8K4MsdtNxHBfDlDlruowL4cgct91EBfDhhV7WP6t1SeVXrq97+1nAHvaptVwhvzm+EDxubV7nt6vGRucptVwAf7qBXue3qGV5uuwL4cAe9ym1XAB/uoFe17Qrhwx30qrZdIXw5YdW2K4Qvv5DVtiuED3fQq9p2hfDhDnpV264QPtxBr2rbFcKHO+hVbbtC+HLCqm1XCP+LSmW3HOvlby130G6XFsGXO2i3S4vgyy9ktUsL4csdtNp2hfDlDlptu0L4cgddtl2tZdvVWrZdrWXb1Vq2Xa1l29Uqt109v5DltiuAL3fQctsVwLsTFuDLHbTcdgXw5Q66bLtay7artWy7Wsu2q1Vtu4Lzb6vadoXw5oSFa1Kr2naF8OGrgavadoXw4auBq9t2BfBufRXBh28arW4fFcGHbxqtbh8VwYevBq5qHxXCh68GrmofFcKHrwauah8VwpcTVu2jQnh3wj5eUFvVPiqED18NXNU+qpeXAdX6qre/VZ3fsMGmtl0RvNp2hfBhY/Mqt109LwfIbVcAb85vhC/vUcltVwBf3qOS264APrxHtaltVwgf3lTe1D4qhA8n7PYJJ+ym9lHBZsMm91EBfHiPapP7qAA+vEe1yX1UAB/eo9rkPiqAD28qb3IfFcCXE1buowL431Mqb2p91dvfGu6gN7XtCuHDHfSmtl0hfPmFLLddAXy4g97ktiuAD3fQm9x2BfDlDlpuuwL4cget1lchfDlh1T4qhC8nrNpHRS9kuY8K4MsdtNxH9Qwv91EBfLmDlvuoAL7cQct9VABf7qDlPiqALyes2kf1cqms1le9/K1q2xU1oWrbFcKXO2i17Qrh3fn9/MiU264AvtxBy21XAF/uoOW2q2d4ue0K4MsdtNp2hfDlDlptu0L4csKqbVcIX34hq21XCF/uoNW2K4Qvd9Bq2xXClztote0K4csdtNp2hfDlhFXbrhD+F5XKbjnWy99a7qDdLi2CL3fQbpcWwZdfyGqXFsKXO2i17Qrhyx202naF8OUOumy72sq2q61su9rKtqutbLvayrarTW67en4hy21Xj/C73HYF8OEOepfbrgA+3EHvH3fCAny4g97Ltqu9bLvay7arvWy72tW2Kzj/tqttVwifuRr49ZrUrrZdIbw5YRE+fDVwV9uuED58NXB366sIPnzTaHf7qAg+fNNod/uoCD58NXBX+6gQPnw1cFf7qBA+fDVwV/uoEL6csGofFcK7E/bxgtqu9lEhfPhq4K72Ub27DLir9VVvf6s6v5832Ha17Qrhw1cDd7XtiuDltqvH5YBdbrsC+PAe1S63XQG8Ob8RPrxHtcttVwAf3qPa1bYrhA9vKu9qHxXClxNW7aNC+PIeldxHBfDlPSq5jwrgy3tUch8VwJf3qOQ+KoAvbyrLfVQAX05YuY8K4H9RqazWV739reUOWm27QvhyB622XSF8+YUst10BfLmDltuuAL7cQcttVwBf7qDltiuAL3fQan0VwpcTVu2jQvhywqp9VPRClvuoAL7cQct9VABf7qDlPqpneLmPCuDLHbTcRwXw5Q5a7qMC+HLCqn1UL5fKan3V299a7qDVtiuAP9S2K4QPG5sPue3q8ZF5yG1XAO/Ob4APd9CH3HYF8OEO+pDbrgA+3EEfatsVwoc76ENtu0L4csKqbVcIH34hH2rbFcKHO+hDbbtC+HAHfahtVwgf7qAPte0K4cMd9KG2XSF8OWHVtiuE/z2l8uGWY738reUO2u3SIvhyB+12aRF8+YWsdmkhfLmDVtuuEL7cQattVwhf7qDLtqujbLs6yraro2y7Osq2q6NsuzrktqvnF7LcdgXw5Q5abrt6hpfbrgC+3EHLbVcAX+6gy7aro2y7Osq2q6NsuzrUtis4/3aobVcEr7ZdwTWpQ227Qvjw1cBDbbtCeHPCInz4auDh1lcRfPim0eH2URF8+KbR4fZREXz4auCh9lEhfPhq4KH2USF8+GrgofZRIXw5YdU+KoR3J+zjBbVD7aNC+PDVwEPto3p5GVCtr3r7W9X5DRtsatsVwoevBh5q2xXCl/eo5LarZ3i57Qrgy3tUctsVwJf3qOS2K4Av71GpbVcIX95UVvuoED6csKfaR4Xw4T2qU+6jAvjwHtX5cScswIf3qE65jwrgw3tUp9xHBfDhTeVT7qMC+HLCyn1UAP97SuVTra96+1vDHfSptl0hfLiDPtW2K4Qvv5DltiuAD3fQp9x2BfDhDvqU264APtxBn3LbFcCHO+hTra9C+HLCqn1UCF9OWLWPil7Ich8VwLsTFuDLHbTcRwXw5Q5a7qMC+HIHLfdRAXy5g5b7qAC+nLBqH9XLpbJaX/X2t5Y7aLXtCuHLHbTadkXwctvV8yNTbrsC+HIHLbddAbw5vxG+3EHLbVcAX+6g1bYrhC930GrbFcKXE1Ztu0L48gtZbbtC+HIHrbZdIXy5g1bbrhC+3EGrbVcIX+6g1bYrhC8nrNp2hfC/qFR2y7Fe/tZyB+12aRF8uYN2u7QIvvxCVru0EL7cQattVwhf7qDVtiuEL3fQZdvVWbZdnWXb1Vm2XZ1l29VZtl2dctvV8wtZbrsC+HIHLbddAXy5g5bbrh7hh9x2BfDhDnqUbVejbLsan3DCjrLtaqhtV3D+bahtVwifuRr49ZrUUNuuCF5tu0L48NXAobZdIXz4auBw66sIPnzTaLh9VAQfvmk03D4qgg9fDRxqHxXCh68GDrWPCuHDVwOH2keF8OWEVfuoEN6dsI8X1IbaR4Xw4auBQ+2jencZcKj1VW9/qzq/nzfYhtp2hfDq/Cb4sLF5yG1Xj8sBQ267AvjwHtWQ266e4eW2K4AP71ENue0K4MN7VENtu0L48KbyUPuoEL6csGofFcKX96jkPiqAL+9RyX1UAF/eo5L7qAC+vEcl91EBfHhTech9VABfTli5jwrgf1GprNZXvf2t5Q5abbtC+HIHrbZdIXz5hSy3XQF8uYOW264AvtxBy21XAF/uoOW2K4Avd9BqfRXClxNW7aNC+HLCqn1U9EKW+6gAvtxBy31UAO9OWIAvd9ByHxXAlztouY8K4MsdtNxHBfDlhFX7qF4uldX6qre/1Zzf1ISqbVcIX+6g1bYrhC+/kOW2q0f4S267AvhwB33JbVcAH+6gr485YRE+3EFfatsVwoc76Ettu0L4csKqbVcIH34hX2rbFcKHO+hLbbtC+HAHfaltVwgf7qAvte0K4cMd9KW2XSF8OWHVtiuE/z2l8uWWY738reEO+nK7tAg+3EFfbpcWwZdfyGqXFsKXO2i17Qrhyx202naF8OUOumy7usq2q6tsu7rKtqurbLu6yrarS267en4hy21XAO9OWIAvd9By2xXAlztoue0K4MsddNl2dZVtV1fZdnWVbVeX2nYF598ute0K4TNXA79ek7rUtiuED18NvNS2K4JX264QPnw18HLrqwg+fNPocvuoCD580+hy+6gIPnw18FL7qBA+fDXwUvuoED58NfBS+6gQvpywah8VwrsT9vGC2qX2USF8+GrgpfZRvbwMqNZXvfytatsVbbCpbVcIH74aeKltVwhvzm9aDpDbrgC+vEclt10BfHmPSm67eoaX264AvrxHpbZdIXx5U1nto0L4csKqfVQIX96jkvuoAD68RzXlPiqAD+9RTbmPCuDDe1Tz405YgA9vKk+5jwrgwwk75T4qgP89pfJU66ve/tZwBz3VtiuED3fQU227QvjwC3nKbVcAH+6gp9x2BfDhDnrKbVcAH+6gp9x2BfDhDnqq9VUIX05YtY8K4csJq/ZR0QtZ7qN6hpf7qAC+3EHLfVQAX+6g5T4qgC930HIfFcCXO2i5jwrgywmr9lG9XCqr9VVvf2u5g1bbrhDenN8IHzY2T7nt6vmRKbddAXy5g5bbrp7h5bYrgC930HLbFcCXO2i17Qrhyx202naF8OWEVduuEL78QlbbrhC+3EGrbVcIX+6g1bYrhC930GrbFcKXO2i17Qrhywmrtl0h/C8qld1yrJe/tdxBu11aBF/uoN0uLYIvv5DVLi2EL3fQatsVwpc7aLXtCuHLHXTZdjXLtqtZtl3Nsu1qlm1Xs2y7mnLb1fMLWW67AvhyBy23XQG8O2EBvtxBy21XAF/uoMu2qxm2XZ2fsO3qhu8m7A2fuWn05fzbDe++uADw5oR9viZ1w2euBn4H370aeMN3rwbe8N2rgTd892rg+XHrqwi+e9Pohu/eNLrhuzeNbnh3wgJ892rgDd+9GnjDd68G3vDdq4E3fPdq4PlR+6gQvpywah8VwrsT9umC2g3vTliA714NvOHVCfvmMuD9repAfvlb1fn9uMF2w6vzG+DVtiuE7xqbb/juHtUN392juuHN+Y3w3T2qG767R3XDd/eobvjuHtUN392jOj9q2xXCdzeVb/hywqp9VAhfTli1j4o2G+Q+KoDv7lHd8N09qhu+vEcl91EBfHmPSu6jAvjupvIN705YgC8nrNxHBfC/qFRW66ve/tZyB622XSF8uYNW264QvvxCltuuAL7cQcttVwBf7qDltiuAL3fQctsVwJc7aLW+CuHLCav2USF8OWHVPip6Ict9VABf7qDlPqpneLmPCuDLHbTcRwXw5Q5a7qMC+HIHLfdRAXw5YdU+qpdLZbW+6uVvVduuqAlV264QvtxBq21XCO/O7+dHptx2BfDlDlpuuwL4cgctt109wi9y2xXAhzvoRW27QvhwB718wgm7qG1XCB9O2EVtu4IX8qK2XSF8uINe1LYrhA930IvadoXw4Q56UduuED7cQS9q2xXClxNWbbtC+N9TKi9uOdbL3xruoBe3S4vgwx304nZpEXz5hax2aSF8uINe1LYrhC930GrbFcKXO+iy7Wop266Wsu1qKduulrLtainbrha57er5hSy3XT3Dy21XAF/uoOW2K4Avd9By2xXAlzvosu1qKduulrLtainbrha17QrOvy1q2xXCZ64Gfr0mtahtVwhvTliED18NXNS2K4QPXw1c3Poqgg/fNFrcPiqCD980Wtw+KoIPXw1c1D4qhA9fDVzUPiqED18NXNQ+KoQvJ6zaR4Xw7oR9vKC2qH1UCB++GriofVQvLwOq9VVvf6s6v2GDTW27Qvjw1cBFbbsieLnt6nk5QG67AvjyHpXcdgXw5vxG+PIeldx2BfDlPSq17Qrhy5vKah8VwpcTVu2jQvjyHpXcRwXw5T0quY8K4Mt7VHIfFcCH96hWuY8K4MObyqvcRwXw4YRdP+GEXdU+qndL5VWtr3r7W8Md9Kq2XSF8uINe1bYrhA+/kFe57Qrgwx30KrddAXy4g17ltiuAD3fQq9x2BfDhDnpV66sQvpywah8VwpcTVu2johey3EcF8OEOepX7qAA+3EGvch/VM7zcRwXw5Q5a7qMC+HIHLfdRAXw5YdU+qpdLZbW+6u1vLXfQatsVwattVwgfNjavctvV8yNTbrsCeHd+A3y5g5bbrgC+3EHLbVcAX+6g1bYrhC930GrbFcKXE1Ztu0L48gtZbbtC+HIHrbZdIXy5g1bbrhC+3EGrbVcIX+6g1bYrhC8nrNp2hfC/qFR2y7Fe/tZyB+12aRF8uYN2u7QIvvxCVru0EL7cQattVwhf7qDVtiuEL3fQZdvVWrZdrWXb1Vq2Xa1l29Vatl2tctvV8wtZbrsC+HIHLbddPcPLbVcAX+6g5bYrgC930GXb1Vq2Xa1l29Vatl2tatsVnH9b1bYrgN/Utiu4JrWpbVcIH74auKltVwhvTliED18N3Nz6KoIP3zTa3D4qgg/fNNrcPiqCD18N3NQ+KoQPXw3c1D4qhA9fDdzUPiqELyes2keF8O6Efbygtql9VAgfvhq4qX1U7y4Dbmp91dvfqs7v5w22TW27Qvjw1cBNbbtC+PAe1Sa3XT3Dy21XAB/eo9rktiuAD+9RbXLbFcCH96g2te0K4cObypvaR4Xw5YRV+6gQPrxHtcl9VAAf3qPa5D4qgA/vUW1yHxXAh/eoNrmPCuDDm8qb3EcF8OWElfuoAP4XlcpqfdXb31ruoNW2K4Qvd9Bq2xXCl1/IctsVwJc7aLntCuDLHbTcdgXw5Q5abrsC+HIHrdZXIXw5YdU+KoQvJ6zaR0UvZLmPCuDdCQvw5Q5a7qMC+HIHLfdRAXy5g5b7qAC+3EHLfVQAX05YtY/q5VJZra96+1vLHbTadoXw5Q5abbsieLnt6vmRKbddAXy5g5bbrgDenN8IX+6g5bYrgC930GrbFcKHO+hdbbtC+HDC7mrbFcKHX8j7x52wAB/uoHe17Qrhwx30rrZdIXy4g97VtiuED3fQu9p2hfDlhFXbrhD+95TKu1uO9fK3hjvo3e3SIvhwB727XVoEX34hq11aCB/uoHe17Qrhwx30rrZdIXy4g97Ltqu9bLvay7arvWy72su2q71su9rltqvnF7LcdgXw5Q5abrsC+HIHLbddPcPLbVcAX+6gy7arvWy72su2q71su9rVtis4/7arbVcIn7ka+PWa1K62XRG82naF8OGrgbvadoXw4auBu1tfRfBhH9Ve9lHtZR/VXvZR7XIf1fN/q5T7qAC+/IaV+6gAvvyGlfuoAL78hpX7qAD+hxN2246/i1rbdn2+8lwynuni+WkRFPL8cFpt++fv/+bt/pvkV55VxrPJeHYZzyHjOWU8Q8ZzyXimi+enNULII5vPl2w+X7L5fMnm8yWbz5dsPl+y+XzJ5vMlm89TNp+nbD5P2Xyesvk8ZfN5yubzlM3nKZvPUzafp2s+Hx/XfD4+rvl8fFzz+fi45vPxcc3n4+Oaz8fHNZ+Pj2s+Hx/XfD4+svm8yObzIpvPi2w+L7L5vMjm8yKbz4tsPi+y+bzI5vMim8+rbD6vsvm8yubzKpvPq2w+r7L5vMrm8yqbz6tsPq+y+bzJ5vMmm8+bbD5vsvm8yebzJpvPm2w+b7L5vMnm8yabz7tsPv/4L5rP/a+MYj3nNzyrjGeT8ewynkPGc8p4hoznkvFMF8+P/3iWeGTz+ZDN50M2nw/ZfD5k8/mQzedDNp8P2Xz+8d9pjuWvOnkd+5ffgxw//tNL4llkPKuMZ5Px7DKeQ8ZzyniGjOeS8cjm85DN5yGbz0M2n4dsPg/ZfB6y+Txk83nI5vOQzechm8+XbD5fsvl8yebzJZvPl2w+X7L5fMnm8yWbz5dsPl+y+Txl83nK5vOUzecpm89TNp+nbD5P2Xyesvk8ZfN5uubz+XHN5/Pjms/nxzWfz49rPp8f13w+P675fH5c8/n8uObz+XHN5/Mjm8+LbD4vsvm8yObzIpvPi2w+L7L5vMjm8yKbz4tsPi+y+bzK5vMqm8+rbD6vsvm8yubzKpvPq2w+r7L5vMrm8yqbz5tsPm+y+bzJ5vMmm8+bbD5vsvm8yebzJpvPm2w+b7L5vMvm8y6bz7tsPu+y+bzL5vMum8+7bD7vsvm8y+bzLpvPh2w+H7L5fMjm8yGbz4dsPh+y+XzI5vMhm8+HbD7Lfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94yn4/eMp+P3jKfj94/vjvB/97jsVf1/h77Pu65v78Dy/7OP5+6v0/j/Xrty6/6FtX87fOa/n7rXOOr/BbGX4vwx9l+FMMPz/bX3He/JzLV/hRhr/K8LMLPz7m/EZ4cyAjvDlhEd6csAhvTliENycswocTdnzCCTs+4YQdH3fCzr8Yc/mcX+AXd8ICvDthAd6dsADvTliAdycswKvfsK/WPGMxB/Lb32rOb+gmxmLOb4Q35zfBr+qGm+DLL+S1/EJeyy/kH//V+6vw5RfyWn4hr+UX8lp+Ia/lDnord9BbOWG3csJu5YT9cW/Bmy/kzZ2wAO9OWIB3JyzAuxMW4Msd9F7uoPdyB72XO+i93EH/uHni/8dqc/9FlfWurqyhj9vLHfRe7qD3cgd9lF/IR/mFfJRfyEf5hfzjZpJX4csd9FHuoI9yB32UO+ij3EGf5YQ9ywl7lhP2LL+Qf9wt8yp8uYM+yx30We6gz3IHfZY76FHuoEe5gx7lDnqUE/bH7UCvwqtL5fGZfxuz+w+LX+HVLTHBq1tigle3xASvbokB/lJvKhO8Wq5B8GpbxpjHP+Dn1zl/qW0ZBG9OWIT/RX+2vX7RL42u8l95r/Jfea/yX3ndLi2CL3fQatsVwpf/yqu2XSF8+a+8ZdvVKNuuRtl2Ncq2q6tsu7rKtqurbLu6yrar6+NO2McO+pLbrgA+/FfeS267AvjwX3mvsu3qKtuurrLt6irbrq6y7eoq264ute0K4X9PqXy59VUvf2u4g77KtqurbLu61LYrhC+/kMu2q6tsu7rKtqurbLu6yrarq2y7usq2q6tsu7rKtqurbLu6yrarS267AvjyC7lsu7rKtqurbLu6yrarq2y7usq2q6tsu7rKtqtLbbtC+HLCqn1UCP+LSmW3vurlby130GrbFcKXO2i17Qrhyy/ksu3qKtuurrLt6irbrq6y7eoq266usu3qKtuurrLt6pLbrgC+nLBy2xXAl1/IZdvVVbZdXWXb1VW2XV1l29VVtl1dZdvVVbZdXWrbFcKXE1Ztu0L4X1Qqu+VY736r26UFTajbpUXw5Q7a7dIieHd+Pz8y1S4thC930GrbFcKXO2i17Yrg1bYrhC930GXb1VW2XV1l29VVtl1dZdvVJbddPb+Q5bYrgA930FNuuwL4cAc95bYrgA930PPjTliAD3fQs2y7mmXb1SzbrqbadvXfeP/XL//FbKptVwifubjwHbz74gLAuy8uALw5YRE+c9PoO/jMTaPv4DM3jb6Dz9w0+g6+nLBuHxXBlxNW7aNC+HLCqn1UCF9OWLWPCuHLCav2UcH5t6n2URG82keF8OGrgVPto0L4TMJ+B59J2O/g3Ql7/mPHbJxf6z61jwrh3QkL8O6EBXh3wj7Dq31UCO9O2McDq1Pto0L48F3eqfZRvftbganWV739rer8fl5wn27bFcGHbyLMso9qqn1UsDs41T4qhA9vKs+yj2qWfVSz7KOaZR/VLPuoZtlHNcs+qln2Uc2yj2qWfVRT7qN6XnyU+6gAvrypXPZRzbKPapZ9VLPso5plH9Us+6hm2Uc1yz6qWfZRTbWP6uVSWa2vevtbyx2023ZF8OUOuuyjmmofFT0y1T4qhC930GUf1Sz7qGbZRzXLPqpZ9lHNso9qln1Us+yjmmUf1Sz7qKbcR/X8Qpb7qAC+3EGXfVSz7KOaYR/V+IR9VDd8t4O+4bsd9A3f7aBv+G7C3vDdhL3hf02pfH/rrznje39rt4O+4bsd9Pi4bVcE372JcMN3X8g3fPeFfMO78xvgux30Dd/toG/4bgd9w3c76Bu+20GPj9p2hfDdDvqGLyes2naF8OWEVduu6IWstl0hfLeDvuG7HfQNX+6g1bYrhC930GrbFcKXO2i17Qrhywmrtl0h/C8qld1yrJe/tdxBu11aBF/uoN0uLYIvv5DVLi2EL3fQatsVwpc7aLXtCuHLHXTYdnXDlzvosO3qhi8nbNh2dcOXE1Zuu3p+IcttVwBf7qDltqtneLntCuDLHbTcdgXw5Q46bLu64csddNh2dcOXE1Ztu3o+yHTDd68Gjo/advV83+WG7940uuG7N41u+O5NoxvenLAIn7ka+B185mrgd/Ddm0Y3fPem0Q3fvWk0Pm4fFcG7Exbg3QkL8O6EBXh3wgJ892rgDd+9GnjDlxNW7aNCeHfCPl1Qu/9bmzthAb57NfCGVyfsu8uAan3V29+qzm/YYFPbrhC+ezXwhu8am2/48h6V3Hb1CL/IbVcAH96jWuS2K4AP71EtH3PCInx4j2pR264QPrypvKh9VAhfTli1jwrhw3tUi9xHBfDhPapF7qMC+PAe1SL3UQF8eI9qkfuoAD68qbzIfVQAX05YuY8K4H9Pqbyo9VVvf2u4g17UtiuED3fQi9p2hfDlF7LcdgXw5Q5abrsC+HIHLbddAXy5g5bbrgC+3EGr9VUIX05YtY8K4csJq/ZR0QtZ7qMCeHfCAny5g5b7qAC+3EHLfVQAX+6g5T4qgC930HIfFcCXE1bto3q5VFbrq97+1nIHrbZdIXy5g1bbrghebrt6fmTKbVcAX+6g5bYrgDfnN8KXO2i57Qrgyx202naF8OUOWm27QvhywqptVwhffiGrbVcIX+6g1bYrhC930GrbFcKXO2i17Qrhyx202naF8OWEVduuEP4XlcpuOdbL31ruoN0uLYIvd9BulxbBl1/IapcWwpc7aLXtCuHLHbTadoXw5Q66bLtayrartWy7Wsu2q7Vsu1rLtqv1407YxxfyKrddAXy4g17ltiuAD3fQq9x29Qwvt10BfLiDXsu2q7Vsu1rLtqu1bLta1bYrOP+2qm1XCJ+5Gvj1mtSqtl0RvNp2hfDhq4Gr2naF8OGrgatbX0Xw4ZtGq9tHRfDhm0ar20dF8OGrgavaR4Xw4auBq9pHhfDhq4Gr2keF8OWEVfuoEN6dsI8X1Fa1jwrhw1cDV7WP6t1lwFWtr3r7W9X5/bzBtqptVwivzm+CDxubV7nt6nk5QG67AvjwHtUqt109w8ttVwBf3qOS264AvrxHpbZdIXx4U3lV+6gQvpywah8Vwpf3qOQ+KoAv71HJfVQAX96jkvuoAL68RyX3UQF8eVNZ7qMC+HLCyn1UAP+LSmW1vurtby130GrbFcKXO2i17Qrhyy9kue0K4MsdtNx2BfDlDlpuuwL4cgctt10BfLmDVuurEL6csGofFcKXE1bto6IXstxHBfDlDlruowJ4d8ICfLmDlvuoAL7cQct9VAAf7qA3uY8K4MMJu6l9VO+WyptaX/X2t5rzG5rQTW27QvhwB72pbVcIH34hb3Lb1TO83HYF8OEOepPbrgA+3EFvctsVwIc76E1tu0L4cAe9qW1XCF9OWLXtCuHLL2S17Qrhwx30prZdIXy4g97UtiuED3fQm9p2hfDlDlptu0L4csKqbVcI/4tKZbcc6+VvLXfQbpcWwZc7aLdLi+DLL2S1Swvhyx202naF8OUOWm27QvhyB122XW1l29VWtl1tZdvVVrZdbWXb1Sa3XT2/kOW2K4B3JyzAlztoue0K4MsdtNx2BfDlDrpsu9rKtqutbLvayrarTW27gvNvm9p2hfCZq4Ffr0ltatsVwoevBm5q2xXBq21XCB++Gri59VUEH75ptLl9VAQfvmm0uX1UBB++GripfVQIH74auKl9VAgfvhq4qX1UCF9OWLWPCuHdCft4QW1T+6gQPnw1cFP7qF5eBlTrq17+VrXtijbY1LYrhA9fDdzUtiuEN+c3LQfIbVcAX96jktuuAL68RyW3XT3C73LbFcCH96h2te0K4cObyvsnnLC72keF8OGE3dU+Kths2OU+KoAP71Htch8VwIf3qHa5jwrgw3tUu9xHBfDhTeVd7qMC+HLCyn1UAP97SuVdra96+1vDHfSutl0hfLiD3tW2K4Qvv5DltiuAD3fQu9x2BfDlDlpuuwL4cgctt10BfLmDVuurEL6csGofFcKXE1bto6IXstxH9Qwv91EBfLmDlvuoAL7cQct9VABf7qDlPiqAL3fQch8VwJcTVu2jerlUVuur3v7Wcgettl0hvDm/ET5sbN7ltqvnR6bcdgXw5Q5abrt6hpfbrgC+3EHLbVcAX+6g1bYrhC930GrbFcKXE1Ztu0L48gtZbbtC+HIHrbZdIXy5g1bbrhC+3EGrbVcIX+6g1bYrhC8nrNp2hfC/qFR2y7Fe/tZyB+12aRF8uYN2u7QIvvxCVru0EL7cQattVwhf7qDVtiuEL3fQZdvVXrZd7WXb1V62Xe1l29Vetl0dctvV4wv5kNuuAD7cQR9y2xXAuxMW4MMd9CG3XQF8uIM+yraro2y7Osq2q6NsuzrUtis4/3aobVcIb05YuCZ1qG1XCB++GniobVcIH74aeLhtVwDv1lcRfPim0eH2URF8+KbR4fZREXz4auCh9lEhfPhq4KH2USF8+GrgofZRIXw5YdU+KoR3J+zjBbVD7aNC+PDVwEPto3p3GfBQ66ve/lZ1fj9vsB1q2xXBq21XCB82Nh9y29XzcoDcdgXw5vxG+PAe1SG3XQF8eI/qkNuuAL68R6W2XSF8eFP5UPuoEL6csGofFcKX96jkPiqAL+9RyX1UAF/eo5L7qAC+vEcl91EBfHlTWe6jAvhywsp9VAD/i0pltb7q7W8td9Bq2xXClztote0K4csvZLntCuDLHbTcdgXw5Q5abrsC+HIHLbddAXy5g1brqxC+nLBqHxXClxNW7aOiF7LcRwXw5Q5a7qN6hpf7qAC+3EHLfVQAX+6g5T4qgC930HIfFcCXE1bto3q5VFbrq9791lNtu4Im9FTbrhA+3EGfatsVwrvz+/GRecptVwAf7qBPue0K4MMd9Cm3XT3Dy21XAB/uoE+17Qrhwx30qbZdIXw5YdW2K4QPv5BPte0K4cMd9Km2XSF8uIM+1bYrhA930KfadoXw4Q76VNuuEL6csGrbFcL/olLZLcd6+VvLHbTbpUXw5Q7a7dIi+PILWe3SQvhyB622XSF8uYNW264QvtxBl21XZ9l2dZZtV2fZdnWWbVdn2XZ1ym1Xzy9kue3qGV5uuwL4cgctt10BfLmDltuuAL7cQZdtV2fZdnWWbVdn2XZ1qm1XcP7tVNuuED5zNfDrNalTbbtCeHPCInz4auCptl0hfPhq4OnWVxF8+KbR6fZREXz4ptHp9lERfPhq4Kn2USF8+GrgqfZRIXz4auCp9lEhfDlh1T4qhHcn7OMFtVPto0L48NXAU+2jenkZUK2vevtb1fkNG2xq2xXCh68GnmrbFcHLbVfPywFy2xXAl/eo5LYrgDfnN8KX96jktiuAL+9RqW1XCB/eVB5qHxXChxN2qH1UCB/eoxofd8ICfHiPash9VAAf3qMach8VwIf3qIbcRwXw4U3lIfdRAXw5YeU+KoD/PaXyUOur3v7WcAc91LYrhA930ENtu0L48gtZbrsC+HAHPeS2K4APd9BDbrsC+HAHPeS2K4Avd9BqfRXClxNW7aNC+HLCqn1U9EKW+6gAvtxBy31UAF/uoOU+qmd4uY8K4MsdtNxHBfDlDlruowL4csKqfVQvl8pqfdXb31ruoNW2K4JX264QPmxsHnLb1fMjU267Anh3fgN8uYOW264AvtxBy21XAF/uoNW2K4Qvd9Bq2xXClxNWbbtC+PILWW27QvhyB622XSF8uYNW264QvtxBq21XCF/uoNW2K4QvJ6zadoXwv6hUdsuxXv7WcgftdmkRfLmDdru0CL78Qla7tBC+3EGrbVcIX+6g1bYrhC930GXb1SjbrkbZdjXKtqtRtl2Nsu1qyG1Xzy9kue0K4MsdtNx29Qh/yW1XAB/uoC+57Qrgwx309XEnLMCHO+irbLu6yrarS227gvNvl9p2RfBq2xVck7rUtiuED18NvNS2K4Q3JyzCh68GXm59FcGHbxpdbh8VwYdvGl1uHxXBh68GXmofFcKHrwZeah8VwoevBl5qHxXClxNW7aNCeHfCPl5Qu9Q+KoQPXw281D6qd5cBL7W+6u1vVef38wbbpbZdIXz4auCltl0hfHiP6pLbrp7h5bYrgA/vUV1y2xXAh/eoLrntCuDDe1SX2naF8OFN5Uvto0L4csKqfVQIX96jkvuoAL68RyX3UQF8eY9K7qMC+PIeldxHBfDlTWW5jwrgywkr91EB/C8qldX6qre/tdxBq21XCF/uoNW2K4Qvv5DltiuAL3fQctsVwJc7aLntCuDLHbTcdgXw5Q5ara9C+HLCqn1UCF9OWLWPil7Ich8VwLsTFuDLHbTcRwXw5Q5a7qMC+HIHLfdRAXy5g5b7qAC+nLBqH9XLpbJaX/X2t5Y7aLXtCuHLHbTadgXwU267enxkTrntCuDDHfSU264A3pzfCB/uoKfcdgXw4Q56qm1XCB/uoKfadoXw5YRV264QPvxCnmrbFcKHO+iptl0hfLiDnmrbFcKHO+iptl0hfLiDnmrbFcKXE1Ztu0L431MqT7cc6+VvDXfQ0+3SIvhyB+12aRF8+YWsdmkhfLmDVtuuEL7cQattVwhf7qDLtqtZtl3Nsu1qlm1Xs2y7mmXb1ZTbrp5fyHLbFcCXO2i57Qrgyx203Hb1DC+3XQF8uYMu265m2XY1y7arWbZdTbXtCs6/TbXtCuEzVwO/XpOaatsVwattVwgfvho41bYrhA9fDZxufRXBh28aTbePiuDDN42m20dF8OGrgVPto0L48NXAqfZRIXz4auBU+6gQvpywah8VwrsT9vGC2lT7qBA+fDVwqn1ULy8DqvVVb3+rOr9hg01tu0J4dX4TfNjYPOW2q+flALntCuDLe1Ry29UzvNx2BfDlPSq57Qrgy3tUatsVwpc3ldU+KoQvJ6zaR4Xw3T2q6yP3UQF8d4/qhu/uUd3w3T2qG96dsADf3aO64bubyjd8d1P5hu9uKt/w5YSV+6gA/teUyve3qkvll7+120Hf8Ob8RvhuB33Dd43NN3z3hXzDd1/IN3y3g74+ctsVwHc76Bu+20Hf8N0O+oY3JyzCdzvoG77bQd/w5YRV+6gQvpywah8VvZDlPiqAL3fQch8VwLsTFuDLHbTcRwXw5Q5a7qMC+HIHLfdRAXw5YdU+qpdLZbW+6u1vNec3NaFq2xXClztote0K4csvZLnt6hlebrsC+HIHLbddAXy5g5bbrgC+3EGrbVcIX+6g1bYrhC8nrNp2hfDlF7LadoXw5Q5abbtC+HIHrbZdIXy5g1bbrhC+3EGrbVcIX05Yte0K4X9RqeyWY738reUO2u3SIvhyB+12aRF8+YWsdmkhfLmDVtuuEL7cQattVwhf7qDDtqsbvtxBh21XN3w5YcO2qxu+nLBy29XzC1luuwJ4d8ICfLmDltuuAL7cQcttVwAf7qCXsu1qKduulrLtainbrpaPOWGfz7/d8O6LCwCfuRr45ZrUDZ+5GvgdfPdq4A3fvRp4LWrbFcJ3rwbe8N2rgTd896bRDe9OWIDv3jS64bs3jW747tXAG757NfCG714NvBa1jwrhu1cDb/ju1cAbvpywah8VwrsT9umC2g3vTliA714NvOHVCfvqMuCi1le9/K1q2xVssC1q2xXCd68G3vBhY/Mit109LgcsctsVwIf3qBa57Qrgw3tUi9x29Qwvt10BfHiPalHbrhA+vKm8qH1UCF9OWLWPCuHDe1SL3EcF8OU9KrmPCuDLe1RyHxXAl/eo5D4qgA9vKi9yHxXAlxNW7qMC+F9UKqv1VW9/a7mDVtuuEL7cQattVwhffiHLbVcAX+6g5bYrgC930HLbFcCXO2i57Qrgyx20Wl+F8OWEVfuoEL6csGofFb2Q5T6qZ3i5jwrgyx203EcF8OUOWu6jAvhyBy33UQF8uYOW+6gAvpywah/Vy6WyWl/19reWO2i17QrhzfmN8GFj8yK3XT0/MuW2K4Avd9By29Uj/Cq3XQF8uINe5bYrgA930OvHnLAIH+6gV7XtCuHDCbuqbVcIH34hr2rbFcKHO+hVbbtC+HAHvaptVwgf7qBXte0K4cMd9Kq2XSF8OWHVtiuE/z2l8uqWY738reEOenW7tAg+3EGvbpcWwZdfyGqXFsKXO2i17Qrhyx202naF8OUOumy7Wsu2q7Vsu1rLtqu1bLtay7arVW67en4hy21XAF/uoOW2K4B3JyzAlztoue0K4MsddNl2tZZtV2vZdrWWbVer2nYF599Wte0K4c0JC9ekVrXtCuHDVwNXte0K4cNXA1e37Qrg3foqgg/fNFrdPiqCD980Wt0+KoIPXw1c1T4qhA9fDVzVPiqED18NXNU+KoQvJ6zaR4Xw7oR9vKC2qn1UCB++GriqfVQvLwOq9VVvf6s6v2GDTW27Ini17Qrhw8bmVW67el4OkNuuAN6c3whf3qOS264AvrxHJbddAXx5j0ptu0L48qay2keF8OWEVfuoEL68RyX3UQF8eY9K7qMC+PAe1Sb3UQF8eI9qk/uoAD68qbx93AkL8OGE3eQ+KoD/PaXyptZXvf2t4Q56U9uuED7cQW9q2xXCh1/Im9x2BfDhDnqT264APtxBb3LbFcCHO+hNbrsC+HAHvan1VQhfTli1jwrhywmr9lHRC1nuowL4cAe9yX1Uz/ByHxXAlztouY8K4MsdtNxHBfDlDlruowL4csKqfVQvl8pqfdXL36q2XVETqrZdIXy5g1bbrhDend/Pj0y57Qrgyx203HYF8OUOWm67eoaX264AvtxBq21XCF/uoNW2K4QvJ6zadoXw5Rey2naF8OUOWm27QvhyB622XSF8uYNW264QvtxBq21XCF9OWLXtCuF/UanslmO9/K3lDtrt0iL4cgftdmkRfPmFrHZpIXy5g1bbrhC+3EGrbVcIX+6gy7arrWy72sq2q61su9rKtqutbLva5Lar5xey3Hb1DC+3XQF8uYOW264AvtxBy21XAF/uoMu2q61su9rKtqutbLva1bYrOP+2q21XCJ+5Gvj1mtSutl0hvDlhET58NXBX264QPnw1cHfrqwg+fNNod/uoCD5802h3+6gIPnw1cFf7qBA+fDVwV/uoED58NXBX+6gQvpywah8VwrsT9vGC2q72USF8+GrgrvZRvbsMuKv1VW9/qzq/nzfYdrXtCuHDVwN3te2K4OW2q8flgF1uuwL48B7VLrddAbw5vxE+vEe1y21XAB/eo9rVtiuED28q72ofFcKXE1bto0L48B7VLvdRAXx4j2qX+6gAPrxHtct9VABf3qOS+6gAPrypvMt9VABfTli5jwrgf1GprNZXvf2t5Q5abbtC+HIHrbZdIXz5hSy3XQF8uYOW264AvtxBy21XAF/uoOW2K4Avd9BqfRXClxNW7aNC+HLCqn1U9EKW+6gAvtxBy31UAF/uoOU+qmd4uY8K4MsdtNxHBfDlDlruowL4csKqfVQvl8pqfdXb31ruoNW2K4JX264QPmxs3uW2q+dHptx2BfDu/Ab4cgctt10BfLmDltuuAD7cQR9q2xXChzvoQ227Qvhwwh6fcMIeatsVvJAPte0K4cMd9KG2XSF8uIM+1LYrhA930IfadoXw4Q76UNuuEL6csGrbFcL/nlL5cMuxXv7WcAd9uF1aBB/uoA+3S4vgyy9ktUsL4cMd9KG2XSF8uIM+1LYrhC930GXb1VG2XR1l29VRtl0dZdvVUbZdHXLb1fMLWW67AvhyBy23XT3Dy21XAF/uoOW2K4Avd9Bl29VRtl0dZdvVUbZdHWrbFZx/O9S2K4JX267gmtShtl0hfPhq4KG2XSG8OWERPnw18HDrqwg+fNPocPuoCD580+hw+6gIPnw18FD7qBA+fDXwUPuoED58NfBQ+6gQvpywah8VwrsT9vGC2qH2USF8+GrgofZRvbwMqNZXvf2t6vyGDTa17Qrhw1cDD7XtCuHLe1Ry29UzvNx2BfDlPSq57Qrgy3tUctsVwJf3qNS2K4QvbyqrfVQIX05YtY8K4ct7VHIfFcCX96jkPiqAL+9RyX1UAF/eo5L7qAA+vKl8yn1UAB9O2FPuowL431Mqnx9zIL/9reEO+lTbrhA+3EGfatsVwodfyKfcdgXw4Q76lNuuAD7cQZ9y2xXAhzvoU267AvhwB32q9VUIX05YtY8K4csJq/ZR0QtZ7qMCeHfCAny4gz7lPiqAD3fQp9xHBfDlDlruowL4cgct91EBfDlh1T6ql0tltb7q7W8td9Bq2xXClztote2K4OW2q+dHptx2BfDlDlpuuwJ4c34jfLmDltuuAL7cQattVwhf7qDVtiuELyes2naF8OUXstp2hfDlDlptu0L4cgettl0hfLmDVtuuEL7cQattVwhfTli17Qrhf1Gp7JZjvfyt5Q7a7dIi+HIH7XZpEXz5hax2aSF8uYNW264QvtxBq21XCF/uoMu2q7NsuzrLtquzbLs6y7ars2y7OuW2q+cXstx2BfDlDlpuuwL4cgctt109w8ttVwBf7qDLtquzbLs6y7ars2y7OtW2Kzj/dqptVwifuRr49ZrUqbZdAfxQ264QPnw1cKhtVwgfvho4PuaERfjwTaPh9lERfPim0XD7qAg+fDVwqH1UCB++GjjUPiqED18NHGofFcKXE1bto0J4d8I+XlAbah8VwoevBg61j+rdZcCh1le9/a3q/H7eYBtq2xXCq/Ob4MPG5iG3XT0uBwy57Qrgw3tUQ267eoaX264APrxHNeS2K4AP71ENte0K4cObykPto0L4csKqfVQIH96jGnIfFcCH96iG3EcF8OE9qiH3UQF8eI9qyH1UAB/eVB5yHxXAlxNW7qMC+F9UKqv1VW9/a7mDVtuuEL7cQattVwhffiHLbVcAX+6g5bYrgC930HLbFcCXO2i57Qrgyx20Wl+F8OWEVfuoEL6csGofFb2Q5T4qgC930HIfFcC7Exbgyx203EcF8OUOWu6jAvhyBy33UQF8OWHVPqqXS2W1vurtbzXnNzWhatsVwpc7aLXtCuHLL2S57eoZXm67AvhyBy23XQF8uYOW264AvtxBq21XCF/uoNW2K4QPJ+yltl0hfPiFfKltVwgf7qCvjzthAT7cQV9q2xXChzvoS227QvhwB32pbVcIX05Yte0K4X9PqXy55Vgvf2u4g77cLi2CD3fQl9ulRfDlF7LapYXw4Q76UtuuED7cQV9q2xXChzvoq2y7usq2q6tsu7rKtqurbLu6yrarS267en4hy21XAO9OWIAvd9By2xXAlztoue0K4MsddNl2dZVtV1fZdnWVbVeX2nYF598ute0K4TNXA79ek7rUtiuED18NvNS2K4JX264QPnw18HLrqwg+fNPocvuoCD580+hy+6gIPnw18FL7qBA+fDXwUvuoED58NfBS+6gQvpywah8VwrsT9vGC2qX2USF8+GrgpfZR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O/VB26kP2k7daDt1o+3UjbZTN9pO3Wg7daPt1I22UzfaTt1oO3Wj7dSdtlN32k7daTt1p+3UnbZTd9pO3Wk7daft1J22U3faTn3SduqTtlOftJ36pO3UJ22nPmk79Y9/VHyUD5rLFePvBDWaoE4TdLIE7T/+ga4UtNIEbTRBO01QoQmqNEGwnXpfYDv1vsB26n2h7dQrbadeaTv1StupV9pO/eOfSrb1A09+9ciXG0GVJuigCWo0QZ0m6IQJ+ulvFLWglSZoownaaYJoO/VG26k32k690XbqjbZTb7Sdeqft1Dttp95pO/VO26l32k6903bqnbZT77Sdeqft1Dttpy60nbrQdupC26kLbacutJ260HbqQtupC22nLrSdutB26krbqSttp660nbrSdupK26krbaeutJ260nbqStupK22nPmg79UHbqQ/aTn3QduqDtlMftJ36oO3UB22nPmg79UHbqRttp260nbrRdupG26kbbadutJ260XbqRtupG22nbrSdutN26k7bqTttp+60nbrTdupO26k7bafutJ2603bqTtupT9pOfdJ26pO2U5+0nfqk7dQnbac+aTv1SdupT9pOfcJ26rLAduqywHbqssB26rLAduqywHbqssB26rLAduqywHbqssB26rLQduqVtlOvtJ16pe3UK22npn2jWGjfKBbaN4qF9o1ioX2jWGjfKBbaN4qF9o1ioX2jWGjfKBbaN4qF9o1ioX2jWGjfKBbaN4qF9o1ioX2jWGjfKBbaN4qF9o1ioX2jWGjfKBbaN4qF9o1ioX2jWGjfKBbaN4qF9o1ioX2jWGjfKBbaN4rlx79RvK5gH398nufvgv79x7238s8f936W5z9eS6sfa73+c9tuFnvMtNhGXuzZ14/Fnme7Ud+t1Z/O6n/8E89Y9StY/bnsHwi/cznWG/WbtfrdWn2xVk8+ybV68tGs1ZPPWq2efNZq9eSzVqo/yGetVm991h7WZ+1hfdb++IfF/039+SHjXJfjRj37rFXq2WetUs8+a5V69lmr1LPPWqG+oXNtcPunkY/m8MWST3LZsWjkk1yrJ5/kWj26/y3VW6fmZp2am3VqbtapuVun5m6dmrt1au7WqfnH0QGx6q071N36rO3WZ223Pmu7dWo+2WetUs8+a5V69lmr1LPPWqWefdYq9dYd6tO6Q31ad6hP6w71iX55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tlMftJ36oO3UjbZTN9pO3Wg7daPt1I22UzfaTt1oO3Wj7dSNtlM32k7daTt1p+3UnbZTd9pO3Wk7daft1J22U3faTt1pO3Wn7dQnbac+aTv1SdupT9pOfdJ26pO2U5+0nfqk7dQnbac+YTv1usB26nWB7dTrAtup1wW2U68LbKdeF9hOvS6wnXpdYDv1usB26nWh7dQrbadeaTv1StupV9pOvdJ26pW2U9O+UVxp3yiutG8UV9o3iivtG8WV9o3i+uPfKJblk3dQlvVG0E4TVGiCfnqnruunoPrvOVCXoIMmqNEEdZqgEybox79RlIJWmqCNJminCSo0QbSdeqft1Dttp95pO/VO26kLbacutJ260HbqH/9G8Vg//rge/3dG2r//eG21fULB2rErBtqy7Z9zAZcr3twst8y13DrXco+5lttGWu6+fPILl307bpbb51ruOdVyf/yr2ZeXuw613C9257KXu+Vucy13qFuVXm4ZarnH+bXcfrfcoW5VerlD3arKZyC6/vO23Cx3qFuVXu5Qtyq93KFuVXK5x1C3qnKUr+W2crPcoW5VerlD3ar0coe6VenllqmW24a6VV3/5Ody63nzU30b6lallzvUrer/LrffLHeoW5Ve7lC3KrncPtStSi93qFuVXu5Qtyq93KFuVXq5Za7lDnyrulvuwLequ+XOdavqw96qjuUmEfVhb1W3yz2HvVXdL3fYW9X9coe6VR37V+P1uPtJ7BzqVqWXW+Za7lC3Kr3coW5VerlD3ar0coe6VenlDnWrUsvdlqFuVXq5Q92q9HKHulW1vX0ut9Vys9yhblV6uWWu5Q51q9LLHepW1drXM7J2tpvlDnWr0ssd6lallzvUrUoudx3qViW3qnWoW5Ve7ly3qnWuW9WP85Ve3qrGulXJ5c51q1rnulWtY92q5FY11q1KLXeb61a1zXWr2sa6VamtahvrViWXW+Za7ly3qm2sW5Xcqsa6VcnlznWr2ua6Ve1j3arUVrWPdauSy53rVrXPdav6cW7hy1vVXL8A7nPdqva5blX7XL8A7nP9AljmulWVuW5VZa5fAMeigOrllrmWO9etaiwKqN6q5voFcCwKqF7uXLeqsSigcqsaiwKqlzvXrWosCqhebplrq5rrF8CxKKB6uXPdqsaigOqtaq5fAMeigOrlznWrGosCKreqsSigerllruXO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ja0kja2k0wTR2ErS2ErS2ErSnDppTl0vhyX17uEfLxpbKRpbWc+GPgqCtc06bXvTadubTtve9KKxlaaxlaaxlaaxFVp602npTaelN52W3nRaetNp6U2nbW86bXvTh8ZWhsZWhsZW9tObT4JobIWW3nRaetNp6U2npTeDlt6M88sOww/VpXGUJuiXbbMfWh7jOE0QrG02DqxtNg6sbTYOrG02DqxtNmj5yqDlK4OWrwxavjJo65hBW8cM2jpm0NYxg7aOGbR1zKCtYwZtHTO+kK/8M3Lw///jP72OH37DFn7DF34jFn7j/+56f4qA/vkNN/3wG7XwG73wG/P3f+MLub/n35CF39CF37CF3/CF34iF31i4c1u4c1u4c1u4c1+4c1+4c1+4c1+4c1+4c1+4c1+4c1+4c1+4c1+481i481i481i481i481i481i481i481i481i481i481y481y481y481y481y481y481y481y481y481y481q481q481q481q481q481q481q481q481q481q4816481648164816481648164816481648164816481m481m481m481m481m481m481m481m481m48/n7d57nLPzGF162p/8T+NCcT7+hC79hC7/hC78RC7+RC79RC7/RC78xf/83vvGt5ONvLNy5LNy5LNy5LNy5LNy5LNy5LNy5LNz5Nz7LK/mnmkLL//3dUn7jS7vH35CF39CF37CF3/CF34iF38iF36iF3+iF31i4c1u4c1u4c1u4c1u4c1u4c1u4c1u4c1u4c1u4c1u4c1+4c1+4c1+4c1+4c1+4c1+4c1+4c1+4c1+4c1+481i481i481i481i481i481i481i481i481i481i481y481y481y481y481y481y481y481y481y481y481q481q481q481q481q481q481q481q481q481q4816481648164816481648164816481648164816481m481m481m481m481m481m481m481m481m48/n7d17nLPyGLPyGLvyGLfyGL/xGLPxGLvxGLfxGL/zGwp3Lwp3Lwp3Lwp3Lwp3Lwp3Lwp3Lwp3Lwp3Lwp0vfA9XC9/D1cL3cLXwPVwtfA9XC9/D1cL3cLXwPVwtfA9XC9/D1cL3cLXwPVwtfA9X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G6yGoTZYDUNtsGqz2mDVZrXDqs1qh1Wb1Q6rNqsdVm1WO81Td5qnnt4dM6gUqtPbXYZAsGqzOr1/5diP2HV6u8vR/LDumHV29mYMBKs2W5PSgGDfKyutO2aldcestO6YldYds9K6Y1Zad8xK645Zad0xK607Zs00T51pnjrTPDWtO2aldcestO6YldYds9K6Y1Zad8xK645Zad0xK607Zi2wmyW10Dx1oXlqWVwskbUb/1ShaStC01am994MgWAVUarQTuxCO7ELTVsRmraiNG1FadqK0rQVpWkrs7M3YyCatqI0T600T600T620E3ulaSuVpq1UmrZSadrK/PzKCIimrVSatlJp2kqlaSuV5qmN5qltcbHE1m78U42mrczO3oyBaNqKwSqiVFrvzUrrvVlpvTer07QVp2krTtNWnKatzM/ejIBo2orTtBWneWqneWqneWpa781K671ZG01baTRtpSkNiKatNJq20mjaSqNpK42mrXSap+40T90XF0v62o1/6vTc0Eg56DRtpdO0lQ6rNltpvTcrrfem0XpvWoJpK5Zg2oolmLZiSWlAMG3FaNmbRsveNFr2ptGyN42WvWm03ptG671pGaat2PzszQgIpq1YhmkrlmHaitGyN42WvWm07E2jZW8aLXvTyjNrGO6ULrXZ2Zsx0DOrze5UebRiNCBYtVkrsGqzVmDVZk1g1WZNYNVmTWA1DE1gNQxten5lCASrYWgCqzZrAqs2awKrNmsCqzZrCqs2awqrNmtK89RK89TTu2MGlUJtervLEAhWbdam968c+xHbpre7HM0P645ps7M3YyBYtVmrsIooRuuOabTumEbrjmm07phG645ptO6YRuuOabTumEbrjmm07phmNE9tNE9tNE9N645ptO6YRuuOabTumEbrjmm07phG645ptO6YRuuOaU67WeI0T+00T+2LiyW+duMfazRtpdG0lUbTVhqsIorNz94MDsiNdmJvNG2l0bSVRtNWGk1b6TRtpdO0lU7TVjpNW+k0T91pnrrTPHWnndg7TVvpMG3FE0xb8QTTVjzBtBVPMG3Fk9KAYNqKJ5i24gnmqT3BPLWntcUSz2s3/vEM01Y8w7QVzzBtxWdnb8ZAsBO703pvOq33pmeYtuIZpq14gWkrXmDaiheYtuIFpq34/N6bERDNUxeapy40T03rvem03psuNG1F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aStOy950Wvam07I3nZa96bTsTadlbzqt96bTem96gWkrXmDaiheYtuIFpq34/OzNCAimrTgte9Np2ZtOy950WvamyzNrGO6ULnXJNKBnVpvdqfLoIjQgpQHBqs26wKrNusCqzbrAqs26wGoYusJqGLrCahi6wmoYusKqzboqDQhWbdYVVm3WFVZt1hVWbdaV5qkrzVNP744ZVAr16e0uQyBYtVmf3r9y8Efs6e0uR/PDumP67OzNGAhWbdYrrCKK07pjOq07ptO6YzqtO6bTumM6rTum07pjOq07ptO6YzqtO6Y7zVM7zVM7zVPTumM6rTum07pjOq07ptO6YzqtO6bTumM6rTum07pjeqPdLGk0T91onrotLpa0tRv/eKNpK42mrTSattJhFVG8007snXZi7zRtZX72ZgRE01Y6TVvpNG2l07SVDtNWWoJpKy3BPHVLME/dEsxTtwQ7sbcE01ZagmkrLcG0lZZg2kpLMG2lZZi20jJMW2kZpq20DNNWWqZ56kzz1HltsaTltRv/tAzTVlqGaSutwLSVVmAVURqt92aj9d5stN6brcC0lVZg2korMG2lzc/ejIBo2orQtBWhaStC89RC89RC89S03puN1nuzCU1bEZq2IjRtRWnaitK0FaVpK0rTVuZ3x4yAaJ5aaZ5aFxdLdO3GP01p2kqlaSuVpq1UWLXZRuu92Wi9Nxut92arNG2l0rSVStNWKk1boWVvNlr2ZqNlbzZa9majZW82WvZmo/XebLTem81o2orRtBWnaStO01acpq3QsjcbLXuz0bI3Gy17s9GyN5s/s4bhTunS5h0G1J5ZbXanymNrmQYEqzbbGqzabJudvRkDwarNtgarNtsarIZha7Aahq3Bahi2Dqth2Dqs2mzrsGqzrcOqzbauNCBYtdnWYdVmW6d56k7z1NO7YwaVQvv0dpchEKzabJ/ev3LsR+w+vd3laP7ZcSD4ottnZ2/GQLBqsz3BKqJ0WnfMTuuO2WndMTutO2andcfstO6YndYds9O6Y3Zad8xO647ZM81TZ5qnLjRPTeuO2WndMTutO2andcfstO6YndYds9O6Y3Zad8xO647ZBXazpAvNUwvNU8viYsn0Zpqj+WnaitC0FaFpKwKriNKFdmJX2oldadqK0rQVpWkr87M3IyCatqI0bUVp2orStBWleepK89SV5qkr7cRe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","file_map":{"6":{"source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use crate::cmp::{max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n","path":"std/cmp.nr"},"7":{"source":"use crate::{cmp::Eq, convert::From};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n///\n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n///\n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n///\n/// Example:\n///\n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a\n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    ///\n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    ///\n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    ///\n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure.\n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    ///\n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    ///\n    /// Panics if the new length of the vector will be greater than the max length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    ///\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    ///\n    /// v.push(100);\n    /// assert(v.len() == 1);\n    ///\n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    ///\n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    ///\n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    ///\n    /// Note that uninitialized elements may be zeroed out!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    ///\n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    ///\n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    ///\n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input.\n    /// The maximum length of the vector is determined based on the type signature.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    ///\n    /// Panics if the vector is empty.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// let two = v.pop();\n    /// let one = v.pop();\n    ///\n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    ///\n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    ///\n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n        for i in 0..MaxLen {\n            if i < self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        }\n        ret\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function will zero out any elements at or past index `len` of `array`.\n    /// This incurs an extra runtime cost of O(MaxLen). If you are sure your array is\n    /// zeroed after that index, you can use `from_parts_unchecked` to remove the extra loop.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    /// ```\n    pub fn from_parts(mut array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        let zeroed = crate::mem::zeroed();\n        for i in 0..MaxLen {\n            if i >= len {\n                array[i] = zeroed;\n            }\n        }\n        BoundedVec { storage: array, len }\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function is unsafe because it expects all elements past the `len` index\n    /// of `array` to be zeroed, but does not check for this internally. Use `from_parts`\n    /// for a safe version of this function which does zero out any indices past the\n    /// given length. Invalidating this assumption can notably cause `BoundedVec::eq`\n    /// to give incorrect results since it will check even elements past `len`.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    ///\n    /// // invalid use!\n    /// let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n    /// let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n    ///\n    /// // both vecs have length 3 so we'd expect them to be equal, but this\n    /// // fails because elements past the length are still checked in eq\n    /// assert_eq(vec1, vec2); // fails\n    /// ```\n    pub fn from_parts_unchecked(array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        BoundedVec { storage: array, len }\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen>\nwhere\n    T: Eq,\n{\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n        if self.len == other.len {\n            self.storage == other.storage\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n            assert_eq(bounded_vec.get(2), 3);\n        }\n\n        #[test(should_fail_with = \"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n\n    mod from_parts {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn from_parts() {\n            // docs:start:from-parts\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // Any elements past the given length are zeroed out, so these\n            // two BoundedVecs will be completely equal\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 2], 3);\n            assert_eq(vec1, vec2);\n            // docs:end:from-parts\n        }\n\n        #[test]\n        fn from_parts_unchecked() {\n            // docs:start:from-parts-unchecked\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // invalid use!\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n\n            // both vecs have length 3 so we'd expect them to be equal, but this\n            // fails because elements past the length are still checked in eq\n            assert(vec1 != vec2);\n            // docs:end:from-parts-unchecked\n        }\n    }\n}\n","path":"std/collections/bounded_vec.nr"},"18":{"source":"use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(mut x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_64 = (x as u64) as Field;\n\n    let high = (x - low_upper_64) / TWO_POW_64;\n    let low = low_upper_64 * TWO_POW_64 + low_lower_64;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    unsafe {\n        /*@safety: borrow is enforced to be boolean due to its type.\n            if borrow is 0, it asserts that (alo > blo && ahi >= bhi)\n            if borrow is 1, it asserts that (alo <= blo && ahi > bhi)\n        */\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        unsafe {\n            /*@safety: decomposition is properly checked below*/\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(\n            unsafe {\n                //@safety: already unconstrained\n                field_less_than(b, a)\n            },\n        );\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        unsafe {\n            //@safety: unsafe in unconstrained\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        unsafe {\n            //@safety: Take a hint of the comparison and verify it\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"19":{"source":"pub mod bn254;\nuse crate::runtime::is_unconstrained;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        assert(BIT_SIZE < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        unsafe {\n            //@safety : unconstrained context\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"21":{"source":"pub mod poseidon;\npub mod poseidon2;\npub mod keccak;\npub mod sha256;\npub mod sha512;\n\nuse crate::default::Default;\nuse crate::embedded_curve_ops::{\n    EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul, multi_scalar_mul_array_return,\n};\nuse crate::meta::derive_via;\nuse crate::uint128::U128;\n\n// Kept for backwards compatibility\npub use sha256::{digest, sha256, sha256_compression, sha256_var};\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n// docs:start:pedersen_commitment\npub fn pedersen_commitment<let N: u32>(input: [Field; N]) -> EmbeddedCurvePoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\n#[inline_always]\npub fn pedersen_commitment_with_separator<let N: u32>(\n    input: [Field; N],\n    separator: u32,\n) -> EmbeddedCurvePoint {\n    let mut points = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N];\n    for i in 0..N {\n        // we use the unsafe version because the multi_scalar_mul will constrain the scalars.\n        points[i] = from_field_unsafe(input[i]);\n    }\n    let generators = derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    multi_scalar_mul(generators, points)\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<let N: u32>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[no_predicates]\npub fn pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    let mut scalars: [EmbeddedCurveScalar; N + 1] = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N + 1];\n    let mut generators: [EmbeddedCurvePoint; N + 1] =\n        [EmbeddedCurvePoint::point_at_infinity(); N + 1];\n    let domain_generators: [EmbeddedCurvePoint; N] =\n        derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n\n    for i in 0..N {\n        scalars[i] = from_field_unsafe(input[i]);\n        generators[i] = domain_generators[i];\n    }\n    scalars[N] = EmbeddedCurveScalar { lo: N as Field, hi: 0 as Field };\n\n    let length_generator: [EmbeddedCurvePoint; 1] =\n        derive_generators(\"pedersen_hash_length\".as_bytes(), 0);\n    generators[N] = length_generator[0];\n    multi_scalar_mul_array_return(generators, scalars)[0]\n}\n\n#[field(bn254)]\n#[inline_always]\npub fn derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32,\n) -> [EmbeddedCurvePoint; N] {\n    crate::assert_constant(domain_separator_bytes);\n    // TODO(https://github.com/noir-lang/noir/issues/5672): Add back assert_constant on starting_index\n    __derive_generators(domain_separator_bytes, starting_index)\n}\n\n#[builtin(derive_pedersen_generators)]\n#[field(bn254)]\nfn __derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32,\n) -> [EmbeddedCurvePoint; N] {}\n\n#[field(bn254)]\n// Same as from_field but:\n// does not assert the limbs are 128 bits\n// does not assert the decomposition does not overflow the EmbeddedCurveScalar\nfn from_field_unsafe(scalar: Field) -> EmbeddedCurveScalar {\n    let (xlo, xhi) = unsafe {\n        //@safety : xlo and xhi decomposition is checked below\n        crate::field::bn254::decompose_hint(scalar)\n    };\n    // Check that the decomposition is correct\n    assert_eq(scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi);\n    EmbeddedCurveScalar { lo: xlo, hi: xhi }\n}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut sum = 0;\n\n    for input in inputs {\n        let input_bytes: [u8; 32] = input.to_le_bytes();\n        sum += crate::field::bytes32_to_field(blake2s(input_bytes));\n    }\n\n    sum\n}\n\n// docs:start:keccak256\npub fn keccak256<let N: u32>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{\n    crate::hash::keccak::keccak256(input, message_size)\n}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<let N: u32>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n// Generic hashing support.\n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\n#[derive_via(derive_hash)]\npub trait Hash {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher;\n}\n\n// docs:start:derive_hash\ncomptime fn derive_hash(s: StructDefinition) -> Quoted {\n    let name = quote { Hash };\n    let signature = quote { fn hash<H>(_self: Self, _state: &mut H) where H: std::hash::Hasher };\n    let for_each_field = |name| quote { _self.$name.hash(_state); };\n    crate::meta::make_trait_impl(\n        s,\n        name,\n        signature,\n        for_each_field,\n        quote {},\n        |fields| fields,\n    )\n}\n// docs:end:derive_hash\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\npub trait Hasher {\n    fn finish(self) -> Field;\n\n    fn write(&mut self, input: Field);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\npub trait BuildHasher<H>\nwhere\n    H: Hasher,\n{\n    fn build_hasher(self) -> H;\n}\n\npub struct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default,\n{\n    fn build_hasher(_self: Self) -> H {\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default,\n{\n    fn default() -> Self {\n        BuildHasherDefault {}\n    }\n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self);\n    }\n}\n\nimpl Hash for u1 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u16 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i16 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H)\n    where\n        H: Hasher,\n    {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self.lo as Field);\n        H::write(state, self.hi as Field);\n    }\n}\n\nimpl<T, let N: u32> Hash for [T; N]\nwhere\n    T: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T]\nwhere\n    T: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B)\nwhere\n    A: Hash,\n    B: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n    D: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n    D: Hash,\n    E: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n\n// Some test vectors for Pedersen hash and Pedersen Commitment.\n// They have been generated using the same functions so the tests are for now useless\n// but they will be useful when we switch to Noir implementation.\n#[test]\nfn assert_pedersen() {\n    assert_eq(\n        pedersen_hash_with_separator([1], 1),\n        0x1b3f4b1a83092a13d8d1a59f7acb62aba15e7002f4440f2275edb99ebbc2305f,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1], 1),\n        EmbeddedCurvePoint {\n            x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n            y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n            is_infinite: false,\n        },\n    );\n\n    assert_eq(\n        pedersen_hash_with_separator([1, 2], 2),\n        0x26691c129448e9ace0c66d11f0a16d9014a9e8498ee78f4d69f0083168188255,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2], 2),\n        EmbeddedCurvePoint {\n            x: 0x2e2b3b191e49541fe468ec6877721d445dcaffe41728df0a0eafeb15e87b0753,\n            y: 0x2ff4482400ad3a6228be17a2af33e2bcdf41be04795f9782bd96efe7e24f8778,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3], 3),\n        0x0bc694b7a1f8d10d2d8987d07433f26bd616a2d351bc79a3c540d85b6206dbe4,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3], 3),\n        EmbeddedCurvePoint {\n            x: 0x1fee4e8cf8d2f527caa2684236b07c4b1bad7342c01b0f75e9a877a71827dc85,\n            y: 0x2f9fedb9a090697ab69bf04c8bc15f7385b3e4b68c849c1536e5ae15ff138fd1,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4], 4),\n        0xdae10fb32a8408521803905981a2b300d6a35e40e798743e9322b223a5eddc,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4], 4),\n        EmbeddedCurvePoint {\n            x: 0x07ae3e202811e1fca39c2d81eabe6f79183978e6f12be0d3b8eda095b79bdbc9,\n            y: 0x0afc6f892593db6fbba60f2da558517e279e0ae04f95758587760ba193145014,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5], 5),\n        0xfc375b062c4f4f0150f7100dfb8d9b72a6d28582dd9512390b0497cdad9c22,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5], 5),\n        EmbeddedCurvePoint {\n            x: 0x1754b12bd475a6984a1094b5109eeca9838f4f81ac89c5f0a41dbce53189bb29,\n            y: 0x2da030e3cfcdc7ddad80eaf2599df6692cae0717d4e9f7bfbee8d073d5d278f7,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6], 6),\n        0x1696ed13dc2730062a98ac9d8f9de0661bb98829c7582f699d0273b18c86a572,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6], 6),\n        EmbeddedCurvePoint {\n            x: 0x190f6c0e97ad83e1e28da22a98aae156da083c5a4100e929b77e750d3106a697,\n            y: 0x1f4b60f34ef91221a0b49756fa0705da93311a61af73d37a0c458877706616fb,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7], 7),\n        0x128c0ff144fc66b6cb60eeac8a38e23da52992fc427b92397a7dffd71c45ede3,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7], 7),\n        EmbeddedCurvePoint {\n            x: 0x015441e9d29491b06563fac16fc76abf7a9534c715421d0de85d20dbe2965939,\n            y: 0x1d2575b0276f4e9087e6e07c2cb75aa1baafad127af4be5918ef8a2ef2fea8fc,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8),\n        0x2f960e117482044dfc99d12fece2ef6862fba9242be4846c7c9a3e854325a55c,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8),\n        EmbeddedCurvePoint {\n            x: 0x1657737676968887fceb6dd516382ea13b3a2c557f509811cd86d5d1199bc443,\n            y: 0x1f39f0cb569040105fa1e2f156521e8b8e08261e635a2b210bdc94e8d6d65f77,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9),\n        0x0c96db0790602dcb166cc4699e2d306c479a76926b81c2cb2aaa92d249ec7be7,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9),\n        EmbeddedCurvePoint {\n            x: 0x0a3ceae42d14914a432aa60ec7fded4af7dad7dd4acdbf2908452675ec67e06d,\n            y: 0xfc19761eaaf621ad4aec9a8b2e84a4eceffdba78f60f8b9391b0bd9345a2f2,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10),\n        0x2cd37505871bc460a62ea1e63c7fe51149df5d0801302cf1cbc48beb8dff7e94,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10),\n        EmbeddedCurvePoint {\n            x: 0x2fb3f8b3d41ddde007c8c3c62550f9a9380ee546fcc639ffbb3fd30c8d8de30c,\n            y: 0x300783be23c446b11a4c0fabf6c91af148937cea15fcf5fb054abf7f752ee245,\n            is_infinite: false,\n        },\n    );\n}\n","path":"std/hash/mod.nr"},"27":{"source":"use crate::runtime::is_unconstrained;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// A message block is up to 64 bytes taken from the input.\nglobal BLOCK_SIZE: u32 = 64;\n\n// The first index in the block where the 8 byte message size will be written.\nglobal MSG_SIZE_PTR: u32 = 56;\n\n// Size of the message block when packed as 4-byte integer array.\nglobal INT_BLOCK_SIZE: u32 = 16;\n\n// A `u32` integer consists of 4 bytes.\nglobal INT_SIZE: u32 = 4;\n\n// Index of the integer in the `INT_BLOCK` where the length is written.\nglobal INT_SIZE_PTR: u32 = MSG_SIZE_PTR / INT_SIZE;\n\n// Magic numbers for bit shifting.\n// Works with actual bit shifting as well as the compiler turns them into * and /\n// but circuit execution appears to be 10% faster this way.\nglobal TWO_POW_8: u32 = 256;\nglobal TWO_POW_16: u32 = TWO_POW_8 * 256;\nglobal TWO_POW_24: u32 = TWO_POW_16 * 256;\nglobal TWO_POW_32: u64 = TWO_POW_24 as u64 * 256;\n\n// Index of a byte in a 64 byte block; ie. 0..=63\ntype BLOCK_BYTE_PTR = u32;\n\n// The foreign function to compress blocks works on 16 pieces of 4-byte integers, instead of 64 bytes.\ntype INT_BLOCK = [u32; INT_BLOCK_SIZE];\n\n// A message block is a slice of the original message of a fixed size,\n// potentially padded with zeros, with neighbouring 4 bytes packed into integers.\ntype MSG_BLOCK = INT_BLOCK;\n\n// The hash is 32 bytes.\ntype HASH = [u8; 32];\n\n// The state accumulates the blocks.\n// Its overall size is the same as the `HASH`.\ntype STATE = [u32; 8];\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> HASH\n// docs:end:sha256\n{\n    digest(input)\n}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: INT_BLOCK, _state: STATE) -> STATE {}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> HASH {\n    sha256_var(msg, N as u64)\n}\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> HASH {\n    let message_size = message_size as u32;\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n    // Intermediate hash, starting with the canonical initial value\n    let mut h: STATE = [\n        1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635,\n        1541459225,\n    ];\n    // Pointer into msg_block on a 64 byte scale\n    let mut msg_byte_ptr = 0;\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            /*@safety  : the msg_block is checked below in verify_msg_block*/\n            build_msg_block(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_block, h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            //@safety : the msg_block is checked below in verify_msg_block\n            build_msg_block(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n                verify_msg_block_padding(msg_block, msg_byte_ptr);\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    // If we had modulo == 0 then it means the last block was full,\n    // and we can reset the pointer to zero to overwrite it.\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    // Here we rely on the fact that everything beyond the available input is set to 0.\n    msg_block = update_block_item(\n        msg_block,\n        msg_byte_ptr,\n        |msg_item| set_item_byte_then_zeros(msg_item, msg_byte_ptr, 1 << 7),\n    );\n    msg_byte_ptr = msg_byte_ptr + 1;\n    let last_block = msg_block;\n\n    // If we don't have room to write the size, compress the block and reset it.\n    if msg_byte_ptr > MSG_SIZE_PTR {\n        h = sha256_compression(msg_block, h);\n        // `attach_len_to_msg_block` will zero out everything after the `msg_byte_ptr`.\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe {\n        //@safety : the msg_len is checked below in verify_msg_len\n        attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size)\n    };\n\n    if !is_unconstrained() {\n        verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size);\n    }\n\n    hash_final_block(msg_block, h)\n}\n\n// Take `BLOCK_SIZE` number of bytes from `msg` starting at `msg_start`.\n// Returns the block and the length that has been copied rather than padded with zeros.\nunconstrained fn build_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_start: u32,\n) -> (MSG_BLOCK, BLOCK_BYTE_PTR) {\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n\n    // Figure out the number of items in the int array that we have to pack.\n    // e.g. if the input is [0,1,2,3,4,5] then we need to pack it as 2 items: [0123, 4500]\n    let mut int_input = block_input / INT_SIZE;\n    if block_input % INT_SIZE != 0 {\n        int_input = int_input + 1;\n    };\n\n    for i in 0..int_input {\n        let mut msg_item: u32 = 0;\n        // Always construct the integer as 4 bytes, even if it means going beyond the input.\n        for j in 0..INT_SIZE {\n            let k = i * INT_SIZE + j;\n            let msg_byte = if k < block_input {\n                msg[msg_start + k]\n            } else {\n                0\n            };\n            msg_item = lshift8(msg_item, 1) + msg_byte as u32;\n        }\n        msg_block[i] = msg_item;\n    }\n\n    // Returning the index as if it was a 64 byte array.\n    // We have to project it down to 16 items and bit shifting to get a byte back if we need it.\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed by `build_msg_block`\n// and matches the input data. Returns the index of the first unset item.\n// If `message_size` is less than `msg_start` then this is called with the old non-empty block;\n// in that case we can skip verification, ie. no need to check that everything is zero.\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: MSG_BLOCK,\n    msg_start: u32,\n) -> BLOCK_BYTE_PTR {\n    let mut msg_byte_ptr = 0;\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n    // We might have to go beyond the input to pad the fields.\n    if msg_end % INT_SIZE != 0 {\n        msg_end = msg_end + INT_SIZE - msg_end % INT_SIZE;\n    }\n\n    // Reconstructed packed item.\n    let mut msg_item: u32 = 0;\n\n    // Inclusive at the end so that we can compare the last item.\n    let mut i: u32 = 0;\n    for k in msg_start..=msg_end {\n        if k % INT_SIZE == 0 {\n            // If we consumed some input we can compare against the block.\n            if (msg_start < message_size) & (k > msg_start) {\n                assert_eq(msg_block[i], msg_item as u32);\n                i = i + 1;\n                msg_item = 0;\n            }\n        }\n        // Shift the accumulator\n        msg_item = lshift8(msg_item, 1);\n        // If we have input to consume, add it at the rightmost position.\n        if k < message_size & k < msg_end {\n            msg_item = msg_item + msg[k] as u32;\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\n// Verify the block we are compressing was appropriately padded with zeros by `build_msg_block`.\n// This is only relevant for the last, potentially partially filled block.\nfn verify_msg_block_padding(msg_block: MSG_BLOCK, msg_byte_ptr: BLOCK_BYTE_PTR) {\n    // Check all the way to the end of the block.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_BLOCK_SIZE);\n}\n\n// Verify that a region of ints in the message block are (partially) zeroed,\n// up to an (exclusive) maximum which can either be the end of the block\n// or just where the size is to be written.\nfn verify_msg_block_zeros(\n    msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    max_int_byte_ptr: u32,\n) {\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // First integer which is supposed to be (partially) zero.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        let zeros = INT_SIZE - modulo;\n        let mask = if zeros == 3 {\n            TWO_POW_24\n        } else if zeros == 2 {\n            TWO_POW_16\n        } else {\n            TWO_POW_8\n        };\n        assert_eq(msg_block[int_byte_ptr] % mask, zero);\n        int_byte_ptr = int_byte_ptr + 1;\n    }\n\n    // Check the rest of the items.\n    for i in 0..max_int_byte_ptr {\n        if i >= int_byte_ptr {\n            assert_eq(msg_block[i], zero);\n        }\n    }\n}\n\n// Verify that up to the byte pointer the two blocks are equal.\n// At the byte pointer the new block can be partially zeroed.\nfn verify_msg_block_equals_last(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n) {\n    // msg_byte_ptr is the position at which they are no longer have to be the same.\n    // First integer which is supposed to be (partially) zero contains that pointer.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Reconstruct the partially zero item from the last block.\n        let last_field = last_block[int_byte_ptr];\n        let mut msg_item: u32 = 0;\n        // Reset to where they are still equal.\n        msg_byte_ptr = msg_byte_ptr - modulo;\n        for i in 0..INT_SIZE {\n            msg_item = lshift8(msg_item, 1);\n            if i < modulo {\n                msg_item = msg_item + get_item_byte(last_field, msg_byte_ptr) as u32;\n                msg_byte_ptr = msg_byte_ptr + 1;\n            }\n        }\n        assert_eq(msg_block[int_byte_ptr], msg_item);\n    }\n\n    for i in 0..INT_SIZE_PTR {\n        if i < int_byte_ptr {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n    }\n}\n\n// Apply a function on the block item which the pointer indicates.\nfn update_block_item<Env>(\n    mut msg_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    f: fn[Env](u32) -> u32,\n) -> MSG_BLOCK {\n    let i = msg_byte_ptr / INT_SIZE;\n    msg_block[i] = f(msg_block[i]);\n    msg_block\n}\n\n// Set the rightmost `zeros` number of bytes to 0.\nfn set_item_zeros(item: u32, zeros: u8) -> u32 {\n    lshift8(rshift8(item, zeros), zeros)\n}\n\n// Replace one byte in the item with a value, and set everything after it to zero.\nfn set_item_byte_then_zeros(msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR, msg_byte: u8) -> u32 {\n    let zeros = INT_SIZE - msg_byte_ptr % INT_SIZE;\n    let zeroed_item = set_item_zeros(msg_item, zeros as u8);\n    let new_item = byte_into_item(msg_byte, msg_byte_ptr);\n    zeroed_item + new_item\n}\n\n// Get a byte of a message item according to its overall position in the `BLOCK_SIZE` space.\nfn get_item_byte(mut msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR) -> u8 {\n    // How many times do we have to shift to the right to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    msg_item = rshift8(msg_item, shifts as u8);\n    // At this point the byte we want is in the rightmost position.\n    msg_item as u8\n}\n\n// Project a byte into a position in a field based on the overall block pointer.\n// For example putting 1 into pointer 5 would be 100, because overall we would\n// have [____, 0100] with indexes [0123,4567].\nfn byte_into_item(msg_byte: u8, msg_byte_ptr: BLOCK_BYTE_PTR) -> u32 {\n    let mut msg_item = msg_byte as u32;\n    // How many times do we have to shift to the left to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    lshift8(msg_item, shifts as u8)\n}\n\n// Construct a field out of 4 bytes.\nfn make_item(b0: u8, b1: u8, b2: u8, b3: u8) -> u32 {\n    let mut item = b0 as u32;\n    item = lshift8(item, 1) + b1 as u32;\n    item = lshift8(item, 1) + b2 as u32;\n    item = lshift8(item, 1) + b3 as u32;\n    item\n}\n\n// Shift by 8 bits to the left between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise multiplies by 256.\nfn lshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        if item == 0 {\n            0\n        } else {\n            // Brillig wouldn't shift 0<<4 without overflow.\n            item << (8 * shifts)\n        }\n    } else {\n        // We can do a for loop up to INT_SIZE or an if-else.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item * TWO_POW_8\n        } else if shifts == 2 {\n            item * TWO_POW_16\n        } else if shifts == 3 {\n            item * TWO_POW_24\n        } else {\n            // Doesn't make sense, but it's most likely called on 0 anyway.\n            0\n        }\n    }\n}\n\n// Shift by 8 bits to the right between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise divides by 256.\nfn rshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        item >> (8 * shifts)\n    } else {\n        // Division wouldn't work on `Field`.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item / TWO_POW_8\n        } else if shifts == 2 {\n            item / TWO_POW_16\n        } else if shifts == 3 {\n            item / TWO_POW_24\n        } else {\n            0\n        }\n    }\n}\n\n// Zero out all bytes between the end of the message and where the length is appended,\n// then write the length into the last 8 bytes of the block.\nunconstrained fn attach_len_to_msg_block(\n    mut msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) -> MSG_BLOCK {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 bits (i.e. until msg_byte_ptr = 56).\n    // There can be one item which has to be partially zeroed.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Index of the block in which we find the item we need to partially zero.\n        let i = msg_byte_ptr / INT_SIZE;\n        let zeros = INT_SIZE - modulo;\n        msg_block[i] = set_item_zeros(msg_block[i], zeros as u8);\n        msg_byte_ptr = msg_byte_ptr + zeros;\n    }\n\n    // The rest can be zeroed without bit shifting anything.\n    for i in (msg_byte_ptr / INT_SIZE)..INT_SIZE_PTR {\n        msg_block[i] = 0;\n    }\n\n    // Set the last two 4 byte ints as the first/second half of the 8 bytes of the length.\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..=1 {\n        let shift = i * 4;\n        msg_block[INT_SIZE_PTR + i] = make_item(\n            len_bytes[shift],\n            len_bytes[shift + 1],\n            len_bytes[shift + 2],\n            len_bytes[shift + 3],\n        );\n    }\n    msg_block\n}\n\n// Verify that the message length was correctly written by `attach_len_to_msg_block`,\n// and that everything between the byte pointer and the size pointer was zeroed,\n// and that everything before the byte pointer was untouched.\nfn verify_msg_len(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) {\n    // Check zeros up to the size pointer.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR);\n\n    // Check that up to the pointer we match the last block.\n    verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr);\n\n    // We verify the message length was inserted correctly by reversing the byte decomposition.\n    let mut reconstructed_len: u64 = 0;\n    for i in INT_SIZE_PTR..INT_BLOCK_SIZE {\n        reconstructed_len = reconstructed_len * TWO_POW_32;\n        reconstructed_len = reconstructed_len + msg_block[i] as u64;\n    }\n    let len = 8 * message_size as u64;\n    assert_eq(reconstructed_len, len);\n}\n\n// Perform the final compression, then transform the `STATE` into `HASH`.\nfn hash_final_block(msg_block: MSG_BLOCK, mut state: STATE) -> HASH {\n    let mut out_h: HASH = [0; 32]; // Digest as sequence of bytes\n    // Hash final padded block\n    state = sha256_compression(msg_block, state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[j] as Field).to_be_bytes();\n        for k in 0..4 {\n            out_h[4 * j + k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod tests {\n    use super::{\n        attach_len_to_msg_block, build_msg_block, byte_into_item, get_item_byte, make_item,\n        set_item_byte_then_zeros, set_item_zeros,\n    };\n    use super::INT_BLOCK;\n    use super::sha256_var;\n\n    #[test]\n    fn smoke_test() {\n        let input = [0xbd];\n        let result = [\n            0x68, 0x32, 0x57, 0x20, 0xaa, 0xbd, 0x7c, 0x82, 0xf3, 0x0f, 0x55, 0x4b, 0x31, 0x3d,\n            0x05, 0x70, 0xc9, 0x5a, 0xcc, 0xbb, 0x7d, 0xc4, 0xb5, 0xaa, 0xe1, 0x12, 0x04, 0xc0,\n            0x8f, 0xfe, 0x73, 0x2b,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116,\n        ];\n        let result = [\n            91, 122, 146, 93, 52, 109, 133, 148, 171, 61, 156, 70, 189, 238, 153, 7, 222, 184, 94,\n            24, 65, 114, 192, 244, 207, 199, 87, 232, 192, 224, 171, 207,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_multiple_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115,\n            99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49,\n            46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46,\n            48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115,\n            117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97,\n            103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45,\n            52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55,\n            64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32,\n            50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32,\n            43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64,\n            103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103,\n            110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115,\n            104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101,\n            108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109,\n            59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56,\n            51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48,\n            87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75,\n            57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67,\n            111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101,\n            114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99,\n        ];\n        let result = [\n            116, 90, 151, 31, 78, 22, 138, 180, 211, 189, 69, 76, 227, 200, 155, 29, 59, 123, 154,\n            60, 47, 153, 203, 129, 157, 251, 48, 2, 79, 11, 65, 47,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_under_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59,\n        ];\n        let result = [\n            143, 140, 76, 173, 222, 123, 102, 68, 70, 149, 207, 43, 39, 61, 34, 79, 216, 252, 213,\n            165, 74, 16, 110, 74, 29, 64, 138, 167, 30, 1, 9, 119,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_not_block_multiple() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115,\n            99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49,\n            46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46,\n            48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115,\n            117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97,\n            103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45,\n            52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55,\n            64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32,\n            50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32,\n            43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64,\n            103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103,\n            110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115,\n            104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101,\n            108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109,\n            59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56,\n            51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48,\n            87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75,\n            57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67,\n            111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101,\n            114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99, 116, 58, 77, 101, 115, 115, 97,\n            103, 101, 45, 73, 100, 58, 68, 97, 116, 101, 58, 116, 111, 59, 32, 98, 61,\n        ];\n        let result = [\n            112, 144, 73, 182, 208, 98, 9, 238, 54, 229, 61, 145, 222, 17, 72, 62, 148, 222, 186,\n            55, 192, 82, 220, 35, 66, 47, 193, 200, 22, 38, 26, 186,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_with_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17,\n            48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12,\n            201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48,\n            37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6,\n            242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2,\n            1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89,\n            110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2,\n            1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75,\n            193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1,\n            12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189,\n            233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4,\n            32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45,\n            105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4,\n            32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188,\n            194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212,\n            181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53,\n        ];\n        let message_size = 297;\n        assert_eq(sha256_var(input, message_size), result);\n    }\n\n    #[test]\n    fn msg_big_no_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17,\n            48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12,\n            201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48,\n            37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6,\n            242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2,\n            1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89,\n            110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2,\n            1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75,\n            193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1,\n            12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189,\n            233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4,\n            32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45,\n            105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4,\n            32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188,\n            194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38,\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212,\n            181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn same_msg_len_variable_padding() {\n        let input = [\n            29, 81, 165, 84, 243, 114, 101, 37, 242, 146, 127, 99, 69, 145, 39, 72, 213, 39, 253,\n            179, 218, 37, 217, 201, 172, 93, 198, 50, 249, 70, 15, 30, 162, 112, 187, 40, 140, 9,\n            236, 53, 32, 44, 38, 163, 113, 254, 192, 197, 44, 89, 71, 130, 169, 242, 17, 211, 214,\n            72, 19, 178, 186, 168, 147, 127, 99, 101, 252, 227, 8, 147, 150, 85, 97, 158, 17, 107,\n            218, 244, 82, 113, 247, 91, 208, 214, 60, 244, 87, 137, 173, 201, 130, 18, 66, 56, 198,\n            149, 207, 189, 175, 120, 123, 224, 177, 167, 251, 159, 143, 110, 68, 183, 189, 70, 126,\n            32, 35, 164, 44, 30, 44, 12, 65, 18, 62, 239, 242, 2, 248, 104, 2, 178, 64, 28, 126, 36,\n            137, 24, 14, 116, 91, 98, 90, 159, 218, 102, 45, 11, 110, 223, 245, 184, 52, 99, 59,\n            245, 136, 175, 3, 72, 164, 146, 145, 116, 22, 66, 24, 49, 193, 121, 3, 60, 37, 41, 97,\n            3, 190, 66, 195, 225, 63, 46, 3, 118, 4, 208, 15, 1, 40, 254, 235, 151, 123, 70, 180,\n            170, 44, 172, 90, 4, 254, 53, 239, 116, 246, 67, 56, 129, 61, 22, 169, 213, 65, 27, 216,\n            116, 162, 239, 214, 207, 126, 177, 20, 100, 25, 48, 143, 84, 215, 70, 197, 53, 65, 70,\n            86, 172, 61, 62, 9, 212, 167, 169, 133, 41, 126, 213, 196, 33, 192, 238, 0, 63, 246,\n            215, 58, 128, 110, 101, 92, 3, 170, 214, 130, 149, 52, 81, 125, 118, 233, 3, 118, 193,\n            104, 207, 120, 115, 77, 253, 191, 122, 0, 107, 164, 207, 113, 81, 169, 36, 201, 228, 74,\n            134, 131, 218, 178, 35, 30, 216, 101, 2, 103, 174, 87, 95, 50, 50, 215, 157, 5, 210,\n            188, 54, 211, 78, 45, 199, 96, 121, 241, 241, 176, 226, 194, 134, 130, 89, 217, 210,\n            186, 32, 140, 39, 91, 103, 212, 26, 87, 32, 72, 144, 228, 230, 117, 99, 188, 50, 15, 69,\n            79, 179, 50, 12, 106, 86, 218, 101, 73, 142, 243, 29, 250, 122, 228, 233, 29, 255, 22,\n            121, 114, 125, 103, 41, 250, 241, 179, 126, 158, 198, 116, 209, 65, 94, 98, 228, 175,\n            169, 96, 3, 9, 233, 133, 214, 55, 161, 164, 103, 80, 85, 24, 186, 64, 167, 92, 131, 53,\n            101, 202, 47, 25, 104, 118, 155, 14, 12, 12, 25, 116, 45, 221, 249, 28, 246, 212, 200,\n            157, 167, 169, 56, 197, 181, 4, 245, 146, 1, 140, 234, 191, 212, 228, 125, 87, 81, 86,\n            119, 30, 63, 129, 143, 32, 96,\n        ];\n\n        // Prepare inputs of different lengths\n        let mut input_511 = [0; 511];\n        let mut input_512 = [0; 512]; // Next block\n        let mut input_575 = [0; 575];\n        let mut input_576 = [0; 576]; // Next block\n        for i in 0..input.len() {\n            input_511[i] = input[i];\n            input_512[i] = input[i];\n            input_575[i] = input[i];\n            input_576[i] = input[i];\n        }\n\n        // Compute hashes of all inputs (with same message length)\n        let fixed_length_hash = super::sha256(input);\n        let var_full_length_hash = sha256_var(input, input.len() as u64);\n        let var_length_hash_511 = sha256_var(input_511, input.len() as u64);\n        let var_length_hash_512 = sha256_var(input_512, input.len() as u64);\n        let var_length_hash_575 = sha256_var(input_575, input.len() as u64);\n        let var_length_hash_576 = sha256_var(input_576, input.len() as u64);\n\n        // All of the above should have produced the same hash\n        assert_eq(var_full_length_hash, fixed_length_hash);\n        assert_eq(var_length_hash_511, fixed_length_hash);\n        assert_eq(var_length_hash_512, fixed_length_hash);\n        assert_eq(var_length_hash_575, fixed_length_hash);\n        assert_eq(var_length_hash_576, fixed_length_hash);\n    }\n\n    #[test]\n    fn test_get_item_byte() {\n        let fld = make_item(10, 20, 30, 40);\n        assert_eq(fld, 0x0a141e28);\n        assert_eq(get_item_byte(fld, 0), 10);\n        assert_eq(get_item_byte(fld, 4), 10);\n        assert_eq(get_item_byte(fld, 6), 30);\n    }\n\n    #[test]\n    fn test_byte_into_item() {\n        let fld = make_item(0, 20, 0, 0);\n        assert_eq(byte_into_item(20, 1), fld);\n        assert_eq(byte_into_item(20, 5), fld);\n    }\n\n    #[test]\n    fn test_set_item_zeros() {\n        let fld0 = make_item(10, 20, 30, 40);\n        let fld1 = make_item(10, 0, 0, 0);\n        assert_eq(set_item_zeros(fld0, 3), fld1);\n        assert_eq(set_item_zeros(fld0, 4), 0);\n        assert_eq(set_item_zeros(0, 4), 0);\n    }\n\n    #[test]\n    fn test_set_item_byte_then_zeros() {\n        let fld0 = make_item(10, 20, 30, 40);\n        let fld1 = make_item(10, 50, 0, 0);\n        assert_eq(set_item_byte_then_zeros(fld0, 1, 50), fld1);\n    }\n\n    #[test]\n    fn test_build_msg_block_start_0() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48,\n        ];\n        assert_eq(input.len(), 22);\n        let (msg_block, msg_byte_ptr) = unsafe {\n            //@safety : testing context\n            build_msg_block(input, input.len(), 0)\n        };\n        assert_eq(msg_byte_ptr, input.len());\n        assert_eq(msg_block[0], make_item(input[0], input[1], input[2], input[3]));\n        assert_eq(msg_block[1], make_item(input[4], input[5], input[6], input[7]));\n        assert_eq(msg_block[5], make_item(input[20], input[21], 0, 0));\n        assert_eq(msg_block[6], 0);\n    }\n\n    #[test]\n    fn test_build_msg_block_start_1() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116,\n        ];\n        assert_eq(input.len(), 68);\n        let (msg_block, msg_byte_ptr) = unsafe {\n            //@safety : testing context\n            build_msg_block(input, input.len(), 64)\n        };\n        assert_eq(msg_byte_ptr, 4);\n        assert_eq(msg_block[0], make_item(input[64], input[65], input[66], input[67]));\n        assert_eq(msg_block[1], 0);\n    }\n\n    #[test]\n    fn test_attach_len_to_msg_block() {\n        let input: INT_BLOCK = [\n            2152555847, 1397309779, 1936618851, 1262052426, 1936876331, 1985297723, 543702374,\n            1919905082, 1131376244, 1701737517, 1417244773, 978151789, 1697470053, 1920166255,\n            1849316213, 1651139939,\n        ];\n        let msg_block = unsafe {\n            //@safety  : testing context\n            attach_len_to_msg_block(input, 1, 448)\n        };\n        assert_eq(msg_block[0], ((1 << 7) as u32) * 256 * 256 * 256);\n        assert_eq(msg_block[1], 0);\n        assert_eq(msg_block[15], 3584);\n    }\n}\n","path":"std/hash/sha256.nr"},"62":{"source":"use std::{collections::bounded_vec::BoundedVec, hash::{pedersen_hash, sha256_var}};\nuse zkemail::{dkim::RSAPubkey, headers::body_hash::get_body_hash, KEY_LIMBS_2048, Sequence};\n\nglobal MAX_EMAIL_HEADER_LENGTH: u32 = 512;\nglobal MAX_EMAIL_BODY_LENGTH: u32 = 1024;\n\n/**\n * Verify an arbitrary email signed by a 2048-bit RSA DKIM signature\n * @dev TOTAL CONSTRAINTS: ~222,783\n *\n * @param header - The email header, 0-padded at end to the MAX_EMAIL_HEADER_LENGTH\n * @param body - The email body, 0-padded at end to the MAX_EMAIL_BODY_LENGTH\n * @param pubkey - The DKIM RSA Public Key modulus and reduction parameter\n * @param signature - The DKIM RSA Signature\n * @param body_hash_index - The index of the body hash in the partial hash array\n * @param dkim_header_sequence - The index and length of the DKIM header field\n * @return - \n *         0: Pedersen hash of DKIM public key (root of trust)\n *         1: Pedersen hash of DKIM signature (email nullifier)\n */\nfn main(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    body_hash_index: u32,\n    dkim_header_sequence: Sequence,\n) -> pub [Field; 2] {\n    // check the body and header lengths are within bounds\n    assert(header.len() <= MAX_EMAIL_HEADER_LENGTH);\n    assert(body.len() <= MAX_EMAIL_BODY_LENGTH);\n\n    // ~ 86,553 constraints\n    // verify the dkim signature over the header\n    pubkey.verify_dkim_signature(header, signature);\n\n    // ~ 6,289 constraints\n    // extract the body hash from the header\n    let signed_body_hash = get_body_hash(header, dkim_header_sequence, body_hash_index);\n\n    // ~ 113,962 constraints\n    // hash the asserted body\n    let computed_body_hash: [u8; 32] = sha256_var(body.storage, body.len() as u64);\n\n    // compare the body hashes\n    assert(\n        signed_body_hash == computed_body_hash,\n        \"SHA256 hash computed over body does not match body hash found in DKIM-signed header\",\n    );\n\n    // ~ 10,255 constraints\n    // hash the pubkey and signature for the standard outputs\n    let email_nullifier = pedersen_hash(signature);\n    [pubkey.hash(), email_nullifier]\n}\n","path":"/home/jpag/Workground/aztec/zkemail/zkemail.nr/examples/verify_email_2048_bit_dkim/src/main.nr"},"64":{"source":"use crate::{\n    BODY_HASH_BASE64_LENGTH, headers::constrain_header_field, MAX_DKIM_HEADER_FIELD_LENGTH,\n    Sequence,\n};\nuse base64::BASE64_DECODER;\n\n/**\n * Constrained access to the body hash in the header\n * \n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param dkim_header_field_sequence - The sequence of the DKIM header field\n * @param body_hash_index - The index of the body hash in the header\n */\npub fn get_body_hash<let MAX_HEADER_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    dkim_header_field_sequence: Sequence,\n    body_hash_index: u32,\n) -> [u8; 32] {\n    // constrain the access of dkim signature field\n    let header_field_name: [u8; 14] = comptime { \"dkim-signature\".as_bytes() };\n    constrain_header_field::<MAX_HEADER_LENGTH, MAX_DKIM_HEADER_FIELD_LENGTH, 14>(\n        header,\n        dkim_header_field_sequence,\n        header_field_name,\n    );\n    // constrain access to the body hash\n    assert(\n        body_hash_index > dkim_header_field_sequence.index\n            & body_hash_index + BODY_HASH_BASE64_LENGTH < dkim_header_field_sequence.end_index() + 1\n            ,\n            \"Body hash index accessed outside of DKIM header field\",\n        );\n        let bh_prefix: [u8; 5] = comptime { \"; bh=\".as_bytes() };\n        for i in 0..5 {\n            let character = header.get_unchecked(body_hash_index - 5 + i);\n            assert(character == bh_prefix[i], \"No 'bh=' prefix found at asserted bh index\");\n        }\n        let bh_suffix: u8 = comptime { \";\".as_bytes()[0] };\n        assert(\n            header.get_unchecked(body_hash_index + BODY_HASH_BASE64_LENGTH) == bh_suffix,\n            \"No ';' suffix found at asserted bh index\",\n        );\n        // get the body hash\n        get_body_hash_unsafe(header, body_hash_index)\n    }\n\n/**\n * Get the body hash from the header without validating the access index. Does not validate body\n * hash is valid base64 sequence (https://github.com/noir-lang/noir_base64/blob/4431d08ac661ada9d8d18b115487ff0190b43856/src/lib.nr#L209-L232)\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param header - The email header as validated in the DKIM signature\n * @param body_hash_index - The asserted index to find the body hash at\n */\npub fn get_body_hash_unsafe<let MAX_HEADER_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    body_hash_index: u32,\n) -> [u8; 32] {\n    // get the body hash\n    let mut body_hash_encoded: [u8; BODY_HASH_BASE64_LENGTH] = [0; BODY_HASH_BASE64_LENGTH];\n    for i in 0..BODY_HASH_BASE64_LENGTH {\n        body_hash_encoded[i] = header.get_unchecked(body_hash_index + i);\n    }\n    // return the decoded body hash\n    // idk why encode vs decode...\n    BASE64_DECODER.decode(body_hash_encoded)\n}\n","path":"/home/jpag/Workground/aztec/zkemail/zkemail.nr/lib/src/headers/body_hash.nr"},"66":{"source":"use crate::{CR, LF, Sequence};\n\npub mod body_hash;\npub mod email_address;\n\n/**\n * Constrain a sequence in a header to be within the correct bounds\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param MAX_HEADER_FIELD_LENGTH - The maximum length of the header field\n * @param HEADER_FIELD_NAME_LENGTH - The length of the header field name\n * @param header - The email header as validated in the DKIM signature\n * @param header_field_sequence - The sequence of the header field\n * @param header_field_name - The name of the header field\n */\nfn check_header_field_bounds<let MAX_HEADER_LENGTH: u32, let MAX_HEADER_FIELD_LENGTH: u32, let HEADER_FIELD_NAME_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) {\n    // check the range of the sequence is within the header (so we can use get_unchecked)\n    let end_index = header_field_sequence.end_index();\n    assert(end_index <= header.len(), \"Header field out of bounds of header\");\n\n    // if the sequence is not the start, check for a newline\n    if header_field_sequence.index != 0 {\n        assert(\n            header.get_unchecked(header_field_sequence.index - 2) == CR,\n            \"Header field must start with CRLF\",\n        );\n        assert(\n            header.get_unchecked(header_field_sequence.index - 1) == LF,\n            \"Header field must start with CRLF\",\n        );\n    }\n\n    // if the sequence is not the end, check for a newline\n    if end_index != header.len() {\n        assert(header.get_unchecked(end_index) == CR, \"Header field must end with CRLF\");\n        assert(header.get_unchecked(end_index + 1) == LF, \"Header field must end with CRLF\");\n    }\n\n    // check that the header field name matches the expected name\n    for i in 0..HEADER_FIELD_NAME_LENGTH {\n        assert(\n            header.get_unchecked(header_field_sequence.index + i) == header_field_name[i],\n            \"Header field name does not match\",\n        );\n    }\n    assert(\n        header.get_unchecked(header_field_sequence.index + HEADER_FIELD_NAME_LENGTH) == 0x3a,\n        \"Header field name must be followed by a colon\",\n    );\n}\n\n/**\n * Constrain a sequence in a header to match the specific header field\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param MAX_HEADER_FIELD_LENGTH - The maximum length of the header field\n * @param HEADER_FIELD_NAME_LENGTH - The length of the header field name\n * @param header - The email header as validated in the DKIM signature\n * @param header_field_sequence - The sequence of the header field\n * @param header_field_name - The name of the header field\n */\npub fn constrain_header_field<let MAX_HEADER_LENGTH: u32, let MAX_HEADER_FIELD_LENGTH: u32, let HEADER_FIELD_NAME_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) {\n    // constrain beginning of header field\n    check_header_field_bounds::<MAX_HEADER_LENGTH, MAX_HEADER_FIELD_LENGTH, HEADER_FIELD_NAME_LENGTH>(\n        header,\n        header_field_sequence,\n        header_field_name,\n    );\n\n    // check the header field is uninterrupted\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in 0..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.end_index()) {\n            assert(header.get_unchecked(index) != CR, \"Header field must not contain newlines\");\n        }\n    }\n}\n\n/**\n * constrain_header_field with checks for the last occurence of \"<\" inside the loop to save constraints\n */\npub fn constrain_header_field_detect_last_angle_bracket<let MAX_HEADER_LENGTH: u32, let MAX_HEADER_FIELD_LENGTH: u32, let HEADER_FIELD_NAME_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) -> u32 {\n    // constrain beginning of header field\n    check_header_field_bounds::<MAX_HEADER_LENGTH, MAX_HEADER_FIELD_LENGTH, HEADER_FIELD_NAME_LENGTH>(\n        header,\n        header_field_sequence,\n        header_field_name,\n    );\n\n    // check the header field is uninterrupted\n    let mut last_angle_bracket = 0;\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in (HEADER_FIELD_NAME_LENGTH + 1)..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.end_index()) {\n            let byte = header.get_unchecked(index);\n            assert(byte != CR, \"Header field must not contain newlines\");\n            if byte == 0x3c {\n                last_angle_bracket = index;\n            }\n        }\n    }\n    last_angle_bracket\n}\n","path":"/home/jpag/Workground/aztec/zkemail/zkemail.nr/lib/src/headers/mod.nr"},"68":{"source":"use crate::dkim::RSAPubkey;\nuse std::hash::pedersen_hash;\n\npub mod dkim;\npub mod headers;\npub mod masking;\npub mod partial_hash;\npub mod remove_soft_line_breaks;\n// mod macro;\nmod tests;\n\nglobal RSA_EXPONENT: u32 = 65537;\nglobal KEY_LIMBS_1024: u32 = 9;\nglobal KEY_LIMBS_2048: u32 = 18;\nglobal BODY_HASH_BASE64_LENGTH: u32 = 44;\nglobal CR: u8 = 0x0D;\nglobal LF: u8 = 0x0A;\nglobal MAX_DKIM_HEADER_FIELD_LENGTH: u32 = 300; // kinda arbitrary but gives > 100 chars for selector and domain\nglobal MAX_EMAIL_ADDRESS_LENGTH: u32 = 320; // derived via (https://datatracker.ietf.org/doc/html/rfc5321#section-4.5.3.1.1)\n\npub struct Sequence {\n    index: u32,\n    length: u32,\n}\n\nimpl Sequence {\n    pub fn end_index(self) -> u32 {\n        self.index + self.length\n    }\n}\n// allowable chars in an email address (js/src/utils:makeAllowableEmailCharsTable()\n// \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.-@\" = 1\n// \"<: \" = 2\n// \">\\r\\n\" = 3\nglobal EMAIL_ADDRESS_CHAR_TABLE: [u8; 123] = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 2, 0, 3, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n\n/**\n * Default email verification function\n * @dev use #[zkemail] attribute macro to apply other functionality\n *\n * @param MAX_EMAIL_HEADER_LENGTH - The maximum length of the email header\n * @param KEY_LIMBS - The number of limbs in the RSA pubkey\n * @param header - The email header, 0-padded at end to the MAX_EMAIL_HEADER_LENGTH\n * @param pubkey - The DKIM RSA Public Key modulus and reduction parameter\n * @param signature - The DKIM RSA Signature\n */\npub fn verify_email<let MAX_EMAIL_HEADER_LENGTH: u32, let MAX_EMAIL_BODY_LENGTH: u32, // sometimes unused but needed for macro\nlet KEY_LIMBS: u32>(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n) {\n    // ~ 86,553 constraints with 2048-bit RSA & 1024 bit max header length\n    // verify the dkim signature over the header\n    pubkey.verify_dkim_signature(header, signature);\n}\n","path":"/home/jpag/Workground/aztec/zkemail/zkemail.nr/lib/src/lib.nr"},"73":{"source":"use crate::{KEY_LIMBS_1024, KEY_LIMBS_2048, RSA_EXPONENT};\nuse bignum::{params::BigNumParams, RuntimeBigNum};\nuse rsa::{rsa::verify_sha256_pkcs1v15, types::{RBN1024, RBN2048}};\nuse std::hash::{pedersen_hash, sha256_var};\n\npub struct RSAPubkey<let KEY_LIMBS: u32> {\n    modulus: [Field; KEY_LIMBS],\n    redc: [Field; KEY_LIMBS],\n}\n\nimpl<let KEY_LIMBS: u32> RSAPubkey<KEY_LIMBS> {\n\n    pub fn new(modulus: [Field; KEY_LIMBS], redc: [Field; KEY_LIMBS]) -> Self {\n        Self { modulus, redc }\n    }\n\n    pub fn validate_range(self, signature: [Field; KEY_LIMBS]) {\n        for i in 0..KEY_LIMBS {}\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_1024> {\n    pub fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_1024],\n    ) {\n        // hash the header\n        let header_hash = sha256_var(header.storage(), header.len() as u64);\n\n        let params: BigNumParams<KEY_LIMBS_1024, 1024> =\n            BigNumParams::new(false, self.modulus, self.redc);\n\n        let signature: RBN1024 = RuntimeBigNum::from_array(params, signature);\n        signature.validate_in_range();\n\n        // verify the DKIM signature over the header\n        assert(verify_sha256_pkcs1v15(header_hash, signature, RSA_EXPONENT));\n    }\n\n    pub fn hash(self) -> Field {\n        let mut dkim_preimage = [0; 9];\n        // compose first 4 limbs of modulus and redc\n        for i in 0..4 {\n            let modulus_hi = self.modulus[i * 2] * 2.pow_32(120);\n            let redc_hi = self.redc[i * 2] * 2.pow_32(120);\n            dkim_preimage[i] = modulus_hi + self.modulus[i * 2 + 1];\n            dkim_preimage[i + 4] = redc_hi + self.redc[i * 2 + 1];\n        }\n        // compose last two elements of redc and modulus together\n        let modulus_hi = self.modulus[8] * 2.pow_32(120);\n        dkim_preimage[8] = modulus_hi + self.redc[8];\n        // hash the pubkey\n        pedersen_hash(dkim_preimage)\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_2048> {\n    pub fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_2048],\n    ) {\n        // hash the header\n        let header_hash = sha256_var(header.storage(), header.len() as u64);\n\n        let params: BigNumParams<KEY_LIMBS_2048, 2048> =\n            BigNumParams::new(false, self.modulus, self.redc);\n\n        let signature: RBN2048 = RuntimeBigNum::from_array(params, signature);\n        signature.validate_in_range();\n\n        // verify the DKIM signature over the header\n        assert(verify_sha256_pkcs1v15(header_hash, signature, RSA_EXPONENT));\n    }\n\n    pub fn hash(self) -> Field {\n        let mut dkim_preimage = [0; 18];\n        // compose limbs\n        for i in 0..9 {\n            let modulus_hi = self.modulus[i * 2] * 2.pow_32(120);\n            let redc_hi = self.redc[i * 2] * 2.pow_32(120);\n            dkim_preimage[i] = modulus_hi + self.modulus[i * 2 + 1];\n            dkim_preimage[i + 9] = redc_hi + self.redc[i * 2 + 1];\n        }\n        // hash the pubkey\n        pedersen_hash(dkim_preimage)\n    }\n}\n","path":"/home/jpag/Workground/aztec/zkemail/zkemail.nr/lib/src/dkim.nr"},"75":{"source":"use super::defaults::BASE64_PADDING_CHAR;\n\n/// Standard Base64 Alphabet (base64) with padding.\npub global STANDARD: Base64DecodeBE = Base64DecodeBE::new(true);\n\n/// Standard Base64 Alphabet (base64) without padding.\npub global STANDARD_NO_PAD: Base64DecodeBE = Base64DecodeBE::new(false);\n\n/// URL and Filename Safe Alphabet without padding.\npub global URL_SAFE: Base64DecodeBE = Base64DecodeBE::base64url(false);\n\n/// URL and Filename Safe Alphabet with padding.\npub global URL_SAFE_WITH_PAD: Base64DecodeBE = Base64DecodeBE::base64url(true);\n\n/// Invalid value for the lookup table.\nglobal INVALID_VALUE: u8 = 255;\n\n/// Base64 decoder for big-endian byte arrays.\n///\n/// > Note: If the lookup table is not defined in a struct, access costs are expensive and ROM\n/// tables aren't being used.\nstruct Base64DecodeBE {\n    /// The base64 lookup table.\n    table: [u8; 256],\n    /// Whether the input has padding.\n    pad: bool,\n}\n\nimpl Base64DecodeBE {\n    /// Creates a new decoder that uses the standard Base64 Alphabet (base64) specified in RFC 4648\n    /// (https://datatracker.ietf.org/doc/html/rfc4648#section-4).\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `pad`: Whether the input has padding.\n    ///\n    /// ## Returns\n    ///\n    /// The Base64 decoder instance.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let decoder = Base64DecodeBE::new(true);\n    /// ```\n    fn new(pad: bool) -> Self {\n        Base64DecodeBE {\n            table: [\n                // 0-42\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                62, // 43\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 44-46\n                63, // 47\n                52,\n                53,\n                54,\n                55,\n                56,\n                57,\n                58,\n                59,\n                60,\n                61, // 48-57\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 58-64\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20,\n                21,\n                22,\n                23,\n                24,\n                25, // 65-90 (A-Z)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 91-96\n                26,\n                27,\n                28,\n                29,\n                30,\n                31,\n                32,\n                33,\n                34,\n                35,\n                36,\n                37,\n                38,\n                39,\n                40,\n                41,\n                42,\n                43,\n                44,\n                45,\n                46,\n                47,\n                48,\n                49,\n                50,\n                51, // 97-122 (a-z)\n                // 123-255\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n            ],\n            pad,\n        }\n    }\n\n    /// Creates a new decoder that uses the URL and Filename Safe Alphabet specified in RFC 4648\n    /// (https://datatracker.ietf.org/doc/html/rfc4648#section-5).\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `pad`: Whether the input has padding.\n    ///\n    /// ## Returns\n    ///\n    /// The Base64 decoder instance.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let decoder = Base64DecodeBE::base64url(true);\n    /// ```\n    fn base64url(pad: bool) -> Self {\n        Base64DecodeBE {\n            table: [\n                // 0-44 (no mapping)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                62, // 45 (-)\n                INVALID_VALUE,\n                INVALID_VALUE, // 46-47 (no mapping)\n                52,\n                53,\n                54,\n                55,\n                56,\n                57,\n                58,\n                59,\n                60,\n                61, // 48-57 (0-9)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 58-64 (no mapping)\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20,\n                21,\n                22,\n                23,\n                24,\n                25, // 65-90 (A-Z)\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE, // 91-94 (no mapping)\n                63, // 95 (_)\n                INVALID_VALUE, // 96 (no mapping)\n                26,\n                27,\n                28,\n                29,\n                30,\n                31,\n                32,\n                33,\n                34,\n                35,\n                36,\n                37,\n                38,\n                39,\n                40,\n                41,\n                42,\n                43,\n                44,\n                45,\n                46,\n                47,\n                48,\n                49,\n                50,\n                51, // 97-122 (a-z)\n                // 123-255\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n                INVALID_VALUE,\n            ],\n            pad,\n        }\n    }\n\n    /// Gets the lookup table value at a given index.\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `idx`: The index to get the value for.\n    ///\n    /// ## Returns\n    ///\n    /// The value from the lookup table.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let value = Base64DecodeBE::new(true).get(65);\n    /// ```\n    fn get(self, idx: Field) -> u8 {\n        self.table[idx]\n    }\n\n    /// Converts an array of ASCII values into a packed byte array of base64 values.\n    ///\n    /// > Note: Each Base64 value is 6 bits. This method will produce a byte array where data is\n    /// > concatenated so that there are no sparse bits (e.g. encoding 4 ASCII values produces 24\n    /// > bits of Base64 data = 3 bytes of output data).\n    ///\n    /// ## Type Parameters\n    ///\n    /// - `InputElements`: The number of input elements.\n    /// - `OutputBytes`: The number of output bytes.\n    ///\n    /// ## Value Parameters\n    ///\n    /// - `self`: The Base64 decoder instance.\n    /// - `input`: The input array.\n    ///\n    /// ## Constraints\n    ///\n    /// - input and output lengths are correct, including padding.\n    ///\n    /// ## Returns\n    ///\n    /// The packed byte array of base64 values.\n    ///\n    /// ## Usage\n    ///\n    /// ```nr\n    /// let result = Decoder::new(false).decode::<4, 3>([65, 66, 67, 68]);\n    /// ```\n    pub fn decode<let InputElements: u32, let OutputBytes: u32>(\n        self,\n        input: [u8; InputElements],\n    ) -> [u8; OutputBytes] {\n        let rem = OutputBytes % 3;\n        // Calculate the number of padding characters and the length of the input without padding\n        let num_padding_chars = if rem == 1 {\n            2\n        } else if rem == 2 {\n            1\n        } else {\n            0\n        };\n\n        // Assert that the output length & input length are correct\n        // Every 3 output chars will be encoded as 4 base64 input chars\n        let encoded_length = (OutputBytes + 2) / 3 * 4; // ceil(input * 4 / 3)\n        if self.pad {\n            assert(\n                encoded_length == InputElements,\n                f\"DecodeError: invalid input length for specified output length. Expected {encoded_length} input elements, but got {InputElements}.\",\n            );\n            // enforce Base64 padding is valid\n            if num_padding_chars == 2 {\n                assert(input[InputElements - 1] == BASE64_PADDING_CHAR);\n                assert(input[InputElements - 2] == BASE64_PADDING_CHAR);\n            } else if num_padding_chars == 1 {\n                assert(input[InputElements - 1] == BASE64_PADDING_CHAR);\n            }\n        } else {\n            let expected = encoded_length - num_padding_chars;\n            assert(\n                encoded_length - num_padding_chars == InputElements,\n                f\"DecodeError: invalid input length for specified output length. Expected {expected} input elements, but got {InputElements}.\",\n            );\n        }\n\n        // 240 bits fits 40 6-bit chunks and 30 8-bit chunks\n        // we pack 40 base64 values into a field element and convert into 30 bytes\n        // TODO: once we support arithmetic ops on generics, derive OutputBytes from InputBytes\n        let mut result: [u8; OutputBytes] = [0; OutputBytes];\n        let BASE64_ELEMENTS_PER_CHUNK: u32 = 40;\n        let BYTES_PER_CHUNK: u32 = 30;\n        let num_chunks = (InputElements / BASE64_ELEMENTS_PER_CHUNK)\n            + (InputElements % BASE64_ELEMENTS_PER_CHUNK != 0) as u32;\n\n        if num_chunks > 0 {\n            let final_chunk = num_chunks - 1;\n\n            for i in 0..final_chunk {\n                let mut slice: Field = 0;\n                for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n                    slice *= 64;\n                    let offset = i * BASE64_ELEMENTS_PER_CHUNK + j;\n                    let input_byte = input[offset];\n                    let decoded = self.get(input_byte as Field);\n                    assert(\n                        decoded != INVALID_VALUE,\n                        f\"DecodeError: invalid symbol {input_byte}, offset {offset}.\",\n                    );\n                    slice += decoded as Field;\n                }\n                let slice_bytes: [u8; 30] = slice.to_be_bytes();\n                for j in 0..BYTES_PER_CHUNK {\n                    result[i * BYTES_PER_CHUNK + j] = slice_bytes[j];\n                }\n            }\n\n            // process the final chunk, which may contain padding\n            let base64_offset: u32 = final_chunk * BASE64_ELEMENTS_PER_CHUNK;\n            let byte_offset = final_chunk * BYTES_PER_CHUNK;\n            let base64_elements_in_final_chunk = if self.pad {\n                InputElements - base64_offset - num_padding_chars\n            } else {\n                InputElements - base64_offset\n            };\n\n            // pack the base64 values into the field element\n            let mut slice: Field = 0;\n            for j in 0..base64_elements_in_final_chunk {\n                slice *= 64;\n                let offset = base64_offset + j;\n                let input_byte = input[offset];\n                let decoded = self.get(input_byte as Field);\n                assert(\n                    decoded != INVALID_VALUE,\n                    f\"DecodeError: invalid symbol {input_byte}, offset {offset}.\",\n                );\n                slice += decoded as Field;\n            }\n            for _ in base64_elements_in_final_chunk..BASE64_ELEMENTS_PER_CHUNK {\n                slice *= 64;\n            }\n\n            // TODO: check is it cheaper to use a constant value in `to_be_bytes` or can we use `bytes_in_final_chunk`?\n            // extract the bytes from the Field element\n            let slice_bytes: [u8; 30] = slice.to_be_bytes();\n            let num_bytes_in_final_chunk = OutputBytes - byte_offset;\n            for i in 0..num_bytes_in_final_chunk {\n                result[byte_offset + i] = slice_bytes[i];\n            }\n        }\n\n        result\n    }\n}\n\n#[test]\nfn test_decode_empty() {\n    let input: [u8; 0] = [];\n    let expected: [u8; 0] = [];\n    let result = STANDARD.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_padding() {\n    // f\n    let input: [u8; 4] = [90, 103, 61, 61];\n    let expected: [u8; 1] = [102];\n    let result = STANDARD.decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 4] = [90, 109, 56, 61];\n    let expected: [u8; 2] = [102, 111];\n    let result = STANDARD.decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = STANDARD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard_no_pad() {\n    // f\n    let input: [u8; 2] = [90, 103];\n    let expected: [u8; 1] = [102];\n    let result = STANDARD_NO_PAD.decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 3] = [90, 109, 56];\n    let expected: [u8; 2] = [102, 111];\n    let result = STANDARD_NO_PAD.decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = STANDARD_NO_PAD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_max_byte() {\n    let expected: [u8; 1] = [255];\n\n    let input: [u8; 4] = [47, 119, 61, 61]; // \"/w==\"\n    let result: [u8; 1] = STANDARD.decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [47, 119]; // \"/w\"\n    let result: [u8; 1] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n\n    let input: [u8; 4] = [95, 119, 61, 61]; // \"_w==\"\n    let result: [u8; 1] = URL_SAFE_WITH_PAD.decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [95, 119]; // \"_w\"\n    let result: [u8; 1] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 255, offset 0\")]\nfn test_decode_invalid() {\n    let input: [u8; 2] = [255, 255];\n    let _: [u8; 1] = STANDARD_NO_PAD.decode(input);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_standard_no_pad_fail_with_padding() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = STANDARD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 95, offset 0\")]\nfn test_decode_underscore_with_standard() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let _: [u8; 2] = STANDARD.decode(input);\n}\n\n#[test]\nfn test_decode_url_safe_with_pad() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = URL_SAFE_WITH_PAD.decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 47, offset 0\")]\nfn test_decode_slash_with_url_safe() {\n    // test decoding / and +\n    let input: [u8; 3] = [47, 43, 65];\n    let _: [u8; 2] = URL_SAFE.decode(input);\n}\n\n#[test]\nfn test_decode_url_safe() {\n    // test decoding _ and -\n    let input: [u8; 3] = [95, 45, 65];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = URL_SAFE.decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_url_safe_no_pad_fail_with_padding() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_ascii() {\n    // base64: SGVsbG8gV29ybGQh\n    let input: [u8; 16] = [83, 71, 86, 115, 98, 71, 56, 103, 86, 50, 57, 121, 98, 71, 81, 104];\n    // \"Hello World!\"\n    let expected: [u8; 12] = [72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33];\n\n    // all configurations should decode the same way\n    let result: [u8; 12] = STANDARD.decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = URL_SAFE_WITH_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_utf8() {\n    // base64: 44GT44KT44Gr44Gh44Gv44CB5LiW55WM77yB\n    let input: [u8; 36] = [\n        52, 52, 71, 84, 52, 52, 75, 84, 52, 52, 71, 114, 52, 52, 71, 104, 52, 52, 71, 118, 52, 52,\n        67, 66, 53, 76, 105, 87, 53, 53, 87, 77, 55, 55, 121, 66,\n    ];\n    // non-ascii utf-8: \"Hello, World!\" in Japanese\n    let expected: [u8; 27] = [\n        227, 129, 147, 227, 130, 147, 227, 129, 171, 227, 129, 161, 227, 129, 175, 227, 128, 129,\n        228, 184, 150, 231, 149, 140, 239, 188, 129,\n    ];\n\n    // all configurations should decode the same way\n    let result: [u8; 27] = STANDARD.decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = STANDARD_NO_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = URL_SAFE_WITH_PAD.decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = URL_SAFE.decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_multi_chunks() {\n    let expected = \"The quick brown fox jumps over the lazy dog, while 42 ravens perch atop a rusty mailbox. Zany quilters fabricate 9 cozy blankets, as 3 jovial wizards expertly mix 5 potent elixirs. Bright neon signs flash \\\"OPEN 24/7\\\" in the misty night air, illuminating 8 vintage cars parked along Main Street. A gentle breeze carries the aroma of fresh coffee and warm cinnamon rolls from Joe's Diner, enticing 6 sleepy truckers to stop for a late-night snack. Meanwhile, 11 mischievous kittens playfully chase a ball of yarn across Mrs. Johnson's porch, their antics observed by 2 wise old owls perched on a nearby oak tree.\";\n\n    let input: [u8; 816] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 119, 103, 100, 50,\n        104, 112, 98, 71, 85, 103, 78, 68, 73, 103, 99, 109, 70, 50, 90, 87, 53, 122, 73, 72, 66,\n        108, 99, 109, 78, 111, 73, 71, 70, 48, 98, 51, 65, 103, 89, 83, 66, 121, 100, 88, 78, 48,\n        101, 83, 66, 116, 89, 87, 108, 115, 89, 109, 57, 52, 76, 105, 66, 97, 89, 87, 53, 53, 73,\n        72, 70, 49, 97, 87, 120, 48, 90, 88, 74, 122, 73, 71, 90, 104, 89, 110, 74, 112, 89, 50, 70,\n        48, 90, 83, 65, 53, 73, 71, 78, 118, 101, 110, 107, 103, 89, 109, 120, 104, 98, 109, 116,\n        108, 100, 72, 77, 115, 73, 71, 70, 122, 73, 68, 77, 103, 97, 109, 57, 50, 97, 87, 70, 115,\n        73, 72, 100, 112, 101, 109, 70, 121, 90, 72, 77, 103, 90, 88, 104, 119, 90, 88, 74, 48, 98,\n        72, 107, 103, 98, 87, 108, 52, 73, 68, 85, 103, 99, 71, 57, 48, 90, 87, 53, 48, 73, 71, 86,\n        115, 97, 88, 104, 112, 99, 110, 77, 117, 73, 69, 74, 121, 97, 87, 100, 111, 100, 67, 66,\n        117, 90, 87, 57, 117, 73, 72, 78, 112, 90, 50, 53, 122, 73, 71, 90, 115, 89, 88, 78, 111,\n        73, 67, 74, 80, 85, 69, 86, 79, 73, 68, 73, 48, 76, 122, 99, 105, 73, 71, 108, 117, 73, 72,\n        82, 111, 90, 83, 66, 116, 97, 88, 78, 48, 101, 83, 66, 117, 97, 87, 100, 111, 100, 67, 66,\n        104, 97, 88, 73, 115, 73, 71, 108, 115, 98, 72, 86, 116, 97, 87, 53, 104, 100, 71, 108, 117,\n        90, 121, 65, 52, 73, 72, 90, 112, 98, 110, 82, 104, 90, 50, 85, 103, 89, 50, 70, 121, 99,\n        121, 66, 119, 89, 88, 74, 114, 90, 87, 81, 103, 89, 87, 120, 118, 98, 109, 99, 103, 84, 87,\n        70, 112, 98, 105, 66, 84, 100, 72, 74, 108, 90, 88, 81, 117, 73, 69, 69, 103, 90, 50, 86,\n        117, 100, 71, 120, 108, 73, 71, 74, 121, 90, 87, 86, 54, 90, 83, 66, 106, 89, 88, 74, 121,\n        97, 87, 86, 122, 73, 72, 82, 111, 90, 83, 66, 104, 99, 109, 57, 116, 89, 83, 66, 118, 90,\n        105, 66, 109, 99, 109, 86, 122, 97, 67, 66, 106, 98, 50, 90, 109, 90, 87, 85, 103, 89, 87,\n        53, 107, 73, 72, 100, 104, 99, 109, 48, 103, 89, 50, 108, 117, 98, 109, 70, 116, 98, 50, 52,\n        103, 99, 109, 57, 115, 98, 72, 77, 103, 90, 110, 74, 118, 98, 83, 66, 75, 98, 50, 85, 110,\n        99, 121, 66, 69, 97, 87, 53, 108, 99, 105, 119, 103, 90, 87, 53, 48, 97, 87, 78, 112, 98,\n        109, 99, 103, 78, 105, 66, 122, 98, 71, 86, 108, 99, 72, 107, 103, 100, 72, 74, 49, 89, 50,\n        116, 108, 99, 110, 77, 103, 100, 71, 56, 103, 99, 51, 82, 118, 99, 67, 66, 109, 98, 51, 73,\n        103, 89, 83, 66, 115, 89, 88, 82, 108, 76, 87, 53, 112, 90, 50, 104, 48, 73, 72, 78, 117,\n        89, 87, 78, 114, 76, 105, 66, 78, 90, 87, 70, 117, 100, 50, 104, 112, 98, 71, 85, 115, 73,\n        68, 69, 120, 73, 71, 49, 112, 99, 50, 78, 111, 97, 87, 86, 50, 98, 51, 86, 122, 73, 71, 116,\n        112, 100, 72, 82, 108, 98, 110, 77, 103, 99, 71, 120, 104, 101, 87, 90, 49, 98, 71, 120, 53,\n        73, 71, 78, 111, 89, 88, 78, 108, 73, 71, 69, 103, 89, 109, 70, 115, 98, 67, 66, 118, 90,\n        105, 66, 53, 89, 88, 74, 117, 73, 71, 70, 106, 99, 109, 57, 122, 99, 121, 66, 78, 99, 110,\n        77, 117, 73, 69, 112, 118, 97, 71, 53, 122, 98, 50, 52, 110, 99, 121, 66, 119, 98, 51, 74,\n        106, 97, 67, 119, 103, 100, 71, 104, 108, 97, 88, 73, 103, 89, 87, 53, 48, 97, 87, 78, 122,\n        73, 71, 57, 105, 99, 50, 86, 121, 100, 109, 86, 107, 73, 71, 74, 53, 73, 68, 73, 103, 100,\n        50, 108, 122, 90, 83, 66, 118, 98, 71, 81, 103, 98, 51, 100, 115, 99, 121, 66, 119, 90, 88,\n        74, 106, 97, 71, 86, 107, 73, 71, 57, 117, 73, 71, 69, 103, 98, 109, 86, 104, 99, 109, 74,\n        53, 73, 71, 57, 104, 97, 121, 66, 48, 99, 109, 86, 108, 76, 103, 61, 61,\n    ];\n    let result: [u8; 610] = STANDARD.decode(input);\n    assert(result == expected.as_bytes());\n\n    let input: [u8; 814] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 119, 103, 100, 50,\n        104, 112, 98, 71, 85, 103, 78, 68, 73, 103, 99, 109, 70, 50, 90, 87, 53, 122, 73, 72, 66,\n        108, 99, 109, 78, 111, 73, 71, 70, 48, 98, 51, 65, 103, 89, 83, 66, 121, 100, 88, 78, 48,\n        101, 83, 66, 116, 89, 87, 108, 115, 89, 109, 57, 52, 76, 105, 66, 97, 89, 87, 53, 53, 73,\n        72, 70, 49, 97, 87, 120, 48, 90, 88, 74, 122, 73, 71, 90, 104, 89, 110, 74, 112, 89, 50, 70,\n        48, 90, 83, 65, 53, 73, 71, 78, 118, 101, 110, 107, 103, 89, 109, 120, 104, 98, 109, 116,\n        108, 100, 72, 77, 115, 73, 71, 70, 122, 73, 68, 77, 103, 97, 109, 57, 50, 97, 87, 70, 115,\n        73, 72, 100, 112, 101, 109, 70, 121, 90, 72, 77, 103, 90, 88, 104, 119, 90, 88, 74, 48, 98,\n        72, 107, 103, 98, 87, 108, 52, 73, 68, 85, 103, 99, 71, 57, 48, 90, 87, 53, 48, 73, 71, 86,\n        115, 97, 88, 104, 112, 99, 110, 77, 117, 73, 69, 74, 121, 97, 87, 100, 111, 100, 67, 66,\n        117, 90, 87, 57, 117, 73, 72, 78, 112, 90, 50, 53, 122, 73, 71, 90, 115, 89, 88, 78, 111,\n        73, 67, 74, 80, 85, 69, 86, 79, 73, 68, 73, 48, 76, 122, 99, 105, 73, 71, 108, 117, 73, 72,\n        82, 111, 90, 83, 66, 116, 97, 88, 78, 48, 101, 83, 66, 117, 97, 87, 100, 111, 100, 67, 66,\n        104, 97, 88, 73, 115, 73, 71, 108, 115, 98, 72, 86, 116, 97, 87, 53, 104, 100, 71, 108, 117,\n        90, 121, 65, 52, 73, 72, 90, 112, 98, 110, 82, 104, 90, 50, 85, 103, 89, 50, 70, 121, 99,\n        121, 66, 119, 89, 88, 74, 114, 90, 87, 81, 103, 89, 87, 120, 118, 98, 109, 99, 103, 84, 87,\n        70, 112, 98, 105, 66, 84, 100, 72, 74, 108, 90, 88, 81, 117, 73, 69, 69, 103, 90, 50, 86,\n        117, 100, 71, 120, 108, 73, 71, 74, 121, 90, 87, 86, 54, 90, 83, 66, 106, 89, 88, 74, 121,\n        97, 87, 86, 122, 73, 72, 82, 111, 90, 83, 66, 104, 99, 109, 57, 116, 89, 83, 66, 118, 90,\n        105, 66, 109, 99, 109, 86, 122, 97, 67, 66, 106, 98, 50, 90, 109, 90, 87, 85, 103, 89, 87,\n        53, 107, 73, 72, 100, 104, 99, 109, 48, 103, 89, 50, 108, 117, 98, 109, 70, 116, 98, 50, 52,\n        103, 99, 109, 57, 115, 98, 72, 77, 103, 90, 110, 74, 118, 98, 83, 66, 75, 98, 50, 85, 110,\n        99, 121, 66, 69, 97, 87, 53, 108, 99, 105, 119, 103, 90, 87, 53, 48, 97, 87, 78, 112, 98,\n        109, 99, 103, 78, 105, 66, 122, 98, 71, 86, 108, 99, 72, 107, 103, 100, 72, 74, 49, 89, 50,\n        116, 108, 99, 110, 77, 103, 100, 71, 56, 103, 99, 51, 82, 118, 99, 67, 66, 109, 98, 51, 73,\n        103, 89, 83, 66, 115, 89, 88, 82, 108, 76, 87, 53, 112, 90, 50, 104, 48, 73, 72, 78, 117,\n        89, 87, 78, 114, 76, 105, 66, 78, 90, 87, 70, 117, 100, 50, 104, 112, 98, 71, 85, 115, 73,\n        68, 69, 120, 73, 71, 49, 112, 99, 50, 78, 111, 97, 87, 86, 50, 98, 51, 86, 122, 73, 71, 116,\n        112, 100, 72, 82, 108, 98, 110, 77, 103, 99, 71, 120, 104, 101, 87, 90, 49, 98, 71, 120, 53,\n        73, 71, 78, 111, 89, 88, 78, 108, 73, 71, 69, 103, 89, 109, 70, 115, 98, 67, 66, 118, 90,\n        105, 66, 53, 89, 88, 74, 117, 73, 71, 70, 106, 99, 109, 57, 122, 99, 121, 66, 78, 99, 110,\n        77, 117, 73, 69, 112, 118, 97, 71, 53, 122, 98, 50, 52, 110, 99, 121, 66, 119, 98, 51, 74,\n        106, 97, 67, 119, 103, 100, 71, 104, 108, 97, 88, 73, 103, 89, 87, 53, 48, 97, 87, 78, 122,\n        73, 71, 57, 105, 99, 50, 86, 121, 100, 109, 86, 107, 73, 71, 74, 53, 73, 68, 73, 103, 100,\n        50, 108, 122, 90, 83, 66, 118, 98, 71, 81, 103, 98, 51, 100, 115, 99, 121, 66, 119, 90, 88,\n        74, 106, 97, 71, 86, 107, 73, 71, 57, 117, 73, 71, 69, 103, 98, 109, 86, 104, 99, 109, 74,\n        53, 73, 71, 57, 104, 97, 121, 66, 48, 99, 109, 86, 108, 76, 103,\n    ];\n    let result = STANDARD_NO_PAD.decode(input);\n    assert(result == expected.as_bytes());\n}\n\n#[test]\nfn test_decode_with_padding() {\n    // Raw bh: GxMlgwLiypnVrE2C0Sf4yzhcWTkAhSZ5+WERhKhXtlU=\n    // Translated directly to ASCII\n    let input: [u8; 44] = [\n        71, 120, 77, 108, 103, 119, 76, 105, 121, 112, 110, 86, 114, 69, 50, 67, 48, 83, 102, 52,\n        121, 122, 104, 99, 87, 84, 107, 65, 104, 83, 90, 53, 43, 87, 69, 82, 104, 75, 104, 88, 116,\n        108, 85, 61,\n    ];\n\n    let result: [u8; 32] = STANDARD.decode(input);\n    let expected: [u8; 32] = [\n        27, 19, 37, 131, 2, 226, 202, 153, 213, 172, 77, 130, 209, 39, 248, 203, 56, 92, 89, 57, 0,\n        133, 38, 121, 249, 97, 17, 132, 168, 87, 182, 85,\n    ];\n    assert(result == expected);\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir_base64/v0.3.1/src/decoder.nr"},"78":{"source":"use crate::params::BigNumParams;\nuse crate::utils::map::map;\n\nuse crate::fns::{\n    constrained_ops::{\n        add, assert_is_not_equal, conditional_select, derive_from_seed, div, eq, is_zero, mul, neg,\n        sub, udiv, udiv_mod, umod, validate_in_field, validate_in_range,\n    },\n    expressions::{__compute_quadratic_expression, evaluate_quadratic_expression},\n    serialization::{from_be_bytes, to_le_bytes},\n    unconstrained_ops::{\n        __add, __batch_invert, __batch_invert_slice, __derive_from_seed, __div, __eq, __invmod,\n        __is_zero, __mul, __neg, __pow, __sub, __tonelli_shanks_sqrt, __udiv_mod,\n    },\n};\nuse std::ops::{Add, Div, Mul, Neg, Sub};\n\npub struct RuntimeBigNum<let N: u32, let MOD_BITS: u32> {\n    pub limbs: [Field; N],\n    pub params: BigNumParams<N, MOD_BITS>,\n}\n\nimpl<let N: u32, let MOD_BITS: u32> RuntimeBigNum<N, MOD_BITS> {}\n\n// All functions prefixed `__` are unconstrained!\n// They're not actually decorated as `unconstrained` because to return the `params` (as part of Self) from an `unconstrained` fn would cause range constraints. Instead, each `__` fn wraps a call to an unconstrained fn, so that the already-range-constrained `params` can be inserted into Self after the unconstrained call.\npub(crate) trait RuntimeBigNumTrait<let N: u32, let MOD_BITS: u32>: Neg + Add + Sub + Mul + Div + Eq {\n    pub fn new(params: BigNumParams<N, MOD_BITS>) -> Self;\n    pub fn one(params: BigNumParams<N, MOD_BITS>) -> Self;\n    pub fn derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self;\n    pub unconstrained fn __derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self;\n    pub fn from_slice(params: BigNumParams<N, MOD_BITS>, limbs: [Field]) -> Self;\n    pub fn from_array(params: BigNumParams<N, MOD_BITS>, limbs: [Field; N]) -> Self;\n    pub fn from_be_bytes<let NBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        x: [u8; NBytes],\n    ) -> Self;\n\n    pub fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes];\n\n    pub fn modulus(self) -> Self;\n    pub fn modulus_bits() -> u32;\n    pub fn num_limbs() -> u32;\n    // pub fn get(self) -> [Field];\n    pub fn get_limbs(self) -> [Field; N];\n    pub fn get_limb(self, idx: u32) -> Field;\n    pub fn set_limb(&mut self, idx: u32, value: Field);\n\n    unconstrained fn __eq(self, other: Self) -> bool;\n    unconstrained fn __is_zero(self) -> bool;\n\n    // unconstrained\n    pub fn __neg(self) -> Self;\n    // unconstrained\n    pub fn __add(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __sub(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __mul(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __div(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __udiv_mod(self, divisor: Self) -> (Self, Self);\n    // unconstrained\n    pub fn __invmod(self) -> Self;\n    // unconstrained\n    pub fn __pow(self, exponent: Self) -> Self;\n\n    // unconstrained\n    pub fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M];\n    unconstrained fn __batch_invert_slice<let M: u32>(to_invert: [Self]) -> [Self];\n\n    pub fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self>;\n\n    // unconstrained\n    pub fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self);\n\n    pub fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    );\n\n    pub fn eq(lhs: Self, rhs: Self) -> bool {\n        lhs == rhs\n    }\n    pub fn assert_is_not_equal(self, other: Self);\n    pub fn validate_in_field(self);\n    pub fn validate_in_range(self);\n    // pub fn validate_gt(self, lhs: Self, rhs: Self);\n\n    pub fn udiv_mod(numerator: Self, divisor: Self) -> (Self, Self);\n    pub fn udiv(numerator: Self, divisor: Self) -> Self;\n    pub fn umod(numerator: Self, divisor: Self) -> Self;\n\n    pub fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n    pub fn is_zero(self) -> bool;\n}\n\nimpl<let N: u32, let MOD_BITS: u32> Neg for RuntimeBigNum<N, MOD_BITS> {\n    fn neg(self) -> Self {\n        let params = self.params;\n        Self { limbs: neg::<_, MOD_BITS>(params, self.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> RuntimeBigNumTrait<N, MOD_BITS> for RuntimeBigNum<N, MOD_BITS> {\n\n    fn new(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let limbs: [Field; N] = [0; N];\n        Self { limbs, params }\n    }\n\n    fn one(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let mut result = RuntimeBigNum::new(params);\n        result.limbs[0] = 1;\n        result\n    }\n\n    fn derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = derive_from_seed::<_, MOD_BITS, _>(params, seed);\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    unconstrained fn __derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = __derive_from_seed::<_, MOD_BITS, _>(params, seed);\n        Self { limbs, params }\n    }\n\n    fn from_slice(params: BigNumParams<N, MOD_BITS>, limbs: [Field]) -> Self {\n        Self { limbs: limbs.as_array(), params }\n    }\n\n    fn from_array(params: BigNumParams<N, MOD_BITS>, limbs: [Field; N]) -> Self {\n        Self { limbs, params }\n    }\n\n    fn from_be_bytes<let NBytes: u32>(params: BigNumParams<N, MOD_BITS>, x: [u8; NBytes]) -> Self {\n        Self { limbs: from_be_bytes::<_, MOD_BITS, _>(x), params }\n    }\n\n    fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes] {\n        to_le_bytes::<_, MOD_BITS, _>(self.limbs)\n    }\n\n    fn modulus(self) -> Self {\n        let params = self.params;\n        Self { limbs: params.modulus, params }\n    }\n\n    fn modulus_bits() -> u32 {\n        MOD_BITS\n    }\n\n    fn num_limbs() -> u32 {\n        N\n    }\n\n    // fn get(self) -> [Field] {\n    //     self.get_limbs()\n    // }\n\n    fn get_limbs(self) -> [Field; N] {\n        self.limbs\n    }\n\n    fn get_limb(self, idx: u32) -> Field {\n        self.limbs[idx]\n    }\n\n    fn set_limb(&mut self, idx: u32, value: Field) {\n        self.limbs[idx] = value;\n    }\n\n    unconstrained fn __eq(self, other: Self) -> bool {\n        assert(self.params == other.params);\n        __eq(self.limbs, other.limbs)\n    }\n\n    unconstrained fn __is_zero(self) -> bool {\n        __is_zero(self.limbs)\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __neg(self) -> Self {\n        let params = self.params;\n        let limbs = unsafe { __neg(params, self.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __add(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __sub(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __mul::<_, MOD_BITS>(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        let limbs = unsafe { __div::<_, MOD_BITS>(params, self.limbs, divisor.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = unsafe { __udiv_mod(self.limbs, divisor.limbs) };\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __invmod(self) -> Self {\n        let params = self.params;\n        assert(params.has_multiplicative_inverse);\n        let limbs = unsafe { __invmod::<_, MOD_BITS>(params, self.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __pow(self, exponent: Self) -> Self {\n        let params = self.params;\n        assert(params == exponent.params);\n        let limbs = unsafe { __pow::<_, MOD_BITS>(params, self.limbs, exponent.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs =\n            unsafe { __batch_invert::<_, MOD_BITS, _>(params, x.map(|bn| Self::get_limbs(bn))) };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // Note: can't return a slice from this unconstrained to a constrained function.\n    unconstrained fn __batch_invert_slice<let M: u32>(x: [Self]) -> [Self] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs = {\n            let inv_slice =\n                __batch_invert_slice::<_, MOD_BITS>(params, x.map(|bn| Self::get_limbs(bn)));\n            inv_slice.as_array()\n        };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self> {\n        let params = self.params;\n        let maybe_limbs = unsafe { __tonelli_shanks_sqrt(params, self.limbs) };\n        maybe_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self) {\n        let (q_limbs, r_limbs) = unsafe {\n            __compute_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n                params,\n                map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                lhs_flags,\n                map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                rhs_flags,\n                map(linear_terms, |bn| Self::get_limbs(bn)),\n                linear_flags,\n            )\n        };\n        (Self { limbs: q_limbs, params }, Self { limbs: r_limbs, params })\n    }\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) {\n        evaluate_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            rhs_flags,\n            map(linear_terms, |bn| Self::get_limbs(bn)),\n            linear_flags,\n        )\n    }\n\n    fn validate_in_field(self: Self) {\n        let params = self.params;\n        validate_in_field::<_, MOD_BITS>(params, self.limbs);\n    }\n\n    fn validate_in_range(self) {\n        validate_in_range::<_, MOD_BITS>(self.limbs);\n    }\n\n    fn assert_is_not_equal(self, other: Self) {\n        let params = self.params;\n        assert(params == other.params);\n        assert_is_not_equal(params, self.limbs, other.limbs);\n    }\n\n    fn udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = udiv_mod::<_, MOD_BITS>(params, self.limbs, divisor.limbs);\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    fn udiv(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: udiv::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    fn umod(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: umod::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let params = lhs.params;\n        assert(params == rhs.params);\n        Self { limbs: conditional_select(lhs.limbs, rhs.limbs, predicate), params }\n    }\n\n    fn is_zero(self) -> bool {\n        is_zero::<N, MOD_BITS>(self.limbs)\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Add for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: add::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Sub for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: sub::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Mul for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: mul::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Div for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: div::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for RuntimeBigNum<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        let params = self.params;\n        assert(params == other.params);\n        eq::<_, MOD_BITS>(params, self.limbs, other.limbs)\n    }\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/runtime_bignum.nr"},"79":{"source":"use crate::fns::{\n    expressions::evaluate_quadratic_expression,\n    unconstrained_helpers::{\n        __add_with_flags, __from_field, __neg_with_flags, __sub_with_flags, __validate_gt_remainder,\n        __validate_in_field_compute_borrow_flags,\n    },\n    unconstrained_ops::{__add, __div, __mul, __neg, __sub, __udiv_mod},\n};\nuse crate::params::BigNumParams as P;\n\nglobal TWO_POW_120: Field = 0x1000000000000000000000000000000;\n\n/**\n * In this file:\n *\n * conditional_select\n * assert_is_not_equal\n * eq\n * validate_in_field\n * validate_in_range\n * validate_quotient_in_range\n * validate_gt\n * neg\n * add\n * sub\n * mul\n * div\n * udiv_mod\n * udiv\n * umod\n */\n\npub(crate) fn limbs_to_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    limbs: [Field; N],\n) -> Field {\n    let TWO_POW_120 = 0x1000000000000000000000000000000;\n    if N > 2 {\n        // validate that the limbs is less than the modulus the grumpkin modulus\n        let mut grumpkin_modulus = [0; N];\n        grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n        grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n        grumpkin_modulus[2] = 0x3064;\n        validate_gt::<N, MOD_BITS>(grumpkin_modulus, limbs);\n        // validate that the limbs are in range\n        validate_in_range::<N, MOD_BITS>(limbs);\n    }\n    // validate the limbs sum up to the field value\n    if N < 2 {\n        limbs[0]\n    } else if N == 2 {\n        validate_in_range::<N, MOD_BITS>(limbs);\n        limbs[0] + limbs[1] * TWO_POW_120\n    } else {\n        // validate_in_range::<N, 254>(limbs);\n        limbs[0] + limbs[1] * TWO_POW_120 + limbs[2] * TWO_POW_120 * TWO_POW_120\n    }\n}\n\npub(crate) fn from_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    field: Field,\n) -> [Field; N] {\n    // Safety: we check that the resulting limbs represent the intended field element\n    // we check the bit length, the limbs being max 120 bits, and the value in total is less than the field modulus\n    let result = unsafe { __from_field::<N>(field) };\n\n    if !std::runtime::is_unconstrained() {\n        // validate the limbs are in range and the value in total is less than 2^254\n\n        let TWO_POW_120 = 0x1000000000000000000000000000000;\n        // validate that the last limb is less than the modulus\n        if N > 2 {\n            // validate that the result is less than the modulus\n            let mut grumpkin_modulus = [0; N];\n            grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n            grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n            grumpkin_modulus[2] = 0x3064;\n            validate_gt::<N, MOD_BITS>(grumpkin_modulus, result);\n            // validate that the limbs are in range\n            validate_in_range::<N, MOD_BITS>(result);\n        }\n        // validate the limbs sum up to the field value\n        let field_val = if N < 2 {\n            result[0]\n        } else if N == 2 {\n            validate_in_range::<N, MOD_BITS>(result);\n            result[0] + result[1] * TWO_POW_120\n        } else {\n            validate_in_range::<N, MOD_BITS>(result);\n            result[0] + result[1] * TWO_POW_120 + result[2] * TWO_POW_120 * TWO_POW_120\n        };\n        assert(field_val == field);\n    }\n\n    result\n}\n\n/**\n* @brief given an input seed, generate a pseudorandom BigNum value\n* @details we hash the input seed into `modulus_bits * 2` bits of entropy,\n* which is then reduced into a BigNum value\n* We use a hash function that can be modelled as a random oracle\n* This function *should* produce an output that is a uniformly randomly distributed value modulo BigNum::modulus()\n**/\npub(crate) fn derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [Field; N] {\n    let mut rolling_seed: [u8; SeedBytes + 1] = [0; SeedBytes + 1];\n    for i in 0..SeedBytes {\n        rolling_seed[i] = seed[i];\n        assert_eq(rolling_seed[i], seed[i]);\n    }\n\n    let mut hash_buffer: [u8; N * 2 * 15] = [0; N * 2 * 15];\n\n    let mut rolling_hash_fields: [Field; (SeedBytes / 31) + 1] = [0; (SeedBytes / 31) + 1];\n    let mut seed_ptr = 0;\n    for i in 0..(SeedBytes / 31) + 1 {\n        let mut packed: Field = 0;\n        for _ in 0..31 {\n            if (seed_ptr < SeedBytes) {\n                packed *= 256;\n                packed += seed[seed_ptr] as Field;\n                seed_ptr += 1;\n            }\n        }\n        rolling_hash_fields[i] = packed;\n    }\n\n    let compressed =\n        std::hash::poseidon2::Poseidon2::hash(rolling_hash_fields, (SeedBytes / 31) + 1);\n    let mut rolling_hash: [Field; 2] = [compressed, 0];\n\n    let num_hashes = (240 * N) / 254 + (((30 * N) % 32) != 0) as u32;\n    for i in 0..num_hashes - 1 {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        for j in 0..30 {\n            hash_buffer[i * 30 + j] = hash[j];\n        }\n        rolling_hash[1] += 1;\n    }\n\n    {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        let remaining_bytes = 30 * N - (num_hashes - 1) * 30;\n        for j in 0..remaining_bytes {\n            hash_buffer[(num_hashes - 1) * 30 + j] = hash[j];\n        }\n    }\n\n    let num_bits = MOD_BITS * 2;\n    let num_bytes = num_bits / 8 + ((num_bits % 8) != 0) as u32;\n\n    let bits_in_last_byte = num_bits as u8 % 8;\n    let last_byte_mask = (1 as u8 << bits_in_last_byte) - 1;\n    hash_buffer[num_bytes - 1] = hash_buffer[num_bytes - 1] & last_byte_mask;\n\n    let num_bigfield_chunks = (2 * N) / (N - 1) + (((2 * N) % (N - 1)) != 0) as u32;\n    let mut byte_ptr = 0;\n\n    // we want to convert our byte array into bigfield chunks\n    // each chunk has at most N-1 limbs\n    // to determine the exact number of chunks, we need the `!=` or `>` operator which is not avaiable when defining array sizes\n    // so we overestimate at 4\n    // e.g. if N = 20, then we have 40 limbs we want to reduce, but each bigfield chunk is 19 limbs, so we need 3\n    // if N = 2, we have 4 limbs we want to reduce but each bigfield chunk is only 1 limb, so we need 4\n    // max possible number of chunks is therefore 4\n    let mut bigfield_chunks: [[Field; N]; 4] = [[0; N]; 4];\n    for k in 0..num_bigfield_chunks {\n        let mut bigfield_limbs: [Field; N] = [0; N];\n        let mut num_filled_bytes = (k * 30);\n        let mut num_remaining_bytes = num_bytes - num_filled_bytes;\n        let mut num_remaining_limbs =\n            (num_remaining_bytes / 15) + (num_remaining_bytes % 15 > 0) as u32;\n        let mut more_than_N_minus_one_limbs = (num_remaining_limbs > (N - 1)) as u32;\n        let mut num_limbs_in_bigfield = more_than_N_minus_one_limbs * (N - 1)\n            + num_remaining_limbs * (1 - more_than_N_minus_one_limbs);\n\n        for j in 0..num_limbs_in_bigfield {\n            let mut limb: Field = 0;\n            for _ in 0..15 {\n                let need_more_bytes = (byte_ptr < num_bytes);\n                let mut byte = hash_buffer[byte_ptr];\n                limb *= (256 * need_more_bytes as Field + (1 - need_more_bytes as Field));\n                limb += byte as Field * need_more_bytes as Field;\n                byte_ptr += need_more_bytes as u32;\n            }\n            bigfield_limbs[num_limbs_in_bigfield - 1 - j] = limb;\n        }\n        bigfield_chunks[num_bigfield_chunks - 1 - k] = bigfield_limbs;\n    }\n\n    let mut bigfield_rhs_limbs: [Field; N] = [0; N];\n    bigfield_rhs_limbs[N - 1] = 1;\n    validate_in_range::<_, MOD_BITS>(bigfield_rhs_limbs);\n\n    let mut result: [Field; N] = [0; N];\n\n    for i in 0..num_bigfield_chunks {\n        let bigfield_lhs_limbs = bigfield_chunks[i];\n\n        result = mul(params, result, bigfield_rhs_limbs);\n        result = add(params, result, bigfield_lhs_limbs);\n    }\n    result\n}\n\n/**\n* @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n* @description should be cheaper than using an IF statement (TODO: check!)\n**/\npub(crate) fn conditional_select<let N: u32>(\n    lhs: [Field; N],\n    rhs: [Field; N],\n    predicate: bool,\n) -> [Field; N] {\n    let mut result: [Field; N] = lhs;\n    for i in 0..N {\n        result[i] = (lhs[i] - rhs[i]) * predicate as Field + rhs[i];\n    }\n    result\n}\n\n/**\n    * @brief Validate self != other\n    * @details If A == B, then A == B mod N.\n    *          We can efficiently evaluate A == B mod N where N = circuit modulus\n    *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n    *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n    *          (todo: compute how tiny)\n    **/\npub(crate) fn assert_is_not_equal<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) {\n    let mut l: Field = 0;\n    let mut r: Field = 0;\n    let mut modulus_mod_n: Field = 0;\n    for i in 0..N {\n        l *= TWO_POW_120;\n        r *= TWO_POW_120;\n        modulus_mod_n *= TWO_POW_120;\n        l += lhs[N - i - 1];\n        r += rhs[N - i - 1];\n        modulus_mod_n += params.modulus[N - i - 1];\n    }\n\n    // lhs can be either X mod N or P + X mod N\n    // rhs can be either Y mod N or P + Y mod N\n    // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n    let diff = l - r;\n    let target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n    assert(target != 0, \"asssert_is_not_equal fail\");\n}\n\npub(crate) fn eq<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> bool {\n    let diff = sub::<_, MOD_BITS>(params, lhs, rhs);\n    // if self == other, possible values of `diff` will be `p` or `0`\n    // (the subtract operator constrains diff to be < ceil(log(p)))\n    // TODO: can do this more efficiently via witngen in unconstrained functions?\n    let is_equal_modulus: bool = diff == params.modulus;\n    let is_equal_zero: bool = diff.all(|elem| elem == 0);\n    is_equal_modulus | is_equal_zero\n}\n\npub(crate) fn is_zero<let N: u32, let MOD_BITS: u32>(val: [Field; N]) -> bool {\n    val.all(|limb| limb == 0)\n}\n\npub(crate) fn validate_in_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) {\n    // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n    let mut p_minus_self: [Field; N] = [0; N];\n    let modulus: [Field; N] = params.modulus;\n    for i in 0..N {\n        p_minus_self[i] = modulus[i] - val[i];\n    }\n    let borrow_flags = unsafe { __validate_in_field_compute_borrow_flags(params, val) };\n    p_minus_self[0] += borrow_flags[0] as Field * TWO_POW_120;\n    for i in 1..N - 1 {\n        p_minus_self[i] += (borrow_flags[i] as Field * TWO_POW_120 - borrow_flags[i - 1] as Field);\n    }\n    p_minus_self[N - 1] -= borrow_flags[N - 2] as Field;\n    validate_in_range::<_, MOD_BITS>(p_minus_self);\n}\n\n/**\n* @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n**/\npub(crate) fn validate_in_range<let N: u32, let MOD_BITS: u32>(limbs: [Field; N]) {\n    for i in 0..(N - 1) {\n        limbs[i].assert_max_bit_size::<120>();\n    }\n    limbs[N - 1].assert_max_bit_size::<MOD_BITS - ((N - 1) * 120)>();\n}\n\n/**\n* @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n* @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n*              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n*              Why is this?\n*              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n*                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n*                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n*              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n*\n*              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n*              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n**/\npub(crate) fn validate_quotient_in_range<let N: u32, let MOD_BITS: u32>(limbs: [Field; N]) {\n    for i in 0..(N) {\n        limbs[i].assert_max_bit_size::<120>();\n    }\n    // Note: replace magic number 6 with definition\n    limbs[N - 1].assert_max_bit_size::<MOD_BITS - ((N - 1) * 120) + 6>();\n}\n\n// validate that lhs - rhs does not underflow i.e. lhs > rhs\npub(crate) fn validate_gt<let N: u32, let MOD_BITS: u32>(lhs: [Field; N], rhs: [Field; N]) {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    // a - b = r\n    // p + a - b - r = 0\n    let (result, carry_flags, borrow_flags) = unsafe { __validate_gt_remainder(lhs, rhs) };\n    validate_in_range::<_, MOD_BITS>(result);\n\n    let mut addend: [Field; N] = [0; N];\n    let result_limb = lhs[0] - rhs[0] + addend[0] - result[0] - 1\n        + (borrow_flags[0] as Field - carry_flags[0] as Field) * TWO_POW_120;\n    assert(result_limb == 0);\n\n    for i in 1..N - 1 {\n        let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n        let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n        let result_limb = lhs[i] - rhs[i] + addend[i] - result[i] - prev_borrow_sub_carry\n            + borrow_sub_carry * TWO_POW_120;\n        assert(result_limb == 0);\n    }\n\n    let result_limb = lhs[N - 1] - rhs[N - 1] + addend[N - 1]\n        - result[N - 1]\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n}\n\npub(crate) fn neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> [Field; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __neg(params, val)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe { __neg_with_flags(params, val) };\n        validate_in_range::<_, MOD_BITS>(result);\n        let modulus = params.modulus;\n        let result_limb =\n            modulus[0] - val[0] - result[0] + (borrow_flags[0] as Field * TWO_POW_120);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] - val[i] - result[i] - borrow_flags[i - 1] as Field\n                + (borrow_flags[i] as Field * TWO_POW_120);\n            assert(result_limb == 0);\n        }\n        let result_limb =\n            modulus[N - 1] - val[N - 1] - result[N - 1] - borrow_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __add(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) =\n            unsafe { __add_with_flags(params, lhs, rhs) };\n        validate_in_range::<_, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut subtrahend: [Field; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb =\n            lhs[0] + rhs[0] - subtrahend[0] - result[0] + borrow_sub_carry * TWO_POW_120;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = lhs[i] + rhs[i] - subtrahend[i] - result[i] - prev_borrow_sub_carry\n                + borrow_sub_carry * TWO_POW_120;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb =\n            lhs[N - 1] + rhs[N - 1] - subtrahend[N - 1] - result[N - 1] - borrow_sub_carry;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __sub(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) =\n            unsafe { __sub_with_flags(params, lhs, rhs) };\n        validate_in_range::<_, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut addend: [Field; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = lhs[0] - rhs[0] + addend[0] - result[0] + borrow_sub_carry * TWO_POW_120;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = lhs[i] - rhs[i] + addend[i] - result[i] - prev_borrow_sub_carry\n                + borrow_sub_carry * TWO_POW_120;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb =\n            lhs[N - 1] - rhs[N - 1] + addend[N - 1] - result[N - 1] - borrow_sub_carry;\n        assert(result_limb == 0);\n        result\n    }\n}\n\n// Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n//       via evaluate_quadratic_expression\n// e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n//      will create much fewer constraints than calling `mul` and `add` directly\npub(crate) fn mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    let result = unsafe { __mul::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[lhs]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [result],\n            [true],\n        );\n    }\n    result\n}\n\n// Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\npub(crate) fn div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    assert(\n        params.has_multiplicative_inverse,\n        \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\",\n    );\n    let result = unsafe { __div::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[result]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [lhs],\n            [true],\n        );\n    }\n    result\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) fn udiv_mod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> ([Field; N], [Field; N]) {\n    let (quotient, remainder) = unsafe { __udiv_mod(numerator, divisor) };\n\n    if !std::runtime::is_unconstrained() {\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        evaluate_quadratic_expression(\n            params,\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false],\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        validate_gt::<_, MOD_BITS>(divisor, remainder);\n    }\n    (quotient, remainder)\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. return param is floor(numerator / divisor)\n**/\npub(crate) fn udiv<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> [Field; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).0\n}\n\n/**\n* @brief udiv_mod performs integer modular reduction\n*\n* i.e. 1. numerator % divisor = return value\n**/\npub(crate) fn umod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> [Field; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).1\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/fns/constrained_ops.nr"},"80":{"source":"use crate::fns::constrained_ops::derive_from_seed;\nuse crate::fns::unconstrained_helpers::{\n    __barrett_reduction, __multiplicative_generator, __primitive_root_log_size,\n    __tonelli_shanks_sqrt_inner_loop_check,\n};\nuse crate::params::BigNumParams as P;\nuse crate::utils::split_bits;\nuse crate::utils::u60_representation::U60Repr;\n\n/**\n * In this file:\n *\n * __one\n * __derive_from_seed\n * __eq\n * __is_zero\n * __neg\n * __add\n * __sub\n * __mul_with_quotient\n * __mul\n * __div\n * __udiv_mod\n * __invmod\n * __pow\n * __batch_invert\n * __batch_invert_slice\n */\n\npub(crate) unconstrained fn __one<let N: u32>() -> [Field; N] {\n    let mut limbs: [Field; N] = [0; N];\n    limbs[0] = 1;\n    limbs\n}\n\n/// Deterministically derives a big_num from a seed value.\n///\n/// Takes a seed byte array and generates a big_num in the range [0, modulus-1].\n///\n/// ## Value Parameters\n///\n/// - `params`: The BigNum parameters containing modulus and reduction info\n/// - `seed`:  Input seed bytes to derive from.\n///\n/// ## Returns\n///\n///  An array of field elements derived from the seed (the limbs of the big_num)\npub(crate) unconstrained fn __derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [Field; N] {\n    let out = derive_from_seed::<N, MOD_BITS, SeedBytes>(params, seed);\n    out\n}\n\npub(crate) unconstrained fn __eq<let N: u32>(lhs: [Field; N], rhs: [Field; N]) -> bool {\n    lhs == rhs\n}\n\npub(crate) unconstrained fn __is_zero<let N: u32>(limbs: [Field; N]) -> bool {\n    let mut result: bool = true;\n    for i in 0..N {\n        result = result & (limbs[i] == 0);\n    }\n\n    result\n}\n\n/**\n* @brief given an input `x`, compute `2p - x` (unconstrained)\n*\n* @description we subtract the input from double the modulus, because all constrained BigNum operations\n*              only guarantee that the output is in the range [0, ceil(log2(p))].\n*              I.E. the input may be larger than the modulus `p`.\n*              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n*              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n*              because such a check is expensive and usually unneccesary.\n*/\npub(crate) unconstrained fn __neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    limbs: [Field; N],\n) -> [Field; N] {\n    let f: [Field; N] = limbs;\n    let x_u60: U60Repr<N, 2> = U60Repr::from(f);\n    U60Repr::into(params.modulus_u60 - x_u60)\n}\n\npub(crate) unconstrained fn __add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    let x_u60: U60Repr<N, 2> = U60Repr::from(lhs);\n    let y_u60: U60Repr<N, 2> = U60Repr::from(rhs);\n\n    let mut z_u60 = x_u60 + y_u60;\n\n    if z_u60.gte(params.modulus_u60) {\n        z_u60 = z_u60 - params.modulus_u60;\n    }\n    U60Repr::into(z_u60)\n}\n\n/**\n* @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n* @description see `__neg` for why we use 2p instead of p\n**/\npub(crate) unconstrained fn __sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    __add(params, lhs, __neg(params, rhs))\n}\n\npub(crate) unconstrained fn __mul_with_quotient<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [Field; N]) {\n    let mut mul: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..N {\n        for j in 0..N {\n            mul[i + j] += lhs[i] * rhs[j];\n        }\n    }\n    let to_reduce = split_bits::__normalize_limbs(mul, 2 * N);\n    let (q, r) = __barrett_reduction(\n        to_reduce,\n        params.redc_param,\n        MOD_BITS,\n        params.modulus,\n        params.modulus_u60_x4,\n    );\n\n    (q, r)\n}\n\npub(crate) unconstrained fn __mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    let (_, b) = __mul_with_quotient::<_, MOD_BITS>(params, lhs, rhs);\n    b\n}\n\npub(crate) unconstrained fn __div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> [Field; N] {\n    let inv_divisor = __invmod::<_, MOD_BITS>(params, divisor);\n    __mul::<_, MOD_BITS>(params, numerator, inv_divisor)\n}\n\n/**\n* @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) unconstrained fn __udiv_mod<let N: u32>(\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> ([Field; N], [Field; N]) {\n    let mut quotient_u60: U60Repr<N, 2> = U60Repr::from([0; N]);\n    let mut remainder_u60: U60Repr<N, 2> = U60Repr::from(numerator);\n\n    let mut divisor_u60: U60Repr<N, 2> = U60Repr::from(divisor);\n    let b = divisor_u60;\n\n    let mut bit_difference = remainder_u60.get_msb() - divisor_u60.get_msb();\n\n    let mut accumulator_u60: U60Repr<N, 2> = U60Repr::one();\n    divisor_u60 = divisor_u60.shl(bit_difference);\n    accumulator_u60 = accumulator_u60.shl(bit_difference);\n\n    if (divisor_u60.gte(remainder_u60 + U60Repr::one())) {\n        divisor_u60.shr1();\n        accumulator_u60.shr1();\n    }\n    for _ in 0..(N * 120) {\n        if (remainder_u60.gte(b) == false) {\n            break;\n        }\n\n        // we've shunted 'divisor' up to have the same bit length as our remainder.\n        // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n        if (remainder_u60.gte(divisor_u60)) {\n            remainder_u60 -= divisor_u60;\n            // we can use OR here instead of +, as\n            // accumulator is always a nice power of two\n            quotient_u60 = quotient_u60 + accumulator_u60;\n        }\n        divisor_u60.shr1(); // >>= 1;\n        accumulator_u60.shr1(); //  >>= 1;\n    }\n\n    (U60Repr::into(quotient_u60), U60Repr::into(remainder_u60))\n}\n\npub(crate) unconstrained fn __invmod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> [Field; N] {\n    let one_u60: U60Repr<N, 2> = U60Repr::one();\n    let exp_u60 = params.modulus_u60 - (one_u60 + one_u60);\n    let exp = U60Repr::into(exp_u60);\n    __pow::<_, MOD_BITS>(params, val, exp)\n}\n\npub(crate) unconstrained fn __pow<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n    exponent: [Field; N],\n) -> [Field; N] {\n    let x: U60Repr<N, 2> = U60Repr::from(exponent);\n\n    let num_bits = MOD_BITS + 1;\n\n    let mut accumulator: [Field; N] = __one::<N>();\n\n    for i in 0..num_bits {\n        accumulator = __mul::<_, MOD_BITS>(params, accumulator, accumulator);\n        if x.get_bit(num_bits - i - 1) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, val);\n        }\n    }\n    accumulator\n}\n\npub(crate) unconstrained fn __batch_invert<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[Field; N]; M],\n) -> [[Field; N]; M] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [Field; N] = __one::<N>();\n    let mut result: [[Field; N]; M] = [[0; N]; M];\n    let mut temporaries: [[Field; N]; N] = std::mem::zeroed();\n    for i in 0..N {\n        temporaries[i] = accumulator;\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    let mut T0: [Field; N] = [0; N];\n    for i in 0..N {\n        let idx = N - 1 - i;\n        if (!__is_zero(x[idx])) {\n            T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __batch_invert_slice<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[Field; N]],\n) -> [[Field; N]] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [Field; N] = __one::<N>();\n    let mut result: [[Field; N]] = [[0; N]];\n    let mut temporaries: [[Field; N]; N] = std::mem::zeroed();\n    for i in 0..N {\n        temporaries[i] = accumulator;\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n        result = result.push_back([0; N]);\n    }\n\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    let mut T0: [Field; N] = [0; N];\n    for i in 0..x.len() {\n        let idx = x.len() - 1 - i;\n        if (__is_zero(x[idx]) == false) {\n            T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\n/**\n* @brief compute a modular square root using the Tonelli-Shanks algorithm\n* @details only use for prime fields! Function may infinite loop if used for non-prime fields\n* @note this is unconstrained fn. To constrain a square root, validate that output^2 = self\n* TODO: create fn that constrains nonexistence of square root (i.e. find x where x^2 = -self)\n**/\npub(crate) unconstrained fn __tonelli_shanks_sqrt<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    input: [Field; N],\n) -> std::option::Option<[Field; N]> {\n    // Tonelli-shanks algorithm begins by finding a field element Q and integer S,\n    // such that (p - 1) = Q.2^{s}\n    // We can compute the square root of a, by considering a^{(Q + 1) / 2} = R\n    // Once we have found such an R, we have\n    // R^{2} = a^{Q + 1} = a^{Q}a\n    // If a^{Q} = 1, we have found our square root.\n    // Otherwise, we have a^{Q} = t, where t is a 2^{s-1}'th root of unity.\n    // This is because t^{2^{s-1}} = a^{Q.2^{s-1}}.\n    // We know that (p - 1) = Q.w^{s}, therefore t^{2^{s-1}} = a^{(p - 1) / 2}\n    // From Euler's criterion, if a is a quadratic residue, a^{(p - 1) / 2} = 1\n    // i.e. t^{2^{s-1}} = 1\n    // To proceed with computing our square root, we want to transform t into a smaller subgroup,\n    // specifically, the (s-2)'th roots of unity.\n    // We do this by finding some value b,such that\n    // (t.b^2)^{2^{s-2}} = 1 and R' = R.b\n    // Finding such a b is trivial, because from Euler's criterion, we know that,\n    // for any quadratic non-residue z, z^{(p - 1) / 2} = -1\n    // i.e. z^{Q.2^{s-1}} = -1\n    // => z^Q is a 2^{s-1}'th root of -1\n    // => z^{Q^2} is a 2^{s-2}'th root of -1\n    // Since t^{2^{s-1}} = 1, we know that t^{2^{s - 2}} = -1\n    // => t.z^{Q^2} is a 2^{s - 2}'th root of unity.\n    // We can iteratively transform t into ever smaller subgroups, until t = 1.\n    // At each iteration, we need to find a new value for b, which we can obtain\n    // by repeatedly squaring z^{Q}\n    let one_u60: U60Repr<N, 2> = U60Repr::one();\n    let primitive_root_log_size = __primitive_root_log_size::<_, MOD_BITS>(params);\n    let mut Q = (params.modulus_u60 - one_u60).shr(primitive_root_log_size - 1);\n    let Q_minus_one_over_two_u60 = (Q - one_u60).shr(2);\n    let Q_minus_one_over_two: [Field; N] = U60Repr::into(Q_minus_one_over_two_u60);\n    let mut z = __multiplicative_generator::<_, MOD_BITS>(params); // the generator is a non-residue\n    let mut b = __pow::<_, MOD_BITS>(params, input, Q_minus_one_over_two);\n    let mut r = __mul::<_, MOD_BITS>(params, input, b);\n    let mut t = __mul::<_, MOD_BITS>(params, r, b);\n    let mut check: [Field; N] = t;\n    for _ in 0..primitive_root_log_size - 1 {\n        check = __mul::<_, MOD_BITS>(params, check, check);\n    }\n    let mut result = Option::none();\n    let one: [Field; N] = __one::<N>();\n    if (__eq(check, one)) {\n        let mut t1 = __pow::<_, MOD_BITS>(params, z, Q_minus_one_over_two);\n        let mut t2 = __mul::<_, MOD_BITS>(params, t1, z);\n        let mut c = __mul::<_, MOD_BITS>(params, t2, t1);\n        let mut m: u32 = primitive_root_log_size;\n        // tonelli shanks inner 1\n        // (if t2m == 1) then skip\n        // else increase i and square t2m and go again\n        // algorithm runtime should only be max the number of bits in modulus\n        for _ in 0..MOD_BITS {\n            if (__eq(t, one)) {\n                result = Option::some(r);\n                break;\n            }\n            let mut t2m = t;\n            // while loop time\n            let i = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, 0);\n            let mut j = m - i - 1;\n            b = c;\n            for _ in 0..j {\n                // how big\n                if (j == 0) {\n                    break;\n                }\n                b = __mul(params, b, b);\n                //j -= 1;\n            }\n            c = __mul::<_, MOD_BITS>(params, b, b);\n            t = __mul::<_, MOD_BITS>(params, t, c);\n            r = __mul::<_, MOD_BITS>(params, r, b);\n            m = i;\n        }\n    }\n    result\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/fns/unconstrained_ops.nr"},"82":{"source":"use crate::utils::split_bits;\n\nuse crate::fns::{\n    constrained_ops::validate_quotient_in_range, unconstrained_helpers::__barrett_reduction,\n};\nuse crate::params::BigNumParams as P;\n\n/**\n * In this file:\n *\n * __compute_quadratic_expression_with_borrow_flags\n * __add_linear_expression\n * __compute_quadratic_expression_product\n * __compute_quadratic_expression\n * evaluate_quadratic_expression\n */\n\n/**\n* @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n* @description The expression is of the form:\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n* For example, when computing the product a * b - q * p = 0, it is possible that:\n*      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n*      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n* In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n* In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n*\n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\nunconstrained fn __compute_quadratic_expression_with_borrow_flags<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([Field; N], [Field; N], [Field; 2 * N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut mulout_p = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n    let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n    let modulus: [Field; N] = params.modulus;\n    let modulus_bits = MOD_BITS;\n    let (quotient, remainder) = __barrett_reduction(\n        relation_result,\n        params.redc_param,\n        modulus_bits,\n        modulus,\n        params.modulus_u60_x4,\n    );\n    assert(remainder == [0; N]);\n\n    for i in 0..N {\n        for j in 0..N {\n            mulout_n[i + j] += quotient[i] * modulus[j];\n        }\n    }\n\n    // compute borrow flags from mulout_p and mulout_n\n    let mut borrow_flags: [Field; 2 * N] = [0; 2 * N];\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    let two_pow_120: Field = 0x1000000000000000000000000000000;\n    let downshift: Field = 1 / two_pow_120;\n\n    // determine whether we need to borrow from more significant limbs.\n    // initial limb is \"simple\" comparison operation\n    // TODO: check how expensive `lt` operator is w.r.t. witness generation\n    borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n    // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n    // and there is nothing to borrow against for the final limb.\n    let mut hi_bits = (mulout_p[0] - mulout_n[0] + (borrow_flags[0] * borrow_shift)) * downshift;\n    for i in 1..(N + N - 2) {\n        // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n        // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n        //     * downshift;\n        mulout_p[i] += hi_bits;\n\n        // determine whether negative limb values are greater than positive limb values\n        let underflow: Field =\n            mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n        borrow_flags[i] = underflow;\n\n        hi_bits = (\n            mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)\n        )\n            * downshift;\n    }\n\n    (quotient, remainder, borrow_flags)\n}\n\n/**\n* @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n**/\n// NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n// To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n// We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n// Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n// Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\nunconstrained fn __add_linear_expression<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[Field; N]; M],\n    flags: [bool; M],\n) -> ([Field; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut sum: [Field; N] = [0; N];\n    // TODO: ugly! Will fail if input array is empty\n    let modulus2: [Field; N] = params.double_modulus;\n    for i in 0..M {\n        if (flags[i]) {\n            for j in 0..N {\n                sum[j] = sum[j] + modulus2[j] - x[i][j];\n                // assert(x[i][j].lt(modulus2[j]));\n            }\n        } else {\n            for j in 0..N {\n                sum[j] = sum[j] + x[i][j];\n            }\n        }\n    }\n    // problem if we normalize when used in computing quotient\n    sum\n}\n\n/**\n* @brief computes the limb products of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\nunconstrained fn __compute_quadratic_expression_product<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> [Field; 2 * N] {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut lhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut rhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut add: [Field; N] = [0; N];\n\n    for i in 0..NUM_PRODUCTS {\n        lhs[i] = __add_linear_expression(params, lhs_terms[i], lhs_flags[i]);\n        rhs[i] = __add_linear_expression(params, rhs_terms[i], rhs_flags[i]);\n    }\n\n    let add: [Field; N] = __add_linear_expression(params, linear_terms, linear_flags);\n\n    let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                mulout[i + j] += (lhs[k][i] * rhs[k][j]);\n            }\n        }\n        mulout[i] += add[i];\n    }\n    mulout\n}\n\n/**\n* @brief computes the quotient/remainder of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\npub(crate) unconstrained fn __compute_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([Field; N], [Field; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mulout = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n    // size 4\n    // a[3] * b[3] = a[6] = 7\n    // TODO: ugly! Will fail if input slice is empty\n    let k = MOD_BITS;\n\n    let (quotient, remainder) = __barrett_reduction(\n        relation_result,\n        params.redc_param,\n        k,\n        params.modulus,\n        params.modulus_u60_x4,\n    );\n\n    let mut q = quotient;\n    let mut r = remainder;\n    (q, r)\n}\n\n/**\n* @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n* @description The expression is of the form (when evaluated as an integer relation):\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* Note: this method requires the remainder term of the expression to be ZERO\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The expensive parts of this algorithm are the following:\n*      1. evaluating the limb products required to compute `lhs * rhs`\n*      2. applying range constraints to validate the result is 0\n*\n* Range constraints are needed for the following reason:\n* When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n* Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n* Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n* To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n* (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n* To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n* We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n* TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n* I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n* TODO: explain why we apply a 126-bit range check, this feels like a magic number\n* (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n* TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n* \n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\npub(crate) fn evaluate_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) {\n    // use an unconstrained function to compute the value of the quotient\n    let (quotient, _, borrow_flags): ([Field; N], [Field; N], [Field; 2 * N]) = unsafe {\n        __compute_quadratic_expression_with_borrow_flags::<_, MOD_BITS, _, _, _, _>(\n            params,\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags,\n        )\n    };\n    // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n    // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n    validate_quotient_in_range::<_, MOD_BITS>(quotient);\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    // (should be a compile-time check...unconstrained function?)\n    // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n    let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t4: [Field; N] = [0; N];\n\n    // TODO: this is super nasty as it requires a multiplication\n    let double_modulus: [Field; N] = params.double_modulus;\n    for k in 0..NUM_PRODUCTS {\n        for i in 0..N {\n            for j in 0..LHS_N {\n                // note: if is_negative is not known at comptime this is very expensive\n                if (lhs_flags[k][j]) {\n                    t0[k][i] -= lhs_terms[k][j][i];\n                    t0[k][i] += double_modulus[i];\n                } else {\n                    t0[k][i] += lhs_terms[k][j][i];\n                }\n            }\n            for j in 0..RHS_N {\n                if (rhs_flags[k][j]) {\n                    t1[k][i] -= rhs_terms[k][j][i];\n                    t1[k][i] += double_modulus[i];\n                } else {\n                    t1[k][i] += rhs_terms[k][j][i];\n                }\n            }\n        }\n    }\n    for i in 0..N {\n        for j in 0..ADD_N {\n            if (linear_flags[j]) {\n                t4[i] -= linear_terms[j][i];\n                t4[i] += double_modulus[i];\n            } else {\n                t4[i] += linear_terms[j][i];\n            }\n        }\n    }\n\n    // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n    // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n    // so that we can ensure that no limbs will underflow for an honest Prover\n    let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n    // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n    // TODO: this is super nasty as it requires a multiplication\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                if k == 0 {\n                    let new_term = t0[k][i] * t1[k][j] - quotient[i] * params.modulus[j];\n                    std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                    product_limbs[i + j] += new_term;\n                } else {\n                    product_limbs[i + j] += t0[k][i] * t1[k][j];\n                }\n            }\n            if (NUM_PRODUCTS == 0) {\n                product_limbs[i + j] -= quotient[i] * params.modulus[j];\n            }\n        }\n        product_limbs[i] += t4[i];\n    }\n\n    // each limb product represents the sum of 120-bit products.\n    // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n    // where no more than 64 limb products are summed together.\n    // TODO: check in unconstrained function that this condition is satisfied\n    // TODO: define trade-offs regarding the value of borrow_shift\n    // (the larger the value, the greater the range check that is required on product_limbs)\n    // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n    // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n    //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n    // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n    borrow_flags[0].assert_max_bit_size::<1>();\n    product_limbs[0] += borrow_flags[0] * borrow_shift;\n    for i in 1..(N + N - 2) {\n        borrow_flags[i].assert_max_bit_size::<1>();\n        product_limbs[i] += (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n    }\n    product_limbs[N + N - 2] -= borrow_flags[N + N - 3] * borrow_carry;\n\n    // Final step: Validate `product_limbs` represents the integer value `0`\n    // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n    // i.e. we need to do the following for each limb `i`:\n    //      1. validate the limb's low-120 bits equals zero\n    //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n    //      3. add the carry into limb `i+1`\n    // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n    // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n    // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n    //  where k is the number of bits in the prime field)\n    // We then add the result into the next limb and repeat.\n    let hi_shift: Field = 0x1000000000000000000000000000000;\n    let hi_downshift: Field = 1 / hi_shift;\n    for i in 0..N + N - 2 {\n        product_limbs[i] *= hi_downshift;\n        std::as_witness(product_limbs[i]);\n        product_limbs[i].assert_max_bit_size::<126>(); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n        product_limbs[i + 1] += product_limbs[i];\n    }\n    // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n    assert(product_limbs[N + N - 2] == 0);\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/fns/expressions.nr"},"83":{"source":"/**\n* @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n* @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n*               is precisely large enough to cover MOD_BITS\n* @param x: input byte array\n**/\npub(crate) fn from_be_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    x: [u8; NBytes],\n) -> [Field; N] {\n    let num_bits = NBytes * 8;\n    assert(num_bits >= MOD_BITS);\n    assert(num_bits - MOD_BITS < 8);\n    let mut result = [0; N];\n\n    let excess_bytes = N * 15 - NBytes;\n    let final_limb_bytes = 15 - excess_bytes;\n    let mut limb: Field = 0;\n    let mut k = 0;\n    for _j in 0..final_limb_bytes {\n        limb *= 256;\n        limb += x[k] as Field;\n        k += 1;\n    }\n    result[N - 1] = limb;\n\n    for i in 1..N {\n        let mut limb: Field = 0;\n        for _j in 0..15 {\n            limb *= 256;\n            limb += x[k] as Field;\n            k += 1;\n        }\n        result[N - i - 1] = limb;\n    }\n\n    let most_significant_byte: Field = x[0] as Field;\n\n    most_significant_byte.assert_max_bit_size::<8 - (NBytes * 8 - MOD_BITS)>();\n    result\n}\n\npub(crate) fn to_le_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    val: [Field; N],\n) -> [u8; NBytes] {\n    let nbytes = (MOD_BITS / 8) + (MOD_BITS % 8 != 0) as u32;\n    assert(nbytes <= NBytes);\n\n    let mut result: [u8; NBytes] = [0; NBytes];\n    for i in 0..N - 1 {\n        let limb_bytes: [u8; 15] = val[i].to_le_bytes();\n        for j in 0..15 {\n            result[i * 15 + j] = limb_bytes[j];\n        }\n    }\n    let last_limb_bytes: [u8; 15] = val[N - 1].to_le_bytes();\n    let num_last_bytes = (NBytes - (N - 1) * 15);\n    for i in 0..num_last_bytes {\n        result[(N - 1) * 15 + i] = last_limb_bytes[i];\n    }\n    result\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/fns/serialization.nr"},"84":{"source":"use crate::utils::split_bits;\nuse crate::utils::u60_representation::U60Repr;\n\nuse crate::fns::unconstrained_ops::{__add, __eq, __mul, __neg, __one, __pow};\nuse crate::params::BigNumParams as P;\n\nglobal TWO_POW_60: u64 = 0x1000000000000000;\n\n/**\n * In this file:\n *\n * __validate_in_field_compute_borrow_flags\n * __validate_gt_remainder\n * __neg_with_flags\n * __add_with_flags\n * __sub_with_flags\n * __barrett_reduction\n * __tonelli_shanks_sqrt\n */\n\npub(crate) unconstrained fn __from_field<let N: u32>(field: Field) -> [Field; N] {\n    // cast the field to a u60 representation\n    let res_u60: U60Repr<N, 2> = U60Repr::from_field(field);\n    let result: [Field; N] = U60Repr::into(res_u60);\n    result\n}\n\npub(crate) unconstrained fn __validate_in_field_compute_borrow_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> [bool; N] {\n    let mut flags: [bool; N] = [false; N];\n    let modulus: [Field; N] = params.modulus;\n    flags[0] = modulus[0].lt(val[0]);\n    for i in 1..N - 1 {\n        flags[i] = modulus[i].lt(val[i] + flags[i - 1] as Field);\n    }\n    flags\n}\n\npub(crate) unconstrained fn __validate_gt_remainder<let N: u32>(\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [bool; N], [bool; N]) {\n    let a_u60: U60Repr<N, 2> = From::from(lhs);\n    let mut b_u60: U60Repr<N, 2> = From::from(rhs);\n\n    let underflow = b_u60.gte(a_u60);\n    b_u60 += U60Repr::one();\n    assert(underflow == false, \"BigNum::validate_gt check fails\");\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    let mut carry_in: u64 = 0;\n    let mut borrow_in: u64 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let mut add_term: u64 = a_u60.limbs[i] + carry_in;\n        let mut carry = (add_term >= TWO_POW_60) as u64;\n        add_term -= carry * TWO_POW_60;\n        carry_in = carry;\n\n        let sub_term = b_u60.limbs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + add_term - sub_term;\n\n        borrow_in = borrow;\n\n        if ((i & 1) == 1) {\n            // Only set `borrow` and `carry` if they differ\n            if (carry != borrow) {\n                carry_flags[i / 2] = carry as bool;\n                borrow_flags[i / 2] = borrow as bool;\n            }\n        }\n    }\n    let result = U60Repr::into(result_u60);\n    (result, carry_flags, borrow_flags)\n}\n\npub(crate) unconstrained fn __neg_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> ([Field; N], [bool; N]) {\n    let x_u60: U60Repr<N, 2> = From::from(val);\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    let mut borrow_in: u64 = 0;\n\n    let mut borrow_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let sub_term = x_u60.limbs[i] + borrow_in;\n        let borrow = (sub_term > params.modulus_u60.limbs[i]) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + params.modulus_u60.limbs[i] - sub_term;\n\n        borrow_in = borrow;\n        if ((i & 1) == 1) {\n            borrow_flags[i / 2] = borrow as bool;\n        }\n    }\n    let result = U60Repr::into(result_u60);\n    (result, borrow_flags)\n}\n\npub(crate) unconstrained fn __add_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [bool; N], [bool; N], bool) {\n    let a_u60: U60Repr<N, 2> = From::from(lhs);\n    let b_u60: U60Repr<N, 2> = From::from(rhs);\n    let add_u60 = a_u60 + b_u60;\n\n    let overflow = add_u60.gte(params.modulus_u60);\n\n    let mut subtrahend_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    if overflow {\n        subtrahend_u60 = params.modulus_u60;\n    }\n\n    let mut carry_in: u64 = 0;\n    let mut borrow_in: u64 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let mut add_term: u64 = a_u60.limbs[i] + b_u60.limbs[i] + carry_in;\n        let mut carry = (add_term >= TWO_POW_60) as u64;\n        add_term -= carry * TWO_POW_60;\n        carry_in = carry;\n\n        let sub_term = subtrahend_u60.limbs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + add_term - sub_term;\n        borrow_in = borrow;\n\n        if ((i & 1) == 1) {\n            // Only set `borrow` and `carry` if they differ\n            if (carry != borrow) {\n                let idx = (i - 1) / 2;\n                carry_flags[idx] = carry as bool;\n                borrow_flags[idx] = borrow as bool;\n            }\n        }\n    }\n    let result = U60Repr::into(result_u60);\n\n    (result, carry_flags, borrow_flags, overflow)\n}\n\npub(crate) unconstrained fn __sub_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [bool; N], [bool; N], bool) {\n    let a_u60: U60Repr<N, 2> = U60Repr::from(lhs);\n    let b_u60: U60Repr<N, 2> = U60Repr::from(rhs);\n\n    let underflow = b_u60.gte(a_u60 + U60Repr::one());\n\n    let addend_u60: U60Repr<N, 2> = if underflow {\n        params.modulus_u60\n    } else {\n        U60Repr { limbs: [0; 2 * N] }\n    };\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    let mut carry_in: u64 = 0;\n    let mut borrow_in: u64 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n        let mut carry = (add_term >= TWO_POW_60) as u64;\n        add_term -= carry * TWO_POW_60;\n        carry_in = carry;\n\n        let sub_term = b_u60.limbs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + add_term - sub_term;\n        borrow_in = borrow;\n\n        if ((i & 1) == 1) {\n            // Only set `borrow` and `carry` if they differ\n            if (carry != borrow) {\n                carry_flags[i / 2] = carry as bool;\n                borrow_flags[i / 2] = borrow as bool;\n            }\n        }\n    }\n    let result = U60Repr::into(result_u60);\n    (result, carry_flags, borrow_flags, underflow)\n}\n\n/**\n * @brief BARRETT_REDUCTION_OVERFLOW_BITS defines how large an input to barrett reduction can be\n * @details maximum value = modulus^2 <<BARRETT_REDUCTION_OVERFLOW_BITS\n *          see __barrett_reduction for more details\n **/\ncomptime global BARRETT_REDUCTION_OVERFLOW_BITS: u32 = 4;\n\npub(crate) unconstrained fn __barrett_reduction<let N: u32>(\n    x: [Field; 2 * N],\n    redc_param: [Field; N],\n    k: u32,\n    modulus: [Field; N],\n    modulus_u60: U60Repr<N, 4>,\n) -> ([Field; N], [Field; N]) {\n    // for each i in 0..(N + N), adds x[i] * redc_param[j] to mulout[i + j] for each j in 0..N\n    let mut mulout: [Field; 3 * N] = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout[i + j] += x[i] * redc_param[j];\n        }\n    }\n\n    mulout = split_bits::__normalize_limbs(mulout, 3 * N - 1);\n    let mulout_u60: U60Repr<N, 6> = U60Repr::new(mulout);\n\n    // When we apply the barrett reduction, the maximum value of the output will be\n    // <= p * (1 + x/2^{2k})\n    // where p = modulus,\n    //       x = reduction input\n    // if x > p * p, we need k to be larger than modulus_bits()\n    // we hardcode k = 4, which means that the maximum value of x is approx. 16 * p * p\n    // this should be larger than most values put into `evaluate_quadratic_expression`\n    // TODO: try and detect cases where x might be too large at comptime\n    // N.B. BARRETT_REDUCTION_OVERFLOW_BITS affects how `redc_param` is generated.\n    // `redc_param` = 2^{modulus_bits() * 2 + BARRETT_REDUCTION_OVERFLOW_BITS} / modulus\n    // NOTE: very niche edge case error that we need to be aware of:\n    //       N must be large enough to cover the modulus *plus* BARRETT_REDUCTION_OVERFLOW_BITS\n    //       i.e. a 359-bit prime needs (I think) 4 limbs to represent or we may overflow when calling __barrett_reduction\n    let mut quotient_u60 = mulout_u60.shr((k + k + BARRETT_REDUCTION_OVERFLOW_BITS));\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient_full should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = quotient_u60.into_field_array();\n\n    // quotient_mul_modulus_normalized can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N] = [0; 2 * N];\n\n    // First, accumulate the products into quotient_mul_modulus_normalized\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus_normalized[i + j] += partial_quotient_full[i] * modulus[j];\n        }\n    }\n\n    // Then, split the accumulated values and propagate higher bits\n    for i in 0..(N + N) {\n        let (lo, hi) = split_bits::split_120_bits(quotient_mul_modulus_normalized[i]);\n        quotient_mul_modulus_normalized[i] = lo;\n\n        // Propagate higher bits to the next index\n        // TODO: what is faster, leaving this if statement in or out?\n        // (array is size-1 too large so we can tolerate adding 0 into max element)\n        if (i + 1 < N + N) {\n            quotient_mul_modulus_normalized[i + 1] += hi;\n        }\n    }\n\n    let quotient_mul_modulus_u60: U60Repr<N, 4> = U60Repr::new(quotient_mul_modulus_normalized);\n    // convert the input into U60Repr\n    let x_u60: U60Repr<N, 4> = U60Repr::new(x);\n    let mut remainder_u60 = x_u60 - quotient_mul_modulus_u60;\n    // barrett reduction is quirky so might need to remove a few modulus_u60 from the remainder\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    }\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    }\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    }\n\n    let q: [Field; N] = U60Repr::into(quotient_u60);\n    let r: [Field; N] = U60Repr::into(remainder_u60);\n\n    (q, r)\n}\n\n/**\n* @brief compute the log of the size of the primitive root\n* @details find the maximum value k where x^k = 1, where x = primitive root\n*          This is needed for our Tonelli-Shanks sqrt algorithm\n**/\npub(crate) unconstrained fn __primitive_root_log_size<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> u32 {\n    let mut target: U60Repr<N, 2> = params.modulus_u60 - U60Repr::one();\n    let mut result: u32 = 0;\n    for _ in 0..MOD_BITS {\n        let lsb_is_one = (target.limbs[0] & 1) == 1;\n        if (lsb_is_one) {\n            break;\n        }\n        result += 1;\n        target.shr1();\n    }\n    result\n}\n\n/**\n* @brief inner loop fn for `find_multiplive_generator`\n* @details recursive function to get around the lack of a `while` keyword\n**/\nunconstrained fn __recursively_find_multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    target: [Field; N],\n    p_minus_one_over_two: [Field; N],\n) -> (bool, [Field; N]) {\n    let exped = __pow(params, target, p_minus_one_over_two);\n    let one: [Field; N] = __one();\n    let neg_one = __neg(params, one);\n    let found = __eq(exped, neg_one);\n    let mut result: (bool, [Field; N]) = (found, target);\n    if (!found) {\n        let _target = __add(params, target, one);\n        result = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n            params,\n            _target,\n            p_minus_one_over_two,\n        );\n    }\n    result\n}\n\n/**\n* @brief find multiplicative generator `g` where `g` is the smallest value that is not a quadratic residue\n*        i.e. smallest g where g^2 = -1\n* @note WARNING if multiplicative generator does not exist, this function will enter an infinite loop!\n**/\npub(crate) unconstrained fn __multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> [Field; N] {\n    let mut target: [Field; N] = __one();\n    let p_minus_one_over_two: U60Repr<N, 2> = (params.modulus_u60 - U60Repr::one()).shr(1);\n    let p_minus_one_over_two: [Field; N] = U60Repr::into(p_minus_one_over_two);\n    let (_, target) = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n        params,\n        target,\n        p_minus_one_over_two,\n    );\n    target\n}\n\npub(crate) unconstrained fn __tonelli_shanks_sqrt_inner_loop_check<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    t2m: [Field; N],\n    i: u32,\n) -> u32 {\n    let one: [Field; N] = __one();\n    let is_one = __eq(t2m, one);\n    let mut result = i;\n    if (!is_one) {\n        let t2m = __mul::<_, MOD_BITS>(params, t2m, t2m);\n        let i = i + 1;\n        result = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, i);\n    }\n    result\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/fns/unconstrained_helpers.nr"},"85":{"source":"use crate::utils::u60_representation::U60Repr;\n\npub struct BigNumParams<let N: u32, let MOD_BITS: u32> {\n    pub has_multiplicative_inverse: bool,\n\n    // @brief modulus: all BigNum operations are evaluated modulo this value\n    pub modulus: [Field; N],\n\n    // @brief modulus but represented in a U60Repr form\n    pub modulus_u60: U60Repr<N, 2>,\n    pub modulus_u60_x4: U60Repr<N, 4>,\n\n    // @brief double_modulus: used when performing negations and subtractions\n    pub double_modulus: [Field; N],\n\n    // @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    pub redc_param: [Field; N],\n}\n\n// To be implemented by the user for any BigNum they define, or within the predefined BigNums in the `fields/` dir.\npub trait BigNumParamsGetter<let N: u32, let MOD_BITS: u32> {\n    pub fn get_params() -> BigNumParams<N, MOD_BITS>;\n}\n\nimpl<let N: u32, let MOD_BITS: u32> BigNumParams<N, MOD_BITS> {\n    pub fn new(\n        has_multiplicative_inverse: bool,\n        modulus: [Field; N],\n        redc_param: [Field; N],\n    ) -> Self {\n        Self {\n            has_multiplicative_inverse,\n            modulus,\n            modulus_u60: U60Repr::from(modulus),\n            modulus_u60_x4: U60Repr::from(modulus),\n            double_modulus: get_double_modulus(modulus),\n            redc_param,\n        }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for BigNumParams<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        (self.has_multiplicative_inverse == other.has_multiplicative_inverse)\n            & (self.modulus == other.modulus)\n            & (self.modulus_u60 == other.modulus_u60)\n            & (self.modulus_u60_x4 == other.modulus_u60_x4)\n            & (self.double_modulus == other.double_modulus)\n            & (self.redc_param == other.redc_param)\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [Field; N]) -> [Field; N] {\n    let TWO_POW_120: Field = 0x1000000000000000000000000000000;\n    let m: U60Repr<N, 2> = U60Repr::from(modulus);\n    let mut result: [Field; N] = U60Repr::into(m + m);\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/params.nr"},"117":{"source":"global TWO_POW_56: u64 = 0x100000000000000;\npub(crate) global TWO_POW_60: u64 = 0x1000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n//fields to u60rep conversion\n// field elements are 254 bits\n// so there will be 5 limbs\npub(crate) unconstrained fn field_to_u60rep(mut x: Field) -> (u64, u64, u64, u64, u64) {\n    // get the first 60 bits by casting to u64 and then taking the lower 60 bits\n    // we use the fact that this casting drops everything above 64 bits\n    let x_first_u64 = (x as u64);\n    let first: u64 = x_first_u64 % TWO_POW_60;\n    // this becomes the same as a integer division because we're removing the remainder\n    x = (x - (first as Field)) / (TWO_POW_60 as Field);\n    let x_second_u64 = (x as u64);\n    let second = x_second_u64 % TWO_POW_60;\n    x = (x - (second as Field)) / (TWO_POW_60 as Field);\n    let x_third_u64 = (x as u64);\n    let third = x_third_u64 % TWO_POW_60;\n    x = (x - (third as Field)) / (TWO_POW_60 as Field);\n    let x_fourth_u64 = (x as u64);\n    let fourth = x_fourth_u64 % TWO_POW_60;\n    x = (x - (fourth as Field)) / (TWO_POW_60 as Field);\n    let x_fifth_u64 = (x as u64);\n    let fifth = x_fifth_u64 % TWO_POW_60;\n    (first, second, third, fourth, fifth)\n}\n\n// Decomposes a single field into two 120 bit fields\npub unconstrained fn split_120_bits(mut x: Field) -> (Field, Field) {\n    // Here we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_56 = ((x as u64) % TWO_POW_56) as Field;\n\n    let low = low_lower_64 + TWO_POW_64 * low_upper_56;\n    let high = (x - low_upper_56) / TWO_POW_56 as Field;\n\n    (low, high)\n}\n\n/// Decomposes a single field into two 60 bit fields\n///\n/// Expects the input limb to be in the range [0, ..., 2^{120 - 1}]\nunconstrained fn __split_60_bits(x: Field) -> (u64, u64) {\n    // Here we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let x_lower_64 = (x as u64);\n    let low = x_lower_64 % TWO_POW_60;\n    let high = ((x - (low as Field)) / TWO_POW_60 as Field) as u64;\n\n    (low, high)\n}\n\n/// Decomposes a single field into two 60 bit fields\n///\n/// Expects the input limb to be in the range [0, ..., 2^{120 - 1}]\npub fn split_60_bits(x: Field) -> (u64, u64) {\n    // We assert that the two returned limbs fit within 60 bits each\n    // and reconstruct `x` when added together.\n    let (lo, hi) = unsafe { __split_60_bits(x) };\n    if !std::runtime::is_unconstrained() {\n        let lo_field = lo as Field;\n        let hi_field = hi as Field;\n        lo_field.assert_max_bit_size::<60>();\n        hi_field.assert_max_bit_size::<60>();\n        assert_eq(lo_field + (TWO_POW_60 as Field) * hi_field, x);\n    }\n\n    (lo, hi)\n}\n\npub(crate) unconstrained fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32,\n) -> [Field; N] {\n    let mut normalized: [Field; N] = [0; N];\n    let mut next: Field = input[0];\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(next);\n\n        normalized[i] = lo;\n        next = input[i + 1] + hi;\n    }\n    {\n        let (lo, hi) = split_120_bits(next);\n        normalized[range - 1] = lo;\n        assert(hi == 0);\n    }\n    normalized\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/utils/split_bits.nr"},"118":{"source":"use crate::utils::msb::get_msb64;\nuse crate::utils::split_bits;\nuse crate::utils::split_bits::{field_to_u60rep, TWO_POW_60};\n\n/**\n * @brief U60Repr represents a BigNum element as a sequence of 60-bit unsigned integers.\n *\n * @description: used in unconstrained functions when computing witness values.\n * It is helpful to use u60 types when evaluating addition operations that can overflow the field modulus,\n * as well as when performing bit shifts.\n */\npub struct U60Repr<let N: u32, let NumSegments: u32> {\n    pub(crate) limbs: [u64; N * NumSegments],\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Add for U60Repr<N, NumSegments> {\n    fn add(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut carry: u64 = 0;\n        for i in 0..N * NumSegments {\n            let mut add: u64 = self.limbs[i] + b.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            result.limbs[i] = add;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Sub for U60Repr<N, NumSegments> {\n    fn sub(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        for i in 0..N * NumSegments {\n            borrow = ((b.limbs[i] + borrow_in) > self.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.limbs[i] - b.limbs[i] - borrow_in;\n            result.limbs[i] = sub;\n            borrow_in = borrow;\n        }\n\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::From<[Field; N]> for U60Repr<N, NumSegments> {\n    fn from(input: [Field; N]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..N {\n            let (lo, hi) = split_bits::split_60_bits(input[i]);\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n}\n\n// impl<let N: u32, let NumSegments: u32> std::convert::From<Field> for U60Repr<N, NumSegments> {\n//     fn from(input: Field) -> Self {\n//        let (low, mid, high) =  unsafe { field_to_u60rep(input) } ;\n//         let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n//         let N_u60: u32 = N * NumSegments;\n//         assert(N_u60 >=1, \"N must be at least 1\");\n//         if N_u60 == 1 {\n//             assert((mid ==0) & (high == 0), \"input field is too large to fit in a single limb\");\n//             result.limbs[0] = low;\n//         }\n//         else if N_u60 == 2{\n//             assert(high == 0, \"input field is too large to fit in two limbs\");\n//             result.limbs[0] = low;\n//             result.limbs[1] = mid;\n//         }else{\n//             result.limbs[0] = low;\n//             result.limbs[1] = mid;\n//             result.limbs[2] = high;\n//         }\n//         result\n//     }\n// }\n\nimpl<let N: u32, let NumSegments: u32> std::convert::Into<[Field; N]> for U60Repr<N, NumSegments> {\n    fn into(x: U60Repr<N, NumSegments>) -> [Field; N] {\n        let mut result: [Field; N] = [0; N];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..N {\n            result[i] = x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::cmp::Eq for U60Repr<N, NumSegments> {\n    fn eq(self, other: Self) -> bool {\n        self.limbs == other.limbs\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> U60Repr<N, NumSegments> {\n\n    pub(crate) fn new<let NumFieldSegments: u32>(x: [Field; N * NumFieldSegments]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N * NumFieldSegments) {\n            let (lo, hi) = split_bits::split_60_bits(x[i]);\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n\n    pub(crate) fn one() -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        result.limbs[0] = 1;\n        result\n    }\n\n    pub(crate) unconstrained fn from_field(input: Field) -> Self {\n        let (first, second, third, fourth, fifth) = field_to_u60rep(input);\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        let N_u60: u32 = N * NumSegments;\n        assert(N_u60 >= 1, \"N must be at least 1\");\n        if N_u60 == 1 {\n            assert(\n                (second == 0) & (third == 0) & (fourth == 0) & (fifth == 0),\n                \"input field is too large to fit in a single limb\",\n            );\n            result.limbs[0] = first;\n        } else if N_u60 == 2 {\n            assert(\n                (third == 0) & (fourth == 0) & (fifth == 0),\n                \"input field is too large to fit in two limbs\",\n            );\n            result.limbs[0] = first;\n            result.limbs[1] = second;\n        } else if N_u60 == 3 {\n            assert((fourth == 0) & (fifth == 0), \"input field is too large to fit in three limbs\");\n            result.limbs[0] = first;\n            result.limbs[1] = second;\n            result.limbs[2] = third;\n        } else if N_u60 == 4 {\n            assert((fifth == 0), \"input field is too large to fit in four limbs\");\n            result.limbs[0] = first;\n            result.limbs[1] = second;\n            result.limbs[2] = third;\n            result.limbs[3] = fourth;\n        } else {\n            result.limbs[0] = first;\n            result.limbs[1] = second;\n            result.limbs[2] = third;\n            result.limbs[3] = fourth;\n            result.limbs[4] = fifth;\n        }\n        result\n    }\n\n    pub(crate) unconstrained fn into_field_array(\n        x: U60Repr<N, NumSegments>,\n    ) -> [Field; N * NumSegments / 2] {\n        let mut result: [Field; N * NumSegments / 2] = [0; N * NumSegments / 2];\n        for i in 0..(N * NumSegments / 2) {\n            result[i] =\n                x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * TWO_POW_60 as Field);\n        }\n        result\n    }\n\n    pub(crate) unconstrained fn gte(self, b: Self) -> bool {\n        let mut result = false;\n        let mut early_exit = false;\n        for i in 0..(N * NumSegments) {\n            let idx = (N * NumSegments) - 1 - i;\n            if (b.limbs[idx] == self.limbs[idx]) {\n                continue;\n            }\n\n            result = b.limbs[idx] < self.limbs[idx];\n            early_exit = true;\n            break;\n        }\n        if early_exit {\n            result\n        } else {\n            self.limbs[0] == b.limbs[0]\n        }\n    }\n\n    pub(crate) fn get_bit(self, bit: u32) -> bool {\n        let segment_index = bit / 60;\n        let uint_index = bit % 60;\n\n        let limb: u64 = self.limbs[segment_index];\n        let value = (limb >> uint_index as u8) & 1;\n        value == 1\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    pub(crate) fn shr(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = (shift % 60) as u8;\n        let remainder_shift = (60 - limb_shift) as u8;\n        let mask: u64 = (((1 as u64) << limb_shift) - 1) << remainder_shift;\n        result.limbs[0] = (self.limbs[0 + num_shifted_limbs] >> limb_shift);\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i + num_shifted_limbs];\n            result.limbs[i] = value >> limb_shift;\n            let remainder: u64 = (value << remainder_shift) & mask;\n            result.limbs[i - 1] = result.limbs[i - 1] + remainder;\n        }\n        result\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    pub(crate) fn shr1(&mut self) {\n        let value = self.limbs[NumSegments * N - 1];\n        self.limbs[NumSegments * N - 1] = value >> 1;\n\n        let mut remainder = (value & 1) << 59;\n\n        for i in 0..N * NumSegments {\n            let value = self.limbs[N * NumSegments - 1 - i];\n            self.limbs[N * NumSegments - 1 - i] = (value >> 1) + remainder;\n            remainder = (value << 59) & 0x800000000000000;\n        }\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    pub(crate) fn shl(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; NumSegments * N] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = (shift % 60) as u8;\n        let remainder_shift: u8 = 60 - limb_shift as u8;\n\n        // 83\n        // limb shift = 1\n        // inside shift = 19 bits to the left\n        // meaning we have 19 carry bits and 41 remainder bits\n        let mask: u64 = (1 as u64 << 60) - 1;\n        //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        let value = self.limbs[0];\n\n        let mut remainder = (value >> remainder_shift);\n        result.limbs[num_shifted_limbs] = (value << limb_shift) & mask;\n\n        // shift 84. num shifted = 1\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i];\n            let upshift = ((value << limb_shift) + remainder) & mask;\n            result.limbs[i + num_shifted_limbs] = upshift;\n            remainder = (value >> remainder_shift);\n            // let remainder: u64 = (self.limbs.get(i + num_shifted_limbs as u64) << remainder_shift as u8) & mask;\n            // result.limbs.set(i - 1, result.limbs.get(i - 1) + remainder);\n        }\n        result\n    }\n\n    pub(crate) fn increment(&mut self) {\n        let mut carry: u64 = 0;\n\n        let mut add: u64 = self.limbs[0] + 1;\n        carry = add >> 60;\n        add = add - (carry << 60);\n        self.limbs[0] = add;\n\n        for i in 1..NumSegments * N {\n            let mut add: u64 = self.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            self.limbs[i] = add;\n        }\n    }\n\n    pub(crate) unconstrained fn get_msb(val: Self) -> u32 {\n        let mut count = 0;\n        for i in 0..N * NumSegments {\n            let v = val.limbs[((N * NumSegments) - 1 - i)];\n            if (v > 0) {\n                count = 60 * ((N * NumSegments) - 1 - i) + get_msb64(v);\n                break;\n            }\n        }\n        count\n    }\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir-bignum/v0.5.2/src/utils/u60_representation.nr"},"138":{"source":"use dep::bignum::{params::BigNumParams, RuntimeBigNum};\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n    for i in 0..32 {\n        // Padded hash is reversed\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] =\n        [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i < 52 + ps_len {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i == 52 + ps_len {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i == 53 + ps_len {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\n\n/**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @note The `exponent` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\npub fn verify_sha256_pkcs1v15<let NumLimbs: u32, let ModBits: u32>(\n    msg_hash: [u8; 32],\n    sig: RuntimeBigNum<NumLimbs, ModBits>,\n    exponent: u32,\n) -> bool {\n    assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n    let mut exponentiated = sig * sig; // sig^2\n    if exponent == 65537 {\n        // e = 65537 = 1 0000 0000 0000 0001\n        exponentiated = exponentiated * exponentiated; // sig^4\n        exponentiated = exponentiated * exponentiated; // sig^8\n        exponentiated = exponentiated * exponentiated; // sig^16\n        exponentiated = exponentiated * exponentiated; // sig^32\n        exponentiated = exponentiated * exponentiated; // sig^64\n        exponentiated = exponentiated * exponentiated; // sig^128\n        exponentiated = exponentiated * exponentiated; // sig^256\n        exponentiated = exponentiated * exponentiated; // sig^512\n        exponentiated = exponentiated * exponentiated; // sig^1024\n        exponentiated = exponentiated * exponentiated; // sig^2048\n        exponentiated = exponentiated * exponentiated; // sig^4096\n        exponentiated = exponentiated * exponentiated; // sig^8192\n        exponentiated = exponentiated * exponentiated; // sig^16384\n        exponentiated = exponentiated * exponentiated; // sig^32768\n        exponentiated = exponentiated * exponentiated; // sig^65536\n    }\n    // otherwise, e = 3 = 11\n    exponentiated = exponentiated * sig; // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n    let mut padded_sha256_hash_bytes: [u8; (ModBits + 7) / 8] = exponentiated.to_le_bytes();\n    compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_1024() {\n    // Output of `cargo run -- --msg \"hello world! test#123\" --bits 1024` in the `signature_gen` directory\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world! test#123\".as_bytes());\n    assert(\n        sha256_hash\n            == [\n                220, 155, 229, 143, 122, 133, 55, 215, 75, 44, 132, 111, 57, 33, 248, 84, 213, 170,\n                193, 96, 253, 57, 124, 13, 251, 42, 92, 147, 105, 172, 233, 85,\n            ],\n    );\n\n    let params: BigNumParams<9, 1024> = BigNumParams::new(\n        false,\n        [\n            0xab238ad9cb37979a43aefbf10be8fb,\n            0x31347febe45fe8c2dac1dd30900704,\n            0xa5a9a6b9cd0cc2b9d13bbd4e068263,\n            0x5eac6390f7873fe97ff9bb14a173ea,\n            0xbc41f700c91fd733a2c63177bbdbd4,\n            0x41442bd58769a3595b659a2ec9c6be,\n            0x4ddc91395f330382aa2e2d3fbe147,\n            0x3d008ff255a0bc71c7887f5728ba1,\n            0xb640c3a8f511c64e,\n        ],\n        [\n            0x5d53d2634c6a0918266043968ce263,\n            0x5dd4be3dce0323a492ee9340aec4db,\n            0xf82d0e2e5c8319f01a460c72c01854,\n            0x236e6fc6e62e8a1d522acda5fb3892,\n            0xdaf755619d66e580901aa224d03174,\n            0x8366291616480e7e1f202dbcedda87,\n            0x40ba1202537d1e94561ccc05265586,\n            0x69b993d857ba89ea5de9822aeb4b93,\n            0x167968c0000761a273,\n        ],\n    );\n\n    let signature: RuntimeBigNum<9, 1024> = RuntimeBigNum {\n        params,\n        limbs: [\n            0xc3850e84ea02da3f028ff422f4d6a9,\n            0x9761f0bd9021f76d45c60df0670a19,\n            0xc1ede421a43607ab623ed4d5a17fc8,\n            0x86197b4315206f4d53200b42555831,\n            0xe95783b69db28c26a83706f39d04cd,\n            0x18b178dc1a9ec76fb22b57e4dfa703,\n            0xdd0e19cd5a09ab48e7af4d0e3470e3,\n            0x10004dfab1cf91304e80e6baa4dfc7,\n            0x241c3fd77b90adef,\n        ],\n    };\n\n    assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048() {\n    // Output of `cargo run -- --msg \"Hello World! This is Noir-RSA\"` in the `signature_gen` directory\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n    assert(\n        sha256_hash\n            == [\n                91, 207, 46, 60, 22, 153, 217, 144, 2, 127, 224, 143, 181, 45, 32, 120, 122, 131,\n                166, 79, 166, 183, 43, 158, 116, 105, 73, 207, 196, 77, 33, 5,\n            ],\n    );\n\n    let params: BigNumParams<18, 2048> = BigNumParams::new(\n        false,\n        [\n            0x8d5e7d9daedd6cfd1c9bdf0227e05b,\n            0xbfb937fc4d3cf02cc0af780f3cab44,\n            0xd20637ef7adcf5d238ee87bccc9bca,\n            0xb9db4f2663108e2f8b673f7612ae8b,\n            0x85f894ef669b36bfd3d86b0a28873,\n            0xdcc70e1884e38b8229cce3b884121d,\n            0x35488d1138e0b03e1676f7f5d8a5b3,\n            0xe1a97820e7dcbb4eab35c9b71bb273,\n            0x97d19eb3c63249ddbfcff915863f54,\n            0x3a78c7af6da0f6af0d67b1ca4b6065,\n            0xd7a3c433c020f624821e5e678c7d69,\n            0x52d5b53240feae82ffea3d2a3d9b09,\n            0xb8aad5e19e2163f68997c6fdd71906,\n            0x5db432d06e8b0bf59511100c7894e2,\n            0xadc0bbc4c54da10d1cc88438ea3127,\n            0xece1cf6a1501109cd2734d5893c8d9,\n            0x7196b90acdf06c31b1288064fd0c27,\n            0xc8,\n        ],\n        [\n            0x1b1deccf4dbde852c34a5d6908a0f,\n            0xbc9e5bdab22f023fbcca58692bccf5,\n            0x1f65439685623e45396ff55751c3bf,\n            0x2b6ad2c5f8e3aac15d0ccbab816bfa,\n            0x5ca2e8e3048243c16c708a8030ab0d,\n            0x30079bfeb1fa51e5501581173ca19c,\n            0xff8d5f6bea485fdcc2716327f69ab4,\n            0x36b599d81589416b5b5f037986b999,\n            0x75612e34a4ff29f0a19a7823512f58,\n            0x288b6897929b54c3b26a5faa07c00f,\n            0x4b5675fa13ab7444f1f047d3eb1bbe,\n            0x6ba0ac610ef9f267ab30fe25bb1c84,\n            0xa386b48ee03168d5cea3ecb9dc901f,\n            0xacf1a01f7dba44e050c976142fb1f6,\n            0x97a63b5cb7efc60d3502946aec63cf,\n            0x12cc1d5cab10a1e9e2398d29b9e3ef,\n            0x4635cf25c66e76bba8034df46204fb,\n            0x146f,\n        ],\n    );\n\n    let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n        params,\n        limbs: [\n            0xad29e07d16a278de49a371b9760a27,\n            0x86311920cc0e17a3c20cdff4c56dbb,\n            0x863556c6c5247dd83668dd825716ae,\n            0xc247c960945f4485b46c33b87425ca,\n            0x7326463c5c4cd5b08e21b938d9ed9a,\n            0x4f89fe0c82da08a0259eddb34d0da1,\n            0x43a74e76d4e1bd2666f1591889af0d,\n            0x240f7b80f0ff29f4253ee3019f832d,\n            0xc6edd131fbaaf725fd423dac52b362,\n            0x85f9732679242163e8afff44f6104d,\n            0xd3c3bbcb1757013fd6fb80f31dd9a6,\n            0x9008633f15df440e6df6d21ee585a2,\n            0x324df3425ed256e283be5b6b761741,\n            0xc60c1302929bd0e07caa4aeff4e8fd,\n            0x600d804ff13ba8d0e1bc9508714212,\n            0x50f7e75e5751d7edd61167027926be,\n            0x0db41d39442023e1420a8a84fe81d9,\n            0xab,\n        ],\n    };\n    assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n    // Output of `cargo run -- --msg \"hello world\" -e 3` in the `signature_gen` directory\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world\".as_bytes());\n    assert(\n        sha256_hash\n            == [\n                185, 77, 39, 185, 147, 77, 62, 8, 165, 46, 82, 215, 218, 125, 171, 250, 196, 132,\n                239, 227, 122, 83, 128, 238, 144, 136, 247, 172, 226, 239, 205, 233,\n            ],\n    );\n\n    let params: BigNumParams<18, 2048> = BigNumParams::new(\n        false,\n        [\n            0xe40ee47801326543c8e84b85d567c1,\n            0x5b54ea87f0ce29de1995697b0696fd,\n            0x457078f8fdce68b437cac0970b2452,\n            0x473ec776fee3731b6ab06e35875ddc,\n            0x62dedd594e5f12c80c3ccb5791a6cd,\n            0xecb934b9d8272c5e3a418145345499,\n            0xd1af643b3d785470ed0c6cd633f706,\n            0xb58a57b9e96eccbdfc7c17f0333d4,\n            0x2ebd34b5039fc596504927c282c60d,\n            0x3a44928a74f25fc1043bb37ce4dfa8,\n            0x91448459f9617fac33a2816162ac9e,\n            0x70cb910d9f3e1a78864640ec6c8240,\n            0x9aed33f6b31f1c9de67248a98c180,\n            0x7f1416e032c79488c94b311e87bd9c,\n            0x7191b4ebb1b3fffa949fa48ed01e5,\n            0x350a75cbaeca6bfdd71ca83cdbcae9,\n            0xfb1d274fa207457c6814d42c09f9cf,\n            0xd4,\n        ],\n        [\n            0x803bf4d38110a7d37fdd05f590dee9,\n            0xa68d317c933f37cab5ab4e7c00a3b9,\n            0x476a05a536bf5f2aa1b8850146cba7,\n            0xca297ea8b5528d91d4836ff27c30ab,\n            0x75cf2eaab76eefa12bbd570f1aea9f,\n            0x8f6a8ab877d9c5bcd98c37bdc5c2d3,\n            0xd497db1f6ebe83decacaa647fabea6,\n            0x686b27ca330e25e7a7cf197f6433ef,\n            0xfde04d2225c8308b07580af0058a0f,\n            0xa29fb69777c0e916976243b2b09855,\n            0xf983592285852e7e1c2cb3ae968323,\n            0x673608017f9f5acf67a01b73728d70,\n            0xeeff82521c0bc432a05f4b7444fac0,\n            0x85a89c4d229f60aaa3aa7ac7dac1e2,\n            0xcfecff93bc9fbfe0d6dff6091f2db8,\n            0xf20f047dcb224b4447bd098c07f8c2,\n            0x554bb53cadeb3eaab911a189f90227,\n            0x133b,\n        ],\n    );\n\n    let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n        params,\n        limbs: [\n            0xa250eff812c63eaaeaa3f04641c05f,\n            0xecc09613cb8b289c1f37c8f92e6a05,\n            0x2c0a0510058360c07af65d46f594fd,\n            0x943d67513363d3de430c94a1dafe7c,\n            0x511ec8e9b10bc6c6ff0d6c232ccf92,\n            0x50ffd07b3c093b3f5fc027de847731,\n            0xc268e1489449943fdafdf89ff168c3,\n            0x0b8b7f9f49b492f78fda58d252f23a,\n            0x491c6c4ef836a6a8730b7bf81e865e,\n            0x8746c75fb079d014e419543f56d7f0,\n            0x65804c417d6168a8bc0025d255cebf,\n            0xf695e91b77890b8e3fd775fa56e627,\n            0x5e90001c0218550f4083ae28025a2f,\n            0x526bd4eff34f25f62a698f0470e0a6,\n            0x7f224306a7d9daf536b1559434c6c6,\n            0x88809f16fe1fcea3c87511d9319735,\n            0x7694685fee0bfab4a9196b92ec6f2e,\n            0xa7,\n        ],\n    };\n\n    assert(verify_sha256_pkcs1v15(sha256_hash, signature, 3));\n}\n","path":"/home/jpag/nargo/github.com/noir-lang/noir_rsa/v0.5.1/lib/src/rsa.nr"}},"names":["main"],"brillig_names":["build_msg_block","attach_len_to_msg_block","__split_60_bits","__mul","__compute_quadratic_expression_with_borrow_flags","build_msg_block","decompose_hint","directive_integer_quotient","directive_invert","directive_to_radix"]}