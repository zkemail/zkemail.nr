<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = true;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">target/verify_email_2048_bit_dkim.json-main</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="293.00"> </text><svg id="frames" x="10" width="1180" total_samples="230428"><g><title>acir::arithmetic (40 gates, 0.02%)</title><rect x="0.0000%" y="229" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="0" fg:w="40"/><text x="0.2500%" y="243.50"></text></g><g><title>acir::blackbox::range (25,896 gates, 11.24%)</title><rect x="0.0174%" y="229" width="11.2382%" height="23" fill="rgb(255,199,199)" fg:x="40" fg:w="25896"/><text x="0.2674%" y="243.50">acir::blackbox::r..</text></g><g><title>acir::memory::init (5 gates, 0.00%)</title><rect x="11.2556%" y="229" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="25936" fg:w="5"/><text x="11.5056%" y="243.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="11.2577%" y="205" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="25941" fg:w="3"/><text x="11.5077%" y="219.50"></text></g><g><title>main.nr:30:12::header.len() &lt;= MAX_EMAIL_HEADER_LENGTH (5 gates, 0.00%)</title><rect x="11.2577%" y="229" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="25941" fg:w="5"/><text x="11.5077%" y="243.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="11.2590%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="25944" fg:w="2"/><text x="11.5090%" y="219.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="11.2599%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="25946" fg:w="2"/><text x="11.5099%" y="219.50"></text></g><g><title>main.nr:31:12::body.len() &lt;= MAX_EMAIL_BODY_LENGTH (4 gates, 0.00%)</title><rect x="11.2599%" y="229" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="25946" fg:w="4"/><text x="11.5099%" y="243.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="11.2608%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="25948" fg:w="2"/><text x="11.5108%" y="219.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.2617%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="25950" fg:w="1"/><text x="11.5117%" y="171.50"></text></g><g><title>sha256.nr:132:24::0 (3 gates, 0.00%)</title><rect x="11.2617%" y="181" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="25950" fg:w="3"/><text x="11.5117%" y="195.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="11.2621%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="25951" fg:w="2"/><text x="11.5121%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.2630%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="25953" fg:w="1"/><text x="11.5130%" y="147.50"></text></g><g><title>sha256.nr:348:13::msg_byte_ptr / INT_SIZE (7 gates, 0.00%)</title><rect x="11.2630%" y="157" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="25953" fg:w="7"/><text x="11.5130%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.00%)</title><rect x="11.2634%" y="133" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="25954" fg:w="6"/><text x="11.5134%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.2660%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="25960" fg:w="1"/><text x="11.5160%" y="99.50"></text></g><g><title>sha256.nr:360:17::INT_SIZE - msg_byte_ptr % INT_SIZE (2 gates, 0.00%)</title><rect x="11.2660%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="25960" fg:w="2"/><text x="11.5160%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="11.2664%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="25961" fg:w="1"/><text x="11.5164%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.2669%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="25962" fg:w="1"/><text x="11.5169%" y="99.50"></text></g><g><title>sha256.nr:360:28::msg_byte_ptr % INT_SIZE (4 gates, 0.00%)</title><rect x="11.2669%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="25962" fg:w="4"/><text x="11.5169%" y="123.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="11.2673%" y="85" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="25963" fg:w="3"/><text x="11.5173%" y="99.50"></text></g><g><title>sha256.nr:432:12::shifts == 0 (2 gates, 0.00%)</title><rect x="11.2686%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="25966" fg:w="2"/><text x="11.5186%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="11.2686%" y="37" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="25966" fg:w="2"/><text x="11.5186%" y="51.50"></text></g><g><title>sha256.nr:434:19::shifts == 1 (3 gates, 0.00%)</title><rect x="11.2695%" y="61" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="25968" fg:w="3"/><text x="11.5195%" y="75.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="11.2695%" y="37" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="25968" fg:w="3"/><text x="11.5195%" y="51.50"></text></g><g><title>acir::arithmetic (10 gates, 0.00%)</title><rect x="11.2708%" y="37" width="0.0043%" height="23" fill="rgb(255,249,249)" fg:x="25971" fg:w="10"/><text x="11.5208%" y="51.50"></text></g><g><title>sha256.nr:435:13::item / TWO_POW_8 (108 gates, 0.05%)</title><rect x="11.2708%" y="61" width="0.0469%" height="23" fill="rgb(255,246,246)" fg:x="25971" fg:w="108"/><text x="11.5208%" y="75.50"></text></g><g><title>acir::blackbox::range (98 gates, 0.04%)</title><rect x="11.2751%" y="37" width="0.0425%" height="23" fill="rgb(255,246,246)" fg:x="25981" fg:w="98"/><text x="11.5251%" y="51.50"></text></g><g><title>sha256.nr:436:19::shifts == 2 (4 gates, 0.00%)</title><rect x="11.3176%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26079" fg:w="4"/><text x="11.5676%" y="75.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="11.3176%" y="37" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26079" fg:w="4"/><text x="11.5676%" y="51.50"></text></g><g><title>acir::arithmetic (9 gates, 0.00%)</title><rect x="11.3194%" y="37" width="0.0039%" height="23" fill="rgb(255,249,249)" fg:x="26083" fg:w="9"/><text x="11.5694%" y="51.50"></text></g><g><title>sha256.nr:437:13::item / TWO_POW_16 (22 gates, 0.01%)</title><rect x="11.3194%" y="61" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="26083" fg:w="22"/><text x="11.5694%" y="75.50"></text></g><g><title>acir::blackbox::range (13 gates, 0.01%)</title><rect x="11.3233%" y="37" width="0.0056%" height="23" fill="rgb(255,248,248)" fg:x="26092" fg:w="13"/><text x="11.5733%" y="51.50"></text></g><g><title>sha256.nr:438:19::shifts == 3 (4 gates, 0.00%)</title><rect x="11.3289%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26105" fg:w="4"/><text x="11.5789%" y="75.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="11.3289%" y="37" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26105" fg:w="4"/><text x="11.5789%" y="51.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="11.3307%" y="37" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26109" fg:w="4"/><text x="11.5807%" y="51.50"></text></g><g><title>sha256.nr:355:13::rshift8(item, zeros) (497 gates, 0.22%)</title><rect x="11.2686%" y="85" width="0.2157%" height="23" fill="rgb(255,243,243)" fg:x="25966" fg:w="497"/><text x="11.5186%" y="99.50"></text></g><g><title>sha256.nr:439:13::item / TWO_POW_24 (354 gates, 0.15%)</title><rect x="11.3307%" y="61" width="0.1536%" height="23" fill="rgb(255,244,244)" fg:x="26109" fg:w="354"/><text x="11.5807%" y="75.50"></text></g><g><title>acir::blackbox::range (350 gates, 0.15%)</title><rect x="11.3324%" y="37" width="0.1519%" height="23" fill="rgb(255,244,244)" fg:x="26113" fg:w="350"/><text x="11.5824%" y="51.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="11.4843%" y="37" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="26463" fg:w="8"/><text x="11.7343%" y="51.50"></text></g><g><title>sha256.nr:412:13::item * TWO_POW_8 (15 gates, 0.01%)</title><rect x="11.4843%" y="61" width="0.0065%" height="23" fill="rgb(255,248,248)" fg:x="26463" fg:w="15"/><text x="11.7343%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.00%)</title><rect x="11.4878%" y="37" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="26471" fg:w="7"/><text x="11.7378%" y="51.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="11.4908%" y="37" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="26478" fg:w="8"/><text x="11.7408%" y="51.50"></text></g><g><title>sha256.nr:414:13::item * TWO_POW_16 (14 gates, 0.01%)</title><rect x="11.4908%" y="61" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="26478" fg:w="14"/><text x="11.7408%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.00%)</title><rect x="11.4943%" y="37" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="26486" fg:w="6"/><text x="11.7443%" y="51.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="11.4969%" y="37" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="26492" fg:w="3"/><text x="11.7469%" y="51.50"></text></g><g><title>sha256.nr:361:23::set_item_zeros(msg_item, zeros as u8) (533 gates, 0.23%)</title><rect x="11.2686%" y="109" width="0.2313%" height="23" fill="rgb(255,242,242)" fg:x="25966" fg:w="533"/><text x="11.5186%" y="123.50"></text></g><g><title>sha256.nr:355:5::lshift8(rshift8(item, zeros), zeros) (36 gates, 0.02%)</title><rect x="11.4843%" y="85" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="26463" fg:w="36"/><text x="11.7343%" y="99.50"></text></g><g><title>sha256.nr:416:13::item * TWO_POW_24 (7 gates, 0.00%)</title><rect x="11.4969%" y="61" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="26492" fg:w="7"/><text x="11.7469%" y="75.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="11.4982%" y="37" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26495" fg:w="4"/><text x="11.7482%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.4999%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="26499" fg:w="1"/><text x="11.7499%" y="99.50"></text></g><g><title>sha256.nr:361:48::zeros as u8 (176 gates, 0.08%)</title><rect x="11.4999%" y="109" width="0.0764%" height="23" fill="rgb(255,245,245)" fg:x="26499" fg:w="176"/><text x="11.7499%" y="123.50"></text></g><g><title>acir::blackbox::range (175 gates, 0.08%)</title><rect x="11.5003%" y="85" width="0.0759%" height="23" fill="rgb(255,245,245)" fg:x="26500" fg:w="175"/><text x="11.7503%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.5763%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="26675" fg:w="1"/><text x="11.8263%" y="75.50"></text></g><g><title>sha256.nr:383:18::max_shifts - msg_byte_ptr % INT_SIZE (3 gates, 0.00%)</title><rect x="11.5763%" y="85" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="26675" fg:w="3"/><text x="11.8263%" y="99.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="11.5767%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="26676" fg:w="2"/><text x="11.8267%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.5776%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="26678" fg:w="1"/><text x="11.8276%" y="75.50"></text></g><g><title>sha256.nr:384:23::shifts as u8 (3 gates, 0.00%)</title><rect x="11.5776%" y="85" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="26678" fg:w="3"/><text x="11.8276%" y="99.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="11.5780%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="26679" fg:w="2"/><text x="11.8280%" y="75.50"></text></g><g><title>sha256.nr:409:12::shifts == 0 (2 gates, 0.00%)</title><rect x="11.5789%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="26681" fg:w="2"/><text x="11.8289%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="11.5789%" y="37" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="26681" fg:w="2"/><text x="11.8289%" y="51.50"></text></g><g><title>sha256.nr:411:19::shifts == 1 (3 gates, 0.00%)</title><rect x="11.5798%" y="61" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="26683" fg:w="3"/><text x="11.8298%" y="75.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="11.5798%" y="37" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="26683" fg:w="3"/><text x="11.8298%" y="51.50"></text></g><g><title>sha256.nr:413:19::shifts == 2 (4 gates, 0.00%)</title><rect x="11.5811%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26686" fg:w="4"/><text x="11.8311%" y="75.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="11.5811%" y="37" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26686" fg:w="4"/><text x="11.8311%" y="51.50"></text></g><g><title>sha256.nr:362:20::byte_into_item(msg_byte, msg_byte_ptr) (19 gates, 0.01%)</title><rect x="11.5763%" y="109" width="0.0082%" height="23" fill="rgb(255,248,248)" fg:x="26675" fg:w="19"/><text x="11.8263%" y="123.50"></text></g><g><title>sha256.nr:384:5::lshift8(msg_item, shifts as u8) (13 gates, 0.01%)</title><rect x="11.5789%" y="85" width="0.0056%" height="23" fill="rgb(255,248,248)" fg:x="26681" fg:w="13"/><text x="11.8289%" y="99.50"></text></g><g><title>sha256.nr:415:19::shifts == 3 (4 gates, 0.00%)</title><rect x="11.5828%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26690" fg:w="4"/><text x="11.8328%" y="75.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="11.5828%" y="37" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26690" fg:w="4"/><text x="11.8328%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.5845%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="26694" fg:w="1"/><text x="11.8345%" y="99.50"></text></g><g><title>sha256.nr:349:20::f(msg_block[i]) (736 gates, 0.32%)</title><rect x="11.2660%" y="157" width="0.3194%" height="23" fill="rgb(255,241,241)" fg:x="25960" fg:w="736"/><text x="11.5160%" y="171.50"></text></g><g><title>sha256.nr:141:20::set_item_byte_then_zeros(msg_item, msg_byte_ptr, 1 &lt;&lt; 7) (736 gates, 0.32%)</title><rect x="11.2660%" y="133" width="0.3194%" height="23" fill="rgb(255,241,241)" fg:x="25960" fg:w="736"/><text x="11.5160%" y="147.50"></text></g><g><title>sha256.nr:363:5::zeroed_item + new_item (2 gates, 0.00%)</title><rect x="11.5845%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="26694" fg:w="2"/><text x="11.8345%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="11.5850%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="26695" fg:w="1"/><text x="11.8350%" y="99.50"></text></g><g><title>acir::arithmetic (6 gates, 0.00%)</title><rect x="11.5854%" y="133" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="26696" fg:w="6"/><text x="11.8354%" y="147.50"></text></g><g><title>acir::blackbox::range (11 gates, 0.00%)</title><rect x="11.5880%" y="133" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="26702" fg:w="11"/><text x="11.8380%" y="147.50"></text></g><g><title>sha256.nr:349:22::msg_block[i] (21 gates, 0.01%)</title><rect x="11.5854%" y="157" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="26696" fg:w="21"/><text x="11.8354%" y="171.50"></text></g><g><title>acir::memory::op (4 gates, 0.00%)</title><rect x="11.5928%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26713" fg:w="4"/><text x="11.8428%" y="147.50"></text></g><g><title>sha256.nr:138:17::update_block_item(
        msg_block,
        msg_byte_ptr,
        |msg_item| set_item_byte_then_zeros(msg_item, msg_byte_ptr, 1 &lt;&lt; 7),
    ) (768 gates, 0.33%)</title><rect x="11.2630%" y="181" width="0.3333%" height="23" fill="rgb(255,241,241)" fg:x="25953" fg:w="768"/><text x="11.5130%" y="195.50"></text></g><g><title>sha256.nr:349:5::msg_block[i] (4 gates, 0.00%)</title><rect x="11.5945%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26717" fg:w="4"/><text x="11.8445%" y="171.50"></text></g><g><title>acir::memory::op (4 gates, 0.00%)</title><rect x="11.5945%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26717" fg:w="4"/><text x="11.8445%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.5962%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="26721" fg:w="1"/><text x="11.8462%" y="171.50"></text></g><g><title>sha256.nr:143:20::msg_byte_ptr + 1 (3 gates, 0.00%)</title><rect x="11.5962%" y="181" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="26721" fg:w="3"/><text x="11.8462%" y="195.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="11.5967%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="26722" fg:w="2"/><text x="11.8467%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="11.5975%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="26724" fg:w="1"/><text x="11.8475%" y="171.50"></text></g><g><title>sha256.nr:147:8::msg_byte_ptr &gt; MSG_SIZE_PTR (4 gates, 0.00%)</title><rect x="11.5975%" y="181" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="26724" fg:w="4"/><text x="11.8475%" y="195.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="11.5980%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="26725" fg:w="3"/><text x="11.8480%" y="171.50"></text></g><g><title>acir::arithmetic (57 gates, 0.02%)</title><rect x="11.5993%" y="157" width="0.0247%" height="23" fill="rgb(255,247,247)" fg:x="26728" fg:w="57"/><text x="11.8493%" y="171.50"></text></g><g><title>acir::blackbox::range (42 gates, 0.02%)</title><rect x="11.6240%" y="157" width="0.0182%" height="23" fill="rgb(255,247,247)" fg:x="26785" fg:w="42"/><text x="11.8740%" y="171.50"></text></g><g><title>acir::blackbox::sha256_compression (3,892 gates, 1.69%)</title><rect x="11.6422%" y="157" width="1.6890%" height="23" fill="rgb(255,230,230)" fg:x="26827" fg:w="3892"/><text x="11.8922%" y="171.50"></text></g><g><title>sha256.nr:148:13::sha256_compression(msg_block, h) (4,055 gates, 1.76%)</title><rect x="11.5993%" y="181" width="1.7598%" height="23" fill="rgb(255,230,230)" fg:x="26728" fg:w="4055"/><text x="11.8493%" y="195.50"></text></g><g><title>acir::memory::op (64 gates, 0.03%)</title><rect x="13.3313%" y="157" width="0.0278%" height="23" fill="rgb(255,247,247)" fg:x="30719" fg:w="64"/><text x="13.5813%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="13.3591%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="30783" fg:w="2"/><text x="13.6091%" y="171.50"></text></g><g><title>sha256.nr:150:24::0 (4 gates, 0.00%)</title><rect x="13.3591%" y="181" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="30783" fg:w="4"/><text x="13.6091%" y="195.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="13.3599%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="30785" fg:w="2"/><text x="13.6099%" y="171.50"></text></g><g><title>acir::blackbox::range (28 gates, 0.01%)</title><rect x="13.3608%" y="157" width="0.0122%" height="23" fill="rgb(255,248,248)" fg:x="30787" fg:w="28"/><text x="13.6108%" y="171.50"></text></g><g><title>sha256.nr:155:9::attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size) (45 gates, 0.02%)</title><rect x="13.3608%" y="181" width="0.0195%" height="23" fill="rgb(255,247,247)" fg:x="30787" fg:w="45"/><text x="13.6108%" y="195.50"></text></g><g><title>acir::memory::init (17 gates, 0.01%)</title><rect x="13.3729%" y="157" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="30815" fg:w="17"/><text x="13.6229%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="13.3803%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="30832" fg:w="1"/><text x="13.6303%" y="123.50"></text></g><g><title>sha256.nr:281:28::msg_byte_ptr / INT_SIZE (4 gates, 0.00%)</title><rect x="13.3803%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="30832" fg:w="4"/><text x="13.6303%" y="147.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="13.3808%" y="109" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="30833" fg:w="3"/><text x="13.6308%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="13.3821%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="30836" fg:w="1"/><text x="13.6321%" y="123.50"></text></g><g><title>sha256.nr:284:18::msg_byte_ptr % INT_SIZE (4 gates, 0.00%)</title><rect x="13.3821%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="30836" fg:w="4"/><text x="13.6321%" y="147.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="13.3825%" y="109" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="30837" fg:w="3"/><text x="13.6325%" y="123.50"></text></g><g><title>sha256.nr:285:8::modulo != 0 (2 gates, 0.00%)</title><rect x="13.3838%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="30840" fg:w="2"/><text x="13.6338%" y="147.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="13.3838%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="30840" fg:w="2"/><text x="13.6338%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="13.3847%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="30842" fg:w="1"/><text x="13.6347%" y="123.50"></text></g><g><title>sha256.nr:286:21::INT_SIZE - modulo (2 gates, 0.00%)</title><rect x="13.3847%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="30842" fg:w="2"/><text x="13.6347%" y="147.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="13.3851%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="30843" fg:w="1"/><text x="13.6351%" y="123.50"></text></g><g><title>sha256.nr:287:23::zeros == 3 (3 gates, 0.00%)</title><rect x="13.3855%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="30844" fg:w="3"/><text x="13.6355%" y="147.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="13.3855%" y="109" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="30844" fg:w="3"/><text x="13.6355%" y="123.50"></text></g><g><title>sha256.nr:289:19::zeros == 2 (4 gates, 0.00%)</title><rect x="13.3868%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="30847" fg:w="4"/><text x="13.6368%" y="147.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="13.3868%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="30847" fg:w="4"/><text x="13.6368%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="13.3886%" y="109" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="30851" fg:w="3"/><text x="13.6386%" y="123.50"></text></g><g><title>sha256.nr:294:19::msg_block[int_byte_ptr] % mask, zero (5 gates, 0.00%)</title><rect x="13.3886%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="30851" fg:w="5"/><text x="13.6386%" y="147.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="13.3899%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="30854" fg:w="2"/><text x="13.6399%" y="123.50"></text></g><g><title>acir::arithmetic (5 gates, 0.00%)</title><rect x="13.3907%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="30856" fg:w="5"/><text x="13.6407%" y="123.50"></text></g><g><title>sha256.nr:294:19::msg_block[int_byte_ptr] % mask (10 gates, 0.00%)</title><rect x="13.3907%" y="133" width="0.0043%" height="23" fill="rgb(255,249,249)" fg:x="30856" fg:w="10"/><text x="13.6407%" y="147.50"></text></g><g><title>acir::blackbox::range (5 gates, 0.00%)</title><rect x="13.3929%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="30861" fg:w="5"/><text x="13.6429%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="13.3951%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="30866" fg:w="1"/><text x="13.6451%" y="123.50"></text></g><g><title>sha256.nr:294:19::msg_block[int_byte_ptr] (18 gates, 0.01%)</title><rect x="13.3951%" y="133" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="30866" fg:w="18"/><text x="13.6451%" y="147.50"></text></g><g><title>acir::memory::op (17 gates, 0.01%)</title><rect x="13.3955%" y="109" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="30867" fg:w="17"/><text x="13.6455%" y="123.50"></text></g><g><title>acir::arithmetic (5 gates, 0.00%)</title><rect x="13.4029%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="30884" fg:w="5"/><text x="13.6529%" y="123.50"></text></g><g><title>sha256.nr:295:24::int_byte_ptr + 1 (12 gates, 0.01%)</title><rect x="13.4029%" y="133" width="0.0052%" height="23" fill="rgb(255,248,248)" fg:x="30884" fg:w="12"/><text x="13.6529%" y="147.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.00%)</title><rect x="13.4051%" y="109" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="30889" fg:w="7"/><text x="13.6551%" y="123.50"></text></g><g><title>acir::arithmetic (14 gates, 0.01%)</title><rect x="13.4081%" y="109" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="30896" fg:w="14"/><text x="13.6581%" y="123.50"></text></g><g><title>sha256.nr:300:12::i &gt;= int_byte_ptr (49 gates, 0.02%)</title><rect x="13.4081%" y="133" width="0.0213%" height="23" fill="rgb(255,247,247)" fg:x="30896" fg:w="49"/><text x="13.6581%" y="147.50"></text></g><g><title>acir::blackbox::range (35 gates, 0.02%)</title><rect x="13.4142%" y="109" width="0.0152%" height="23" fill="rgb(255,248,248)" fg:x="30910" fg:w="35"/><text x="13.6642%" y="123.50"></text></g><g><title>acir::arithmetic (42 gates, 0.02%)</title><rect x="13.4294%" y="109" width="0.0182%" height="23" fill="rgb(255,247,247)" fg:x="30945" fg:w="42"/><text x="13.6794%" y="123.50"></text></g><g><title>sha256.nr:495:5::verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR) (183 gates, 0.08%)</title><rect x="13.3803%" y="157" width="0.0794%" height="23" fill="rgb(255,245,245)" fg:x="30832" fg:w="183"/><text x="13.6303%" y="171.50"></text></g><g><title>sha256.nr:301:23::msg_block[i], zero (70 gates, 0.03%)</title><rect x="13.4294%" y="133" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="30945" fg:w="70"/><text x="13.6794%" y="147.50"></text></g><g><title>acir::blackbox::range (28 gates, 0.01%)</title><rect x="13.4476%" y="109" width="0.0122%" height="23" fill="rgb(255,248,248)" fg:x="30987" fg:w="28"/><text x="13.6976%" y="123.50"></text></g><g><title>acir::arithmetic (21 gates, 0.01%)</title><rect x="13.4597%" y="109" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="31015" fg:w="21"/><text x="13.7097%" y="123.50"></text></g><g><title>acir::blackbox::range (23 gates, 0.01%)</title><rect x="13.4688%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="31036" fg:w="23"/><text x="13.7188%" y="123.50"></text></g><g><title>sha256.nr:321:26::last_block[int_byte_ptr] (48 gates, 0.02%)</title><rect x="13.4597%" y="133" width="0.0208%" height="23" fill="rgb(255,247,247)" fg:x="31015" fg:w="48"/><text x="13.7097%" y="147.50"></text></g><g><title>acir::memory::op (4 gates, 0.00%)</title><rect x="13.4788%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31059" fg:w="4"/><text x="13.7288%" y="123.50"></text></g><g><title>acir::arithmetic (7 gates, 0.00%)</title><rect x="13.4806%" y="109" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="31063" fg:w="7"/><text x="13.7306%" y="123.50"></text></g><g><title>sha256.nr:324:24::msg_byte_ptr - modulo (14 gates, 0.01%)</title><rect x="13.4806%" y="133" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="31063" fg:w="14"/><text x="13.7306%" y="147.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.00%)</title><rect x="13.4836%" y="109" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="31070" fg:w="7"/><text x="13.7336%" y="123.50"></text></g><g><title>acir::arithmetic (17 gates, 0.01%)</title><rect x="13.4866%" y="85" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="31077" fg:w="17"/><text x="13.7366%" y="99.50"></text></g><g><title>sha256.nr:326:24::lshift8(msg_item, 1) (38 gates, 0.02%)</title><rect x="13.4866%" y="133" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="31077" fg:w="38"/><text x="13.7366%" y="147.50"></text></g><g><title>sha256.nr:412:13::item * TWO_POW_8 (38 gates, 0.02%)</title><rect x="13.4866%" y="109" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="31077" fg:w="38"/><text x="13.7366%" y="123.50"></text></g><g><title>acir::blackbox::range (21 gates, 0.01%)</title><rect x="13.4940%" y="85" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="31094" fg:w="21"/><text x="13.7440%" y="99.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="13.5031%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31115" fg:w="4"/><text x="13.7531%" y="123.50"></text></g><g><title>sha256.nr:327:16::i &lt; modulo (13 gates, 0.01%)</title><rect x="13.5031%" y="133" width="0.0056%" height="23" fill="rgb(255,248,248)" fg:x="31115" fg:w="13"/><text x="13.7531%" y="147.50"></text></g><g><title>acir::blackbox::range (9 gates, 0.00%)</title><rect x="13.5049%" y="109" width="0.0039%" height="23" fill="rgb(255,249,249)" fg:x="31119" fg:w="9"/><text x="13.7549%" y="123.50"></text></g><g><title>acir::arithmetic (20 gates, 0.01%)</title><rect x="13.5088%" y="109" width="0.0087%" height="23" fill="rgb(255,248,248)" fg:x="31128" fg:w="20"/><text x="13.7588%" y="123.50"></text></g><g><title>sha256.nr:328:28::msg_item + get_item_byte(last_field, msg_byte_ptr) as u32 (41 gates, 0.02%)</title><rect x="13.5088%" y="133" width="0.0178%" height="23" fill="rgb(255,248,248)" fg:x="31128" fg:w="41"/><text x="13.7588%" y="147.50"></text></g><g><title>acir::blackbox::range (21 gates, 0.01%)</title><rect x="13.5175%" y="109" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="31148" fg:w="21"/><text x="13.7675%" y="123.50"></text></g><g><title>acir::arithmetic (12 gates, 0.01%)</title><rect x="13.5266%" y="85" width="0.0052%" height="23" fill="rgb(255,248,248)" fg:x="31169" fg:w="12"/><text x="13.7766%" y="99.50"></text></g><g><title>sha256.nr:370:18::max_shifts - msg_byte_ptr % INT_SIZE (20 gates, 0.01%)</title><rect x="13.5266%" y="109" width="0.0087%" height="23" fill="rgb(255,248,248)" fg:x="31169" fg:w="20"/><text x="13.7766%" y="123.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.00%)</title><rect x="13.5318%" y="85" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="31181" fg:w="8"/><text x="13.7818%" y="99.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="13.5352%" y="85" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31189" fg:w="4"/><text x="13.7852%" y="99.50"></text></g><g><title>sha256.nr:370:31::msg_byte_ptr % INT_SIZE (17 gates, 0.01%)</title><rect x="13.5352%" y="109" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="31189" fg:w="17"/><text x="13.7852%" y="123.50"></text></g><g><title>acir::blackbox::range (13 gates, 0.01%)</title><rect x="13.5370%" y="85" width="0.0056%" height="23" fill="rgb(255,248,248)" fg:x="31193" fg:w="13"/><text x="13.7870%" y="99.50"></text></g><g><title>sha256.nr:432:12::shifts == 0 (8 gates, 0.00%)</title><rect x="13.5426%" y="85" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="31206" fg:w="8"/><text x="13.7926%" y="99.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="13.5426%" y="61" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="31206" fg:w="8"/><text x="13.7926%" y="75.50"></text></g><g><title>sha256.nr:434:19::shifts == 1 (16 gates, 0.01%)</title><rect x="13.5461%" y="85" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="31214" fg:w="16"/><text x="13.7961%" y="99.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="13.5461%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="31214" fg:w="16"/><text x="13.7961%" y="75.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="13.5530%" y="61" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="31230" fg:w="36"/><text x="13.8030%" y="75.50"></text></g><g><title>sha256.nr:435:13::item / TWO_POW_8 (72 gates, 0.03%)</title><rect x="13.5530%" y="85" width="0.0312%" height="23" fill="rgb(255,247,247)" fg:x="31230" fg:w="72"/><text x="13.8030%" y="99.50"></text></g><g><title>acir::blackbox::range (36 gates, 0.02%)</title><rect x="13.5687%" y="61" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="31266" fg:w="36"/><text x="13.8187%" y="75.50"></text></g><g><title>sha256.nr:436:19::shifts == 2 (16 gates, 0.01%)</title><rect x="13.5843%" y="85" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="31302" fg:w="16"/><text x="13.8343%" y="99.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="13.5843%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="31302" fg:w="16"/><text x="13.8343%" y="75.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="13.5912%" y="61" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="31318" fg:w="36"/><text x="13.8412%" y="75.50"></text></g><g><title>sha256.nr:437:13::item / TWO_POW_16 (74 gates, 0.03%)</title><rect x="13.5912%" y="85" width="0.0321%" height="23" fill="rgb(255,247,247)" fg:x="31318" fg:w="74"/><text x="13.8412%" y="99.50"></text></g><g><title>acir::blackbox::range (38 gates, 0.02%)</title><rect x="13.6069%" y="61" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="31354" fg:w="38"/><text x="13.8569%" y="75.50"></text></g><g><title>sha256.nr:438:19::shifts == 3 (16 gates, 0.01%)</title><rect x="13.6233%" y="85" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="31392" fg:w="16"/><text x="13.8733%" y="99.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="13.6233%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="31392" fg:w="16"/><text x="13.8733%" y="75.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="13.6303%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="31408" fg:w="16"/><text x="13.8803%" y="75.50"></text></g><g><title>sha256.nr:371:16::rshift8(msg_item, shifts as u8) (242 gates, 0.11%)</title><rect x="13.5426%" y="109" width="0.1050%" height="23" fill="rgb(255,245,245)" fg:x="31206" fg:w="242"/><text x="13.7926%" y="123.50"></text></g><g><title>sha256.nr:439:13::item / TWO_POW_24 (40 gates, 0.02%)</title><rect x="13.6303%" y="85" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="31408" fg:w="40"/><text x="13.8803%" y="99.50"></text></g><g><title>acir::blackbox::range (24 gates, 0.01%)</title><rect x="13.6372%" y="61" width="0.0104%" height="23" fill="rgb(255,248,248)" fg:x="31424" fg:w="24"/><text x="13.8872%" y="75.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="13.6476%" y="85" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31448" fg:w="4"/><text x="13.8976%" y="99.50"></text></g><g><title>sha256.nr:371:34::shifts as u8 (14 gates, 0.01%)</title><rect x="13.6476%" y="109" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="31448" fg:w="14"/><text x="13.8976%" y="123.50"></text></g><g><title>acir::blackbox::range (10 gates, 0.00%)</title><rect x="13.6494%" y="85" width="0.0043%" height="23" fill="rgb(255,249,249)" fg:x="31452" fg:w="10"/><text x="13.8994%" y="99.50"></text></g><g><title>acir::arithmetic (6 gates, 0.00%)</title><rect x="13.6537%" y="85" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="31462" fg:w="6"/><text x="13.9037%" y="99.50"></text></g><g><title>sha256.nr:328:39::get_item_byte(last_field, msg_byte_ptr) (312 gates, 0.14%)</title><rect x="13.5266%" y="133" width="0.1354%" height="23" fill="rgb(255,244,244)" fg:x="31169" fg:w="312"/><text x="13.7766%" y="147.50"></text></g><g><title>sha256.nr:373:5::msg_item as u8 (19 gates, 0.01%)</title><rect x="13.6537%" y="109" width="0.0082%" height="23" fill="rgb(255,248,248)" fg:x="31462" fg:w="19"/><text x="13.9037%" y="123.50"></text></g><g><title>acir::blackbox::range (13 gates, 0.01%)</title><rect x="13.6563%" y="85" width="0.0056%" height="23" fill="rgb(255,248,248)" fg:x="31468" fg:w="13"/><text x="13.9063%" y="99.50"></text></g><g><title>acir::arithmetic (18 gates, 0.01%)</title><rect x="13.6620%" y="109" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="31481" fg:w="18"/><text x="13.9120%" y="123.50"></text></g><g><title>sha256.nr:329:32::msg_byte_ptr + 1 (39 gates, 0.02%)</title><rect x="13.6620%" y="133" width="0.0169%" height="23" fill="rgb(255,248,248)" fg:x="31481" fg:w="39"/><text x="13.9120%" y="147.50"></text></g><g><title>acir::blackbox::range (21 gates, 0.01%)</title><rect x="13.6698%" y="109" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="31499" fg:w="21"/><text x="13.9198%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="13.6789%" y="109" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="31520" fg:w="3"/><text x="13.9289%" y="123.50"></text></g><g><title>sha256.nr:332:19::msg_block[int_byte_ptr], msg_item (7 gates, 0.00%)</title><rect x="13.6789%" y="133" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="31520" fg:w="7"/><text x="13.9289%" y="147.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="13.6802%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31523" fg:w="4"/><text x="13.9302%" y="123.50"></text></g><g><title>acir::arithmetic (14 gates, 0.01%)</title><rect x="13.6819%" y="109" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="31527" fg:w="14"/><text x="13.9319%" y="123.50"></text></g><g><title>sha256.nr:336:12::i &lt; int_byte_ptr (53 gates, 0.02%)</title><rect x="13.6819%" y="133" width="0.0230%" height="23" fill="rgb(255,247,247)" fg:x="31527" fg:w="53"/><text x="13.9319%" y="147.50"></text></g><g><title>acir::blackbox::range (39 gates, 0.02%)</title><rect x="13.6880%" y="109" width="0.0169%" height="23" fill="rgb(255,248,248)" fg:x="31541" fg:w="39"/><text x="13.9380%" y="123.50"></text></g><g><title>acir::arithmetic (70 gates, 0.03%)</title><rect x="13.7049%" y="109" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="31580" fg:w="70"/><text x="13.9549%" y="123.50"></text></g><g><title>sha256.nr:337:23::msg_block[i], last_block[i] (118 gates, 0.05%)</title><rect x="13.7049%" y="133" width="0.0512%" height="23" fill="rgb(255,246,246)" fg:x="31580" fg:w="118"/><text x="13.9549%" y="147.50"></text></g><g><title>acir::blackbox::range (48 gates, 0.02%)</title><rect x="13.7353%" y="109" width="0.0208%" height="23" fill="rgb(255,247,247)" fg:x="31650" fg:w="48"/><text x="13.9853%" y="123.50"></text></g><g><title>sha256.nr:498:5::verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr) (739 gates, 0.32%)</title><rect x="13.4597%" y="157" width="0.3207%" height="23" fill="rgb(255,241,241)" fg:x="31015" fg:w="739"/><text x="13.7097%" y="171.50"></text></g><g><title>sha256.nr:337:37::last_block[i] (56 gates, 0.02%)</title><rect x="13.7561%" y="133" width="0.0243%" height="23" fill="rgb(255,247,247)" fg:x="31698" fg:w="56"/><text x="14.0061%" y="147.50"></text></g><g><title>acir::memory::op (56 gates, 0.02%)</title><rect x="13.7561%" y="109" width="0.0243%" height="23" fill="rgb(255,247,247)" fg:x="31698" fg:w="56"/><text x="14.0061%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="13.7804%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="31754" fg:w="1"/><text x="14.0304%" y="147.50"></text></g><g><title>sha256.nr:503:29::reconstructed_len * TWO_POW_32 (4 gates, 0.00%)</title><rect x="13.7804%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31754" fg:w="4"/><text x="14.0304%" y="171.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="13.7809%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="31755" fg:w="3"/><text x="14.0309%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="13.7822%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="31758" fg:w="1"/><text x="14.0322%" y="147.50"></text></g><g><title>sha256.nr:504:29::reconstructed_len + msg_block[i] as u64 (4 gates, 0.00%)</title><rect x="13.7822%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31758" fg:w="4"/><text x="14.0322%" y="171.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="13.7826%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="31759" fg:w="3"/><text x="14.0326%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="13.7839%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="31762" fg:w="1"/><text x="14.0339%" y="147.50"></text></g><g><title>sha256.nr:159:9::verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size) (935 gates, 0.41%)</title><rect x="13.3803%" y="181" width="0.4058%" height="23" fill="rgb(255,240,240)" fg:x="30832" fg:w="935"/><text x="13.6303%" y="195.50"></text></g><g><title>sha256.nr:506:15::8 * message_size as u64 (5 gates, 0.00%)</title><rect x="13.7839%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="31762" fg:w="5"/><text x="14.0339%" y="171.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="13.7843%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="31763" fg:w="4"/><text x="14.0343%" y="147.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="13.7861%" y="133" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="31767" fg:w="8"/><text x="14.0361%" y="147.50"></text></g><g><title>sha256.nr:514:13::sha256_compression(msg_block, state) (3,900 gates, 1.69%)</title><rect x="13.7861%" y="157" width="1.6925%" height="23" fill="rgb(255,230,230)" fg:x="31767" fg:w="3900"/><text x="14.0361%" y="171.50"></text></g><g><title>acir::blackbox::sha256_compression (3,892 gates, 1.69%)</title><rect x="13.7896%" y="133" width="1.6890%" height="23" fill="rgb(255,230,230)" fg:x="31775" fg:w="3892"/><text x="14.0396%" y="147.50"></text></g><g><title>sha256.nr:162:5::hash_final_block(msg_block, h) (3,940 gates, 1.71%)</title><rect x="13.7861%" y="181" width="1.7099%" height="23" fill="rgb(255,230,230)" fg:x="31767" fg:w="3940"/><text x="14.0361%" y="195.50"></text></g><g><title>sha256.nr:518:32::(state[j] as Field).to_be_bytes (40 gates, 0.02%)</title><rect x="15.4786%" y="157" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="35667" fg:w="40"/><text x="15.7286%" y="171.50"></text></g><g><title>mod.nr:98:21::self.to_be_radix (40 gates, 0.02%)</title><rect x="15.4786%" y="133" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="35667" fg:w="40"/><text x="15.7286%" y="147.50"></text></g><g><title>mod.nr:134:9::self.__to_be_radix (40 gates, 0.02%)</title><rect x="15.4786%" y="109" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="35667" fg:w="40"/><text x="15.7286%" y="123.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.02%)</title><rect x="15.4786%" y="85" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="35667" fg:w="40"/><text x="15.7286%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="15.4959%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="35707" fg:w="1"/><text x="15.7459%" y="171.50"></text></g><g><title>sha256.nr:65:24::message_size as u32 (4 gates, 0.00%)</title><rect x="15.4959%" y="181" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="35707" fg:w="4"/><text x="15.7459%" y="195.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="15.4964%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="35708" fg:w="3"/><text x="15.7464%" y="171.50"></text></g><g><title>sha256.nr:79:13::build_msg_block(msg, message_size, msg_start) (237 gates, 0.10%)</title><rect x="15.4977%" y="181" width="0.1029%" height="23" fill="rgb(255,245,245)" fg:x="35711" fg:w="237"/><text x="15.7477%" y="195.50"></text></g><g><title>acir::blackbox::range (237 gates, 0.10%)</title><rect x="15.4977%" y="157" width="0.1029%" height="23" fill="rgb(255,245,245)" fg:x="35711" fg:w="237"/><text x="15.7477%" y="171.50"></text></g><g><title>acir::arithmetic (510 gates, 0.22%)</title><rect x="15.6005%" y="157" width="0.2213%" height="23" fill="rgb(255,242,242)" fg:x="35948" fg:w="510"/><text x="15.8505%" y="171.50"></text></g><g><title>sha256.nr:82:12::msg_start &lt; message_size (1,129 gates, 0.49%)</title><rect x="15.6005%" y="181" width="0.4900%" height="23" fill="rgb(255,239,239)" fg:x="35948" fg:w="1129"/><text x="15.8505%" y="195.50"></text></g><g><title>acir::blackbox::range (619 gates, 0.27%)</title><rect x="15.8219%" y="157" width="0.2686%" height="23" fill="rgb(255,242,242)" fg:x="36458" fg:w="619"/><text x="16.0719%" y="171.50"></text></g><g><title>acir::arithmetic (384 gates, 0.17%)</title><rect x="16.0905%" y="133" width="0.1666%" height="23" fill="rgb(255,243,243)" fg:x="37077" fg:w="384"/><text x="16.3405%" y="147.50"></text></g><g><title>sha256.nr:243:27::msg_block[i], msg_item as u32 (830 gates, 0.36%)</title><rect x="16.0905%" y="157" width="0.3602%" height="23" fill="rgb(255,241,241)" fg:x="37077" fg:w="830"/><text x="16.3405%" y="171.50"></text></g><g><title>acir::blackbox::range (446 gates, 0.19%)</title><rect x="16.2571%" y="133" width="0.1936%" height="23" fill="rgb(255,243,243)" fg:x="37461" fg:w="446"/><text x="16.5071%" y="147.50"></text></g><g><title>acir::arithmetic (232 gates, 0.10%)</title><rect x="16.4507%" y="133" width="0.1007%" height="23" fill="rgb(255,245,245)" fg:x="37907" fg:w="232"/><text x="16.7007%" y="147.50"></text></g><g><title>acir::memory::init (25 gates, 0.01%)</title><rect x="16.5514%" y="133" width="0.0108%" height="23" fill="rgb(255,248,248)" fg:x="38139" fg:w="25"/><text x="16.8014%" y="147.50"></text></g><g><title>sha256.nr:243:27::msg_block[i] (632 gates, 0.27%)</title><rect x="16.4507%" y="157" width="0.2743%" height="23" fill="rgb(255,242,242)" fg:x="37907" fg:w="632"/><text x="16.7007%" y="171.50"></text></g><g><title>acir::memory::op (375 gates, 0.16%)</title><rect x="16.5622%" y="133" width="0.1627%" height="23" fill="rgb(255,244,244)" fg:x="38164" fg:w="375"/><text x="16.8122%" y="147.50"></text></g><g><title>acir::arithmetic (768 gates, 0.33%)</title><rect x="16.7250%" y="133" width="0.3333%" height="23" fill="rgb(255,241,241)" fg:x="38539" fg:w="768"/><text x="16.9750%" y="147.50"></text></g><g><title>sha256.nr:244:21::i + 1 (1,524 gates, 0.66%)</title><rect x="16.7250%" y="157" width="0.6614%" height="23" fill="rgb(255,237,237)" fg:x="38539" fg:w="1524"/><text x="16.9750%" y="171.50"></text></g><g><title>acir::blackbox::range (756 gates, 0.33%)</title><rect x="17.0583%" y="133" width="0.3281%" height="23" fill="rgb(255,241,241)" fg:x="39307" fg:w="756"/><text x="17.3083%" y="147.50"></text></g><g><title>acir::arithmetic (120 gates, 0.05%)</title><rect x="17.3863%" y="133" width="0.0521%" height="23" fill="rgb(255,246,246)" fg:x="40063" fg:w="120"/><text x="17.6363%" y="147.50"></text></g><g><title>sha256.nr:245:28::0 (333 gates, 0.14%)</title><rect x="17.3863%" y="157" width="0.1445%" height="23" fill="rgb(255,244,244)" fg:x="40063" fg:w="333"/><text x="17.6363%" y="171.50"></text></g><g><title>acir::blackbox::range (213 gates, 0.09%)</title><rect x="17.4384%" y="133" width="0.0924%" height="23" fill="rgb(255,245,245)" fg:x="40183" fg:w="213"/><text x="17.6884%" y="147.50"></text></g><g><title>acir::arithmetic (504 gates, 0.22%)</title><rect x="17.5309%" y="109" width="0.2187%" height="23" fill="rgb(255,243,243)" fg:x="40396" fg:w="504"/><text x="17.7809%" y="123.50"></text></g><g><title>sha256.nr:249:20::lshift8(msg_item, 1) (1,384 gates, 0.60%)</title><rect x="17.5309%" y="157" width="0.6006%" height="23" fill="rgb(255,238,238)" fg:x="40396" fg:w="1384"/><text x="17.7809%" y="171.50"></text></g><g><title>sha256.nr:412:13::item * TWO_POW_8 (1,384 gates, 0.60%)</title><rect x="17.5309%" y="133" width="0.6006%" height="23" fill="rgb(255,238,238)" fg:x="40396" fg:w="1384"/><text x="17.7809%" y="147.50"></text></g><g><title>acir::blackbox::range (880 gates, 0.38%)</title><rect x="17.7496%" y="109" width="0.3819%" height="23" fill="rgb(255,240,240)" fg:x="40900" fg:w="880"/><text x="17.9996%" y="123.50"></text></g><g><title>acir::arithmetic (511 gates, 0.22%)</title><rect x="18.1315%" y="133" width="0.2218%" height="23" fill="rgb(255,242,242)" fg:x="41780" fg:w="511"/><text x="18.3815%" y="147.50"></text></g><g><title>sha256.nr:251:12::k &lt; message_size (1,916 gates, 0.83%)</title><rect x="18.1315%" y="157" width="0.8315%" height="23" fill="rgb(255,236,236)" fg:x="41780" fg:w="1916"/><text x="18.3815%" y="171.50"></text></g><g><title>acir::blackbox::range (1,405 gates, 0.61%)</title><rect x="18.3532%" y="133" width="0.6097%" height="23" fill="rgb(255,238,238)" fg:x="42291" fg:w="1405"/><text x="18.6032%" y="147.50"></text></g><g><title>acir::arithmetic (4,032 gates, 1.75%)</title><rect x="18.9630%" y="133" width="1.7498%" height="23" fill="rgb(255,230,230)" fg:x="43696" fg:w="4032"/><text x="19.2130%" y="147.50"></text></g><g><title>sha256.nr:252:24::msg_item + msg[k] as u32 (7,560 gates, 3.28%)</title><rect x="18.9630%" y="157" width="3.2809%" height="23" fill="rgb(255,222,222)" fg:x="43696" fg:w="7560"/><text x="19.2130%" y="171.50">sha..</text></g><g><title>acir::blackbox::range (3,528 gates, 1.53%)</title><rect x="20.7128%" y="133" width="1.5311%" height="23" fill="rgb(255,231,231)" fg:x="47728" fg:w="3528"/><text x="20.9628%" y="147.50"></text></g><g><title>acir::arithmetic (3,016 gates, 1.31%)</title><rect x="22.2438%" y="133" width="1.3089%" height="23" fill="rgb(255,232,232)" fg:x="51256" fg:w="3016"/><text x="22.4938%" y="147.50"></text></g><g><title>sha256.nr:88:36::verify_msg_block(msg, message_size, msg_block, msg_start) (20,736 gates, 9.00%)</title><rect x="16.0905%" y="181" width="8.9989%" height="23" fill="rgb(255,205,205)" fg:x="37077" fg:w="20736"/><text x="16.3405%" y="195.50">sha256.nr:88:..</text></g><g><title>sha256.nr:253:28::msg_byte_ptr + 1 (6,557 gates, 2.85%)</title><rect x="22.2438%" y="157" width="2.8456%" height="23" fill="rgb(255,224,224)" fg:x="51256" fg:w="6557"/><text x="22.4938%" y="171.50">sh..</text></g><g><title>acir::blackbox::range (3,541 gates, 1.54%)</title><rect x="23.5527%" y="133" width="1.5367%" height="23" fill="rgb(255,231,231)" fg:x="54272" fg:w="3541"/><text x="23.8027%" y="147.50"></text></g><g><title>sha256.nr:98:42::msg_byte_ptr == BLOCK_SIZE (24 gates, 0.01%)</title><rect x="25.0894%" y="181" width="0.0104%" height="23" fill="rgb(255,248,248)" fg:x="57813" fg:w="24"/><text x="25.3394%" y="195.50"></text></g><g><title>acir::arithmetic (24 gates, 0.01%)</title><rect x="25.0894%" y="157" width="0.0104%" height="23" fill="rgb(255,248,248)" fg:x="57813" fg:w="24"/><text x="25.3394%" y="171.50"></text></g><g><title>acir::arithmetic (330 gates, 0.14%)</title><rect x="25.0998%" y="157" width="0.1432%" height="23" fill="rgb(255,244,244)" fg:x="57837" fg:w="330"/><text x="25.3498%" y="171.50"></text></g><g><title>acir::blackbox::range (327 gates, 0.14%)</title><rect x="25.2430%" y="157" width="0.1419%" height="23" fill="rgb(255,244,244)" fg:x="58167" fg:w="327"/><text x="25.4930%" y="171.50"></text></g><g><title>dkim.nr:65:27::sha256_var(header.storage(), header.len() as u64) (63,680 gates, 27.64%)</title><rect x="11.2617%" y="205" width="27.6355%" height="23" fill="rgb(255,171,171)" fg:x="25950" fg:w="63680"/><text x="11.5117%" y="219.50">dkim.nr:65:27::sha256_var(header.storage(), ..</text></g><g><title>sha256.nr:99:17::sha256_compression(msg_block, h) (31,793 gates, 13.80%)</title><rect x="25.0998%" y="181" width="13.7974%" height="23" fill="rgb(255,194,194)" fg:x="57837" fg:w="31793"/><text x="25.3498%" y="195.50">sha256.nr:99:17::sha2..</text></g><g><title>acir::blackbox::sha256_compression (31,136 gates, 13.51%)</title><rect x="25.3849%" y="157" width="13.5122%" height="23" fill="rgb(255,194,194)" fg:x="58494" fg:w="31136"/><text x="25.6349%" y="171.50">acir::blackbox::sha2..</text></g><g><title>split_bits.nr:66:9::lo_field.assert_max_bit_size (54 gates, 0.02%)</title><rect x="38.8972%" y="133" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89630" fg:w="54"/><text x="39.1472%" y="147.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (54 gates, 0.02%)</title><rect x="38.8972%" y="109" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89630" fg:w="54"/><text x="39.1472%" y="123.50"></text></g><g><title>acir::blackbox::range (54 gates, 0.02%)</title><rect x="38.8972%" y="85" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89630" fg:w="54"/><text x="39.1472%" y="99.50"></text></g><g><title>split_bits.nr:67:9::hi_field.assert_max_bit_size (63 gates, 0.03%)</title><rect x="38.9206%" y="133" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89684" fg:w="63"/><text x="39.1706%" y="147.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (63 gates, 0.03%)</title><rect x="38.9206%" y="109" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89684" fg:w="63"/><text x="39.1706%" y="123.50"></text></g><g><title>acir::blackbox::range (63 gates, 0.03%)</title><rect x="38.9206%" y="85" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89684" fg:w="63"/><text x="39.1706%" y="99.50"></text></g><g><title>params.nr:34:26::U60Repr::from(modulus) (135 gates, 0.06%)</title><rect x="38.8972%" y="181" width="0.0586%" height="23" fill="rgb(255,246,246)" fg:x="89630" fg:w="135"/><text x="39.1472%" y="195.50"></text></g><g><title>u60_representation.nr:53:28::split_bits::split_60_bits(input[i]) (135 gates, 0.06%)</title><rect x="38.8972%" y="157" width="0.0586%" height="23" fill="rgb(255,246,246)" fg:x="89630" fg:w="135"/><text x="39.1472%" y="171.50"></text></g><g><title>split_bits.nr:68:19::lo_field + (TWO_POW_60 as Field) * hi_field, x (18 gates, 0.01%)</title><rect x="38.9480%" y="133" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="89747" fg:w="18"/><text x="39.1980%" y="147.50"></text></g><g><title>acir::arithmetic (18 gates, 0.01%)</title><rect x="38.9480%" y="109" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="89747" fg:w="18"/><text x="39.1980%" y="123.50"></text></g><g><title>split_bits.nr:66:9::lo_field.assert_max_bit_size (54 gates, 0.02%)</title><rect x="38.9558%" y="133" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89765" fg:w="54"/><text x="39.2058%" y="147.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (54 gates, 0.02%)</title><rect x="38.9558%" y="109" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89765" fg:w="54"/><text x="39.2058%" y="123.50"></text></g><g><title>acir::blackbox::range (54 gates, 0.02%)</title><rect x="38.9558%" y="85" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89765" fg:w="54"/><text x="39.2058%" y="99.50"></text></g><g><title>split_bits.nr:67:9::hi_field.assert_max_bit_size (63 gates, 0.03%)</title><rect x="38.9792%" y="133" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89819" fg:w="63"/><text x="39.2292%" y="147.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (63 gates, 0.03%)</title><rect x="38.9792%" y="109" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89819" fg:w="63"/><text x="39.2292%" y="123.50"></text></g><g><title>acir::blackbox::range (63 gates, 0.03%)</title><rect x="38.9792%" y="85" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89819" fg:w="63"/><text x="39.2292%" y="99.50"></text></g><g><title>params.nr:35:29::U60Repr::from(modulus) (135 gates, 0.06%)</title><rect x="38.9558%" y="181" width="0.0586%" height="23" fill="rgb(255,246,246)" fg:x="89765" fg:w="135"/><text x="39.2058%" y="195.50"></text></g><g><title>u60_representation.nr:53:28::split_bits::split_60_bits(input[i]) (135 gates, 0.06%)</title><rect x="38.9558%" y="157" width="0.0586%" height="23" fill="rgb(255,246,246)" fg:x="89765" fg:w="135"/><text x="39.2058%" y="171.50"></text></g><g><title>split_bits.nr:68:19::lo_field + (TWO_POW_60 as Field) * hi_field, x (18 gates, 0.01%)</title><rect x="39.0065%" y="133" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="89882" fg:w="18"/><text x="39.2565%" y="147.50"></text></g><g><title>acir::arithmetic (18 gates, 0.01%)</title><rect x="39.0065%" y="109" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="89882" fg:w="18"/><text x="39.2565%" y="123.50"></text></g><g><title>split_bits.nr:66:9::lo_field.assert_max_bit_size (54 gates, 0.02%)</title><rect x="39.0144%" y="109" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89900" fg:w="54"/><text x="39.2644%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (54 gates, 0.02%)</title><rect x="39.0144%" y="85" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89900" fg:w="54"/><text x="39.2644%" y="99.50"></text></g><g><title>acir::blackbox::range (54 gates, 0.02%)</title><rect x="39.0144%" y="61" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="89900" fg:w="54"/><text x="39.2644%" y="75.50"></text></g><g><title>split_bits.nr:67:9::hi_field.assert_max_bit_size (63 gates, 0.03%)</title><rect x="39.0378%" y="109" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89954" fg:w="63"/><text x="39.2878%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (63 gates, 0.03%)</title><rect x="39.0378%" y="85" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89954" fg:w="63"/><text x="39.2878%" y="99.50"></text></g><g><title>acir::blackbox::range (63 gates, 0.03%)</title><rect x="39.0378%" y="61" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="89954" fg:w="63"/><text x="39.2878%" y="75.50"></text></g><g><title>params.nr:55:28::U60Repr::from(modulus) (135 gates, 0.06%)</title><rect x="39.0144%" y="157" width="0.0586%" height="23" fill="rgb(255,246,246)" fg:x="89900" fg:w="135"/><text x="39.2644%" y="171.50"></text></g><g><title>u60_representation.nr:53:28::split_bits::split_60_bits(input[i]) (135 gates, 0.06%)</title><rect x="39.0144%" y="133" width="0.0586%" height="23" fill="rgb(255,246,246)" fg:x="89900" fg:w="135"/><text x="39.2644%" y="147.50"></text></g><g><title>split_bits.nr:68:19::lo_field + (TWO_POW_60 as Field) * hi_field, x (18 gates, 0.01%)</title><rect x="39.0651%" y="109" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="90017" fg:w="18"/><text x="39.3151%" y="123.50"></text></g><g><title>acir::arithmetic (18 gates, 0.01%)</title><rect x="39.0651%" y="85" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="90017" fg:w="18"/><text x="39.3151%" y="99.50"></text></g><g><title>acir::arithmetic (35 gates, 0.02%)</title><rect x="39.0729%" y="109" width="0.0152%" height="23" fill="rgb(255,248,248)" fg:x="90035" fg:w="35"/><text x="39.3229%" y="123.50"></text></g><g><title>u60_representation.nr:22:32::self.limbs[i] + b.limbs[i] + carry (140 gates, 0.06%)</title><rect x="39.0729%" y="133" width="0.0608%" height="23" fill="rgb(255,246,246)" fg:x="90035" fg:w="140"/><text x="39.3229%" y="147.50"></text></g><g><title>acir::blackbox::range (105 gates, 0.05%)</title><rect x="39.0881%" y="109" width="0.0456%" height="23" fill="rgb(255,246,246)" fg:x="90070" fg:w="105"/><text x="39.3381%" y="123.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="39.1337%" y="109" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="90175" fg:w="36"/><text x="39.3837%" y="123.50"></text></g><g><title>u60_representation.nr:22:32::self.limbs[i] + b.limbs[i] (179 gates, 0.08%)</title><rect x="39.1337%" y="133" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="90175" fg:w="179"/><text x="39.3837%" y="147.50"></text></g><g><title>acir::blackbox::range (143 gates, 0.06%)</title><rect x="39.1493%" y="109" width="0.0621%" height="23" fill="rgb(255,246,246)" fg:x="90211" fg:w="143"/><text x="39.3993%" y="123.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="39.2114%" y="109" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="90354" fg:w="36"/><text x="39.4614%" y="123.50"></text></g><g><title>u60_representation.nr:23:21::add &gt;&gt; 60 (198 gates, 0.09%)</title><rect x="39.2114%" y="133" width="0.0859%" height="23" fill="rgb(255,245,245)" fg:x="90354" fg:w="198"/><text x="39.4614%" y="147.50"></text></g><g><title>acir::blackbox::range (162 gates, 0.07%)</title><rect x="39.2270%" y="109" width="0.0703%" height="23" fill="rgb(255,246,246)" fg:x="90390" fg:w="162"/><text x="39.4770%" y="123.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="39.2973%" y="109" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="90552" fg:w="36"/><text x="39.5473%" y="123.50"></text></g><g><title>u60_representation.nr:24:19::add - (carry &lt;&lt; 60) (144 gates, 0.06%)</title><rect x="39.2973%" y="133" width="0.0625%" height="23" fill="rgb(255,246,246)" fg:x="90552" fg:w="144"/><text x="39.5473%" y="147.50"></text></g><g><title>acir::blackbox::range (108 gates, 0.05%)</title><rect x="39.3129%" y="109" width="0.0469%" height="23" fill="rgb(255,246,246)" fg:x="90588" fg:w="108"/><text x="39.5629%" y="123.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="39.3598%" y="109" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="90696" fg:w="36"/><text x="39.6098%" y="123.50"></text></g><g><title>dkim.nr:68:13::BigNumParams::new(false, self.modulus, self.redc) (1,327 gates, 0.58%)</title><rect x="38.8972%" y="205" width="0.5759%" height="23" fill="rgb(255,238,238)" fg:x="89630" fg:w="1327"/><text x="39.1472%" y="219.50"></text></g><g><title>params.nr:36:29::get_double_modulus(modulus) (1,057 gates, 0.46%)</title><rect x="39.0144%" y="181" width="0.4587%" height="23" fill="rgb(255,239,239)" fg:x="89900" fg:w="1057"/><text x="39.2644%" y="195.50"></text></g><g><title>params.nr:56:48::m + m (922 gates, 0.40%)</title><rect x="39.0729%" y="157" width="0.4001%" height="23" fill="rgb(255,240,240)" fg:x="90035" fg:w="922"/><text x="39.3229%" y="171.50"></text></g><g><title>u60_representation.nr:24:26::carry &lt;&lt; 60 (261 gates, 0.11%)</title><rect x="39.3598%" y="133" width="0.1133%" height="23" fill="rgb(255,244,244)" fg:x="90696" fg:w="261"/><text x="39.6098%" y="147.50"></text></g><g><title>acir::blackbox::range (225 gates, 0.10%)</title><rect x="39.3754%" y="109" width="0.0976%" height="23" fill="rgb(255,245,245)" fg:x="90732" fg:w="225"/><text x="39.6254%" y="123.50"></text></g><g><title>constrained_ops.nr:303:9::limbs[i].assert_max_bit_size (90 gates, 0.04%)</title><rect x="39.4731%" y="157" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="90957" fg:w="90"/><text x="39.7231%" y="171.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (90 gates, 0.04%)</title><rect x="39.4731%" y="133" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="90957" fg:w="90"/><text x="39.7231%" y="147.50"></text></g><g><title>acir::blackbox::range (90 gates, 0.04%)</title><rect x="39.4731%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="90957" fg:w="90"/><text x="39.7231%" y="123.50"></text></g><g><title>dkim.nr:71:9::signature.validate_in_range (91 gates, 0.04%)</title><rect x="39.4731%" y="205" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="90957" fg:w="91"/><text x="39.7231%" y="219.50"></text></g><g><title>runtime_bignum.nr:350:9::validate_in_range::&lt;_, MOD_BITS&gt;(self.limbs) (91 gates, 0.04%)</title><rect x="39.4731%" y="181" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="90957" fg:w="91"/><text x="39.7231%" y="195.50"></text></g><g><title>constrained_ops.nr:305:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.5121%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91047" fg:w="1"/><text x="39.7621%" y="171.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.5121%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91047" fg:w="1"/><text x="39.7621%" y="147.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.5121%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91047" fg:w="1"/><text x="39.7621%" y="123.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="39.5126%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91048" fg:w="89"/><text x="39.7626%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="39.5126%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91048" fg:w="89"/><text x="39.7626%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="39.5126%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91048" fg:w="89"/><text x="39.7626%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="39.5126%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="91048" fg:w="90"/><text x="39.7626%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.5512%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91137" fg:w="1"/><text x="39.8012%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.5512%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91137" fg:w="1"/><text x="39.8012%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.5512%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91137" fg:w="1"/><text x="39.8012%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.5516%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91138" fg:w="1"/><text x="39.8016%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.5516%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91138" fg:w="1"/><text x="39.8016%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.5516%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91138" fg:w="1"/><text x="39.8016%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.5521%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91139" fg:w="33"/><text x="39.8021%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.5521%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91139" fg:w="33"/><text x="39.8021%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="39.5521%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91139" fg:w="33"/><text x="39.8021%" y="75.50"></text></g><g><title>rsa.nr:58:29::sig * sig (303 gates, 0.13%)</title><rect x="39.5126%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91048" fg:w="303"/><text x="39.7626%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="39.5126%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91048" fg:w="303"/><text x="39.7626%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="39.5126%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91048" fg:w="303"/><text x="39.7626%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="39.5664%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="91172" fg:w="179"/><text x="39.8164%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="39.5664%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="91172" fg:w="179"/><text x="39.8164%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="39.5664%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="91172" fg:w="179"/><text x="39.8164%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="39.6441%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91351" fg:w="89"/><text x="39.8941%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="39.6441%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91351" fg:w="89"/><text x="39.8941%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="39.6441%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91351" fg:w="89"/><text x="39.8941%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="39.6441%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="91351" fg:w="90"/><text x="39.8941%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.6827%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91440" fg:w="1"/><text x="39.9327%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.6827%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91440" fg:w="1"/><text x="39.9327%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.6827%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91440" fg:w="1"/><text x="39.9327%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.6831%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91441" fg:w="1"/><text x="39.9331%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.6831%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91441" fg:w="1"/><text x="39.9331%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.6831%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91441" fg:w="1"/><text x="39.9331%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.6835%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91442" fg:w="33"/><text x="39.9335%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.6835%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91442" fg:w="33"/><text x="39.9335%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="39.6835%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91442" fg:w="33"/><text x="39.9335%" y="75.50"></text></g><g><title>rsa.nr:61:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="39.6441%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91351" fg:w="303"/><text x="39.8941%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="39.6441%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91351" fg:w="303"/><text x="39.8941%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="39.6441%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91351" fg:w="303"/><text x="39.8941%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="39.6979%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="91475" fg:w="179"/><text x="39.9479%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="39.6979%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="91475" fg:w="179"/><text x="39.9479%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="39.6979%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="91475" fg:w="179"/><text x="39.9479%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (90 gates, 0.04%)</title><rect x="39.7755%" y="85" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="91654" fg:w="90"/><text x="40.0255%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (90 gates, 0.04%)</title><rect x="39.7755%" y="61" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="91654" fg:w="90"/><text x="40.0255%" y="75.50"></text></g><g><title>acir::blackbox::range (90 gates, 0.04%)</title><rect x="39.7755%" y="37" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="91654" fg:w="90"/><text x="40.0255%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="39.7755%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="91654" fg:w="91"/><text x="40.0255%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.8146%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91744" fg:w="1"/><text x="40.0646%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.8146%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91744" fg:w="1"/><text x="40.0646%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.8146%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91744" fg:w="1"/><text x="40.0646%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.8150%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91745" fg:w="1"/><text x="40.0650%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.8150%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91745" fg:w="1"/><text x="40.0650%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.8150%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="91745" fg:w="1"/><text x="40.0650%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.8155%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91746" fg:w="33"/><text x="40.0655%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.8155%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91746" fg:w="33"/><text x="40.0655%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="39.8155%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="91746" fg:w="33"/><text x="40.0655%" y="75.50"></text></g><g><title>rsa.nr:62:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="39.7755%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91654" fg:w="303"/><text x="40.0255%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="39.7755%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91654" fg:w="303"/><text x="40.0255%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="39.7755%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91654" fg:w="303"/><text x="40.0255%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="39.8298%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="91779" fg:w="178"/><text x="40.0798%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="39.8298%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="91779" fg:w="178"/><text x="40.0798%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="39.8298%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="91779" fg:w="178"/><text x="40.0798%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="39.9070%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91957" fg:w="89"/><text x="40.1570%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="39.9070%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91957" fg:w="89"/><text x="40.1570%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="39.9070%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="91957" fg:w="89"/><text x="40.1570%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="39.9070%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="91957" fg:w="91"/><text x="40.1570%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (2 gates, 0.00%)</title><rect x="39.9457%" y="85" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="92046" fg:w="2"/><text x="40.1957%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (2 gates, 0.00%)</title><rect x="39.9457%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="92046" fg:w="2"/><text x="40.1957%" y="75.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="39.9457%" y="37" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="92046" fg:w="2"/><text x="40.1957%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.9465%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92048" fg:w="1"/><text x="40.1965%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="39.9465%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92048" fg:w="1"/><text x="40.1965%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="39.9465%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92048" fg:w="1"/><text x="40.1965%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.9470%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92049" fg:w="33"/><text x="40.1970%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="39.9470%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92049" fg:w="33"/><text x="40.1970%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="39.9470%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92049" fg:w="33"/><text x="40.1970%" y="75.50"></text></g><g><title>rsa.nr:63:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="39.9070%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91957" fg:w="303"/><text x="40.1570%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="39.9070%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91957" fg:w="303"/><text x="40.1570%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="39.9070%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="91957" fg:w="303"/><text x="40.1570%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="39.9613%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="92082" fg:w="178"/><text x="40.2113%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="39.9613%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="92082" fg:w="178"/><text x="40.2113%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="39.9613%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="92082" fg:w="178"/><text x="40.2113%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.0385%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="92260" fg:w="89"/><text x="40.2885%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.0385%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="92260" fg:w="89"/><text x="40.2885%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="40.0385%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="92260" fg:w="89"/><text x="40.2885%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="40.0385%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="92260" fg:w="90"/><text x="40.2885%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.0772%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92349" fg:w="1"/><text x="40.3272%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.0772%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92349" fg:w="1"/><text x="40.3272%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.0772%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92349" fg:w="1"/><text x="40.3272%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.0776%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92350" fg:w="1"/><text x="40.3276%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.0776%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92350" fg:w="1"/><text x="40.3276%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.0776%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92350" fg:w="1"/><text x="40.3276%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.0780%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92351" fg:w="33"/><text x="40.3280%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.0780%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92351" fg:w="33"/><text x="40.3280%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.0780%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92351" fg:w="33"/><text x="40.3280%" y="75.50"></text></g><g><title>rsa.nr:64:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.0385%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92260" fg:w="303"/><text x="40.2885%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.0385%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92260" fg:w="303"/><text x="40.2885%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.0385%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92260" fg:w="303"/><text x="40.2885%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.0923%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="92384" fg:w="179"/><text x="40.3423%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.0923%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="92384" fg:w="179"/><text x="40.3423%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="40.0923%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="92384" fg:w="179"/><text x="40.3423%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.1700%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="92563" fg:w="89"/><text x="40.4200%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.1700%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="92563" fg:w="89"/><text x="40.4200%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="40.1700%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="92563" fg:w="89"/><text x="40.4200%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="40.1700%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="92563" fg:w="90"/><text x="40.4200%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.2087%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92652" fg:w="1"/><text x="40.4587%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.2087%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92652" fg:w="1"/><text x="40.4587%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.2087%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92652" fg:w="1"/><text x="40.4587%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.2091%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92653" fg:w="1"/><text x="40.4591%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.2091%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92653" fg:w="1"/><text x="40.4591%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.2091%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92653" fg:w="1"/><text x="40.4591%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.2095%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92654" fg:w="33"/><text x="40.4595%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.2095%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92654" fg:w="33"/><text x="40.4595%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.2095%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92654" fg:w="33"/><text x="40.4595%" y="75.50"></text></g><g><title>rsa.nr:65:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.1700%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92563" fg:w="303"/><text x="40.4200%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.1700%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92563" fg:w="303"/><text x="40.4200%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.1700%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92563" fg:w="303"/><text x="40.4200%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.2238%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="92687" fg:w="179"/><text x="40.4738%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.2238%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="92687" fg:w="179"/><text x="40.4738%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="40.2238%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="92687" fg:w="179"/><text x="40.4738%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (90 gates, 0.04%)</title><rect x="40.3015%" y="85" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="92866" fg:w="90"/><text x="40.5515%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (90 gates, 0.04%)</title><rect x="40.3015%" y="61" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="92866" fg:w="90"/><text x="40.5515%" y="75.50"></text></g><g><title>acir::blackbox::range (90 gates, 0.04%)</title><rect x="40.3015%" y="37" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="92866" fg:w="90"/><text x="40.5515%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="40.3015%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="92866" fg:w="91"/><text x="40.5515%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.3406%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92956" fg:w="1"/><text x="40.5906%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.3406%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92956" fg:w="1"/><text x="40.5906%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.3406%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92956" fg:w="1"/><text x="40.5906%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.3410%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92957" fg:w="1"/><text x="40.5910%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.3410%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92957" fg:w="1"/><text x="40.5910%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.3410%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="92957" fg:w="1"/><text x="40.5910%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.3415%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92958" fg:w="33"/><text x="40.5915%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.3415%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92958" fg:w="33"/><text x="40.5915%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.3415%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="92958" fg:w="33"/><text x="40.5915%" y="75.50"></text></g><g><title>rsa.nr:66:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.3015%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92866" fg:w="303"/><text x="40.5515%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.3015%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92866" fg:w="303"/><text x="40.5515%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.3015%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="92866" fg:w="303"/><text x="40.5515%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="40.3558%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="92991" fg:w="178"/><text x="40.6058%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="40.3558%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="92991" fg:w="178"/><text x="40.6058%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="40.3558%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="92991" fg:w="178"/><text x="40.6058%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.4330%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93169" fg:w="89"/><text x="40.6830%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.4330%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93169" fg:w="89"/><text x="40.6830%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="40.4330%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93169" fg:w="89"/><text x="40.6830%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="40.4330%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="93169" fg:w="91"/><text x="40.6830%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (2 gates, 0.00%)</title><rect x="40.4716%" y="85" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="93258" fg:w="2"/><text x="40.7216%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (2 gates, 0.00%)</title><rect x="40.4716%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="93258" fg:w="2"/><text x="40.7216%" y="75.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="40.4716%" y="37" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="93258" fg:w="2"/><text x="40.7216%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.4725%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93260" fg:w="1"/><text x="40.7225%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.4725%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93260" fg:w="1"/><text x="40.7225%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.4725%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93260" fg:w="1"/><text x="40.7225%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.4729%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93261" fg:w="33"/><text x="40.7229%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.4729%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93261" fg:w="33"/><text x="40.7229%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.4729%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93261" fg:w="33"/><text x="40.7229%" y="75.50"></text></g><g><title>rsa.nr:67:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.4330%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93169" fg:w="303"/><text x="40.6830%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.4330%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93169" fg:w="303"/><text x="40.6830%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.4330%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93169" fg:w="303"/><text x="40.6830%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="40.4873%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="93294" fg:w="178"/><text x="40.7373%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="40.4873%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="93294" fg:w="178"/><text x="40.7373%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="40.4873%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="93294" fg:w="178"/><text x="40.7373%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.5645%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93472" fg:w="89"/><text x="40.8145%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.5645%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93472" fg:w="89"/><text x="40.8145%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="40.5645%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93472" fg:w="89"/><text x="40.8145%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="40.5645%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="93472" fg:w="90"/><text x="40.8145%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.6031%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93561" fg:w="1"/><text x="40.8531%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.6031%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93561" fg:w="1"/><text x="40.8531%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.6031%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93561" fg:w="1"/><text x="40.8531%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.6036%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93562" fg:w="1"/><text x="40.8536%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.6036%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93562" fg:w="1"/><text x="40.8536%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.6036%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93562" fg:w="1"/><text x="40.8536%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.6040%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93563" fg:w="33"/><text x="40.8540%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.6040%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93563" fg:w="33"/><text x="40.8540%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.6040%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93563" fg:w="33"/><text x="40.8540%" y="75.50"></text></g><g><title>rsa.nr:68:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.5645%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93472" fg:w="303"/><text x="40.8145%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.5645%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93472" fg:w="303"/><text x="40.8145%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.5645%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93472" fg:w="303"/><text x="40.8145%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.6183%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="93596" fg:w="179"/><text x="40.8683%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.6183%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="93596" fg:w="179"/><text x="40.8683%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="40.6183%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="93596" fg:w="179"/><text x="40.8683%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.6960%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93775" fg:w="89"/><text x="40.9460%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.6960%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93775" fg:w="89"/><text x="40.9460%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="40.6960%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="93775" fg:w="89"/><text x="40.9460%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="40.6960%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="93775" fg:w="90"/><text x="40.9460%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.7346%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93864" fg:w="1"/><text x="40.9846%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.7346%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93864" fg:w="1"/><text x="40.9846%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.7346%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93864" fg:w="1"/><text x="40.9846%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.7351%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93865" fg:w="1"/><text x="40.9851%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.7351%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93865" fg:w="1"/><text x="40.9851%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.7351%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="93865" fg:w="1"/><text x="40.9851%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.7355%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93866" fg:w="33"/><text x="40.9855%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.7355%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93866" fg:w="33"/><text x="40.9855%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.7355%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="93866" fg:w="33"/><text x="40.9855%" y="75.50"></text></g><g><title>rsa.nr:69:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.6960%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93775" fg:w="303"/><text x="40.9460%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.6960%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93775" fg:w="303"/><text x="40.9460%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.6960%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="93775" fg:w="303"/><text x="40.9460%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.7498%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="93899" fg:w="179"/><text x="40.9998%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="40.7498%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="93899" fg:w="179"/><text x="40.9998%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="40.7498%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="93899" fg:w="179"/><text x="40.9998%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (90 gates, 0.04%)</title><rect x="40.8275%" y="85" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="94078" fg:w="90"/><text x="41.0775%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (90 gates, 0.04%)</title><rect x="40.8275%" y="61" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="94078" fg:w="90"/><text x="41.0775%" y="75.50"></text></g><g><title>acir::blackbox::range (90 gates, 0.04%)</title><rect x="40.8275%" y="37" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="94078" fg:w="90"/><text x="41.0775%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="40.8275%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="94078" fg:w="91"/><text x="41.0775%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.8666%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94168" fg:w="1"/><text x="41.1166%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.8666%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94168" fg:w="1"/><text x="41.1166%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.8666%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94168" fg:w="1"/><text x="41.1166%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.8670%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94169" fg:w="1"/><text x="41.1170%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.8670%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94169" fg:w="1"/><text x="41.1170%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.8670%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94169" fg:w="1"/><text x="41.1170%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.8674%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94170" fg:w="33"/><text x="41.1174%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.8674%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94170" fg:w="33"/><text x="41.1174%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.8674%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94170" fg:w="33"/><text x="41.1174%" y="75.50"></text></g><g><title>rsa.nr:70:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.8275%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94078" fg:w="303"/><text x="41.0775%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.8275%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94078" fg:w="303"/><text x="41.0775%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.8275%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94078" fg:w="303"/><text x="41.0775%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="40.8818%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="94203" fg:w="178"/><text x="41.1318%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="40.8818%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="94203" fg:w="178"/><text x="41.1318%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="40.8818%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="94203" fg:w="178"/><text x="41.1318%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.9590%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94381" fg:w="89"/><text x="41.2090%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="40.9590%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94381" fg:w="89"/><text x="41.2090%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="40.9590%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94381" fg:w="89"/><text x="41.2090%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="40.9590%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="94381" fg:w="91"/><text x="41.2090%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (2 gates, 0.00%)</title><rect x="40.9976%" y="85" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="94470" fg:w="2"/><text x="41.2476%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (2 gates, 0.00%)</title><rect x="40.9976%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="94470" fg:w="2"/><text x="41.2476%" y="75.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="40.9976%" y="37" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="94470" fg:w="2"/><text x="41.2476%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.9985%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94472" fg:w="1"/><text x="41.2485%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="40.9985%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94472" fg:w="1"/><text x="41.2485%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="40.9985%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94472" fg:w="1"/><text x="41.2485%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.9989%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94473" fg:w="33"/><text x="41.2489%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="40.9989%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94473" fg:w="33"/><text x="41.2489%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="40.9989%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94473" fg:w="33"/><text x="41.2489%" y="75.50"></text></g><g><title>rsa.nr:71:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="40.9590%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94381" fg:w="303"/><text x="41.2090%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="40.9590%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94381" fg:w="303"/><text x="41.2090%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="40.9590%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94381" fg:w="303"/><text x="41.2090%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="41.0132%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="94506" fg:w="178"/><text x="41.2632%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="41.0132%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="94506" fg:w="178"/><text x="41.2632%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="41.0132%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="94506" fg:w="178"/><text x="41.2632%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.0905%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94684" fg:w="89"/><text x="41.3405%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.0905%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94684" fg:w="89"/><text x="41.3405%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="41.0905%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94684" fg:w="89"/><text x="41.3405%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="41.0905%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="94684" fg:w="90"/><text x="41.3405%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.1291%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94773" fg:w="1"/><text x="41.3791%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.1291%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94773" fg:w="1"/><text x="41.3791%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.1291%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94773" fg:w="1"/><text x="41.3791%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.1296%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94774" fg:w="1"/><text x="41.3796%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.1296%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94774" fg:w="1"/><text x="41.3796%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.1296%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="94774" fg:w="1"/><text x="41.3796%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.1300%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94775" fg:w="33"/><text x="41.3800%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.1300%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94775" fg:w="33"/><text x="41.3800%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="41.1300%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="94775" fg:w="33"/><text x="41.3800%" y="75.50"></text></g><g><title>rsa.nr:72:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="41.0905%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94684" fg:w="303"/><text x="41.3405%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="41.0905%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94684" fg:w="303"/><text x="41.3405%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="41.0905%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94684" fg:w="303"/><text x="41.3405%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="41.1443%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="94808" fg:w="179"/><text x="41.3943%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="41.1443%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="94808" fg:w="179"/><text x="41.3943%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="41.1443%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="94808" fg:w="179"/><text x="41.3943%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.2220%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94987" fg:w="89"/><text x="41.4720%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.2220%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94987" fg:w="89"/><text x="41.4720%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="41.2220%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="94987" fg:w="89"/><text x="41.4720%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="41.2220%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="94987" fg:w="90"/><text x="41.4720%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.2606%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95076" fg:w="1"/><text x="41.5106%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.2606%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95076" fg:w="1"/><text x="41.5106%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.2606%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95076" fg:w="1"/><text x="41.5106%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.2610%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95077" fg:w="1"/><text x="41.5110%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.2610%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95077" fg:w="1"/><text x="41.5110%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.2610%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95077" fg:w="1"/><text x="41.5110%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.2615%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95078" fg:w="33"/><text x="41.5115%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.2615%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95078" fg:w="33"/><text x="41.5115%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="41.2615%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95078" fg:w="33"/><text x="41.5115%" y="75.50"></text></g><g><title>rsa.nr:73:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="41.2220%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94987" fg:w="303"/><text x="41.4720%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="41.2220%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94987" fg:w="303"/><text x="41.4720%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="41.2220%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="94987" fg:w="303"/><text x="41.4720%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="41.2758%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="95111" fg:w="179"/><text x="41.5258%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="41.2758%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="95111" fg:w="179"/><text x="41.5258%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="41.2758%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="95111" fg:w="179"/><text x="41.5258%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (90 gates, 0.04%)</title><rect x="41.3535%" y="85" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="95290" fg:w="90"/><text x="41.6035%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (90 gates, 0.04%)</title><rect x="41.3535%" y="61" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="95290" fg:w="90"/><text x="41.6035%" y="75.50"></text></g><g><title>acir::blackbox::range (90 gates, 0.04%)</title><rect x="41.3535%" y="37" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="95290" fg:w="90"/><text x="41.6035%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="41.3535%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="95290" fg:w="91"/><text x="41.6035%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.3925%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95380" fg:w="1"/><text x="41.6425%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.3925%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95380" fg:w="1"/><text x="41.6425%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.3925%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95380" fg:w="1"/><text x="41.6425%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.3930%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95381" fg:w="1"/><text x="41.6430%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.3930%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95381" fg:w="1"/><text x="41.6430%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.3930%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95381" fg:w="1"/><text x="41.6430%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.3934%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95382" fg:w="33"/><text x="41.6434%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.3934%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95382" fg:w="33"/><text x="41.6434%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="41.3934%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95382" fg:w="33"/><text x="41.6434%" y="75.50"></text></g><g><title>rsa.nr:74:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="41.3535%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95290" fg:w="303"/><text x="41.6035%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="41.3535%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95290" fg:w="303"/><text x="41.6035%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="41.3535%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95290" fg:w="303"/><text x="41.6035%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="41.4077%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="95415" fg:w="178"/><text x="41.6577%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="41.4077%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="95415" fg:w="178"/><text x="41.6577%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="41.4077%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="95415" fg:w="178"/><text x="41.6577%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.4850%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="95593" fg:w="89"/><text x="41.7350%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.4850%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="95593" fg:w="89"/><text x="41.7350%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="41.4850%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="95593" fg:w="89"/><text x="41.7350%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (91 gates, 0.04%)</title><rect x="41.4850%" y="109" width="0.0395%" height="23" fill="rgb(255,247,247)" fg:x="95593" fg:w="91"/><text x="41.7350%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (2 gates, 0.00%)</title><rect x="41.5236%" y="85" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="95682" fg:w="2"/><text x="41.7736%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (2 gates, 0.00%)</title><rect x="41.5236%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="95682" fg:w="2"/><text x="41.7736%" y="75.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="41.5236%" y="37" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="95682" fg:w="2"/><text x="41.7736%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.5245%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95684" fg:w="1"/><text x="41.7745%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.5245%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95684" fg:w="1"/><text x="41.7745%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.5245%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95684" fg:w="1"/><text x="41.7745%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.5249%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95685" fg:w="33"/><text x="41.7749%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.5249%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95685" fg:w="33"/><text x="41.7749%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="41.5249%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95685" fg:w="33"/><text x="41.7749%" y="75.50"></text></g><g><title>rsa.nr:75:25::exponentiated * exponentiated (303 gates, 0.13%)</title><rect x="41.4850%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95593" fg:w="303"/><text x="41.7350%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="41.4850%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95593" fg:w="303"/><text x="41.7350%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="41.4850%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95593" fg:w="303"/><text x="41.7350%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (178 gates, 0.08%)</title><rect x="41.5392%" y="109" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="95718" fg:w="178"/><text x="41.7892%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (178 gates, 0.08%)</title><rect x="41.5392%" y="85" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="95718" fg:w="178"/><text x="41.7892%" y="99.50"></text></g><g><title>acir::blackbox::range (178 gates, 0.08%)</title><rect x="41.5392%" y="61" width="0.0772%" height="23" fill="rgb(255,245,245)" fg:x="95718" fg:w="178"/><text x="41.7892%" y="75.50"></text></g><g><title>constrained_ops.nr:323:9::limbs[i].assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.6165%" y="85" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="95896" fg:w="89"/><text x="41.8665%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (89 gates, 0.04%)</title><rect x="41.6165%" y="61" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="95896" fg:w="89"/><text x="41.8665%" y="75.50"></text></g><g><title>acir::blackbox::range (89 gates, 0.04%)</title><rect x="41.6165%" y="37" width="0.0386%" height="23" fill="rgb(255,247,247)" fg:x="95896" fg:w="89"/><text x="41.8665%" y="51.50"></text></g><g><title>expressions.nr:291:5::validate_quotient_in_range::&lt;_, MOD_BITS&gt;(quotient) (90 gates, 0.04%)</title><rect x="41.6165%" y="109" width="0.0391%" height="23" fill="rgb(255,247,247)" fg:x="95896" fg:w="90"/><text x="41.8665%" y="123.50"></text></g><g><title>constrained_ops.nr:326:5::limbs[N - 1].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.6551%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95985" fg:w="1"/><text x="41.9051%" y="99.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.6551%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95985" fg:w="1"/><text x="41.9051%" y="75.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.6551%" y="37" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95985" fg:w="1"/><text x="41.9051%" y="51.50"></text></g><g><title>expressions.nr:371:5::borrow_flags[0].assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.6555%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95986" fg:w="1"/><text x="41.9055%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (1 gates, 0.00%)</title><rect x="41.6555%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95986" fg:w="1"/><text x="41.9055%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.6555%" y="61" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="95986" fg:w="1"/><text x="41.9055%" y="75.50"></text></g><g><title>expressions.nr:374:9::borrow_flags[i].assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.6560%" y="109" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95987" fg:w="33"/><text x="41.9060%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (33 gates, 0.01%)</title><rect x="41.6560%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95987" fg:w="33"/><text x="41.9060%" y="99.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="41.6560%" y="61" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="95987" fg:w="33"/><text x="41.9060%" y="75.50"></text></g><g><title>rsa.nr:78:21::exponentiated * sig (303 gates, 0.13%)</title><rect x="41.6165%" y="181" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95896" fg:w="303"/><text x="41.8665%" y="195.50"></text></g><g><title>runtime_bignum.nr:417:23::mul::&lt;_, MOD_BITS&gt;(params, self.limbs, other.limbs) (303 gates, 0.13%)</title><rect x="41.6165%" y="157" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95896" fg:w="303"/><text x="41.8665%" y="171.50"></text></g><g><title>constrained_ops.nr:479:9::evaluate_quadratic_expression(
            params,
            [[lhs]],
            [[false]],
            [[rhs]],
            [[false]],
            [result],
            [true],
        ) (303 gates, 0.13%)</title><rect x="41.6165%" y="133" width="0.1315%" height="23" fill="rgb(255,244,244)" fg:x="95896" fg:w="303"/><text x="41.8665%" y="147.50"></text></g><g><title>expressions.nr:395:9::product_limbs[i].assert_max_bit_size (179 gates, 0.08%)</title><rect x="41.6703%" y="109" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="96020" fg:w="179"/><text x="41.9203%" y="123.50"></text></g><g><title>mod.nr:14:9::self.__assert_max_bit_size (179 gates, 0.08%)</title><rect x="41.6703%" y="85" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="96020" fg:w="179"/><text x="41.9203%" y="99.50"></text></g><g><title>acir::blackbox::range (179 gates, 0.08%)</title><rect x="41.6703%" y="61" width="0.0777%" height="23" fill="rgb(255,245,245)" fg:x="96020" fg:w="179"/><text x="41.9203%" y="75.50"></text></g><g><title>serialization.nr:50:36::val[i].to_le_bytes (40 gates, 0.02%)</title><rect x="41.7480%" y="133" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="96199" fg:w="40"/><text x="41.9980%" y="147.50"></text></g><g><title>mod.nr:65:21::self.to_le_radix (40 gates, 0.02%)</title><rect x="41.7480%" y="109" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="96199" fg:w="40"/><text x="41.9980%" y="123.50"></text></g><g><title>mod.nr:124:9::self.__to_le_radix (40 gates, 0.02%)</title><rect x="41.7480%" y="85" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="96199" fg:w="40"/><text x="41.9980%" y="99.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.02%)</title><rect x="41.7480%" y="61" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="96199" fg:w="40"/><text x="41.9980%" y="75.50"></text></g><g><title>rsa.nr:79:65::exponentiated.to_le_bytes (58 gates, 0.03%)</title><rect x="41.7480%" y="181" width="0.0252%" height="23" fill="rgb(255,247,247)" fg:x="96199" fg:w="58"/><text x="41.9980%" y="195.50"></text></g><g><title>runtime_bignum.nr:168:9::to_le_bytes::&lt;_, MOD_BITS, _&gt;(self.limbs) (58 gates, 0.03%)</title><rect x="41.7480%" y="157" width="0.0252%" height="23" fill="rgb(255,247,247)" fg:x="96199" fg:w="58"/><text x="41.9980%" y="171.50"></text></g><g><title>serialization.nr:55:37::val[N - 1].to_le_bytes (18 gates, 0.01%)</title><rect x="41.7653%" y="133" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="96239" fg:w="18"/><text x="42.0153%" y="147.50"></text></g><g><title>mod.nr:65:21::self.to_le_radix (18 gates, 0.01%)</title><rect x="41.7653%" y="109" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="96239" fg:w="18"/><text x="42.0153%" y="123.50"></text></g><g><title>mod.nr:124:9::self.__to_le_radix (18 gates, 0.01%)</title><rect x="41.7653%" y="85" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="96239" fg:w="18"/><text x="42.0153%" y="99.50"></text></g><g><title>acir::blackbox::range (18 gates, 0.01%)</title><rect x="41.7653%" y="61" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="96239" fg:w="18"/><text x="42.0153%" y="75.50"></text></g><g><title>rsa.nr:19:16::hash_prefix[i - 32] == padded_sha256_hash[i] (19 gates, 0.01%)</title><rect x="41.7731%" y="157" width="0.0082%" height="23" fill="rgb(255,248,248)" fg:x="96257" fg:w="19"/><text x="42.0231%" y="171.50"></text></g><g><title>acir::arithmetic (19 gates, 0.01%)</title><rect x="41.7731%" y="133" width="0.0082%" height="23" fill="rgb(255,248,248)" fg:x="96257" fg:w="19"/><text x="42.0231%" y="147.50"></text></g><g><title>rsa.nr:22:12::padded_sha256_hash[51] == 0 (1 gates, 0.00%)</title><rect x="41.7814%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96276" fg:w="1"/><text x="42.0314%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.7814%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96276" fg:w="1"/><text x="42.0314%" y="147.50"></text></g><g><title>rsa.nr:29:20::padded_sha256_hash[i] == 255 (202 gates, 0.09%)</title><rect x="41.7818%" y="157" width="0.0877%" height="23" fill="rgb(255,245,245)" fg:x="96277" fg:w="202"/><text x="42.0318%" y="171.50"></text></g><g><title>acir::arithmetic (202 gates, 0.09%)</title><rect x="41.7818%" y="133" width="0.0877%" height="23" fill="rgb(255,245,245)" fg:x="96277" fg:w="202"/><text x="42.0318%" y="147.50"></text></g><g><title>rsa.nr:32:20::padded_sha256_hash[i] == 1 (1 gates, 0.00%)</title><rect x="41.8695%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96479" fg:w="1"/><text x="42.1195%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8695%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96479" fg:w="1"/><text x="42.1195%" y="147.50"></text></g><g><title>main.nr:35:5::pubkey.verify_dkim_signature (70,531 gates, 30.61%)</title><rect x="11.2617%" y="229" width="30.6087%" height="23" fill="rgb(255,167,167)" fg:x="25950" fg:w="70531"/><text x="11.5117%" y="243.50">main.nr:35:5::pubkey.verify_dkim_signature</text></g><g><title>dkim.nr:74:16::verify_sha256_pkcs1v15(header_hash, signature, RSA_EXPONENT) (5,433 gates, 2.36%)</title><rect x="39.5126%" y="205" width="2.3578%" height="23" fill="rgb(255,226,226)" fg:x="91048" fg:w="5433"/><text x="39.7626%" y="219.50">d..</text></g><g><title>rsa.nr:80:5::compare_signature_sha256(padded_sha256_hash_bytes, msg_hash) (224 gates, 0.10%)</title><rect x="41.7731%" y="181" width="0.0972%" height="23" fill="rgb(255,245,245)" fg:x="96257" fg:w="224"/><text x="42.0231%" y="195.50"></text></g><g><title>rsa.nr:35:20::padded_sha256_hash[i] == 0 (1 gates, 0.00%)</title><rect x="41.8699%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96480" fg:w="1"/><text x="42.1199%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8699%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96480" fg:w="1"/><text x="42.1199%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8703%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96481" fg:w="1"/><text x="42.1203%" y="123.50"></text></g><g><title>mod.nr:22:21::header_field_sequence.end_index (2 gates, 0.00%)</title><rect x="41.8703%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96481" fg:w="2"/><text x="42.1203%" y="171.50"></text></g><g><title>lib.nr:28:9::self.index + self.length (2 gates, 0.00%)</title><rect x="41.8703%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96481" fg:w="2"/><text x="42.1203%" y="147.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.8708%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96482" fg:w="1"/><text x="42.1208%" y="123.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="41.8712%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96483" fg:w="2"/><text x="42.1212%" y="147.50"></text></g><g><title>mod.nr:23:12::end_index &lt;= header.len() (5 gates, 0.00%)</title><rect x="41.8712%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96483" fg:w="5"/><text x="42.1212%" y="171.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="41.8721%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="96485" fg:w="3"/><text x="42.1221%" y="147.50"></text></g><g><title>mod.nr:26:8::header_field_sequence.index != 0 (2 gates, 0.00%)</title><rect x="41.8734%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96488" fg:w="2"/><text x="42.1234%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="41.8734%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96488" fg:w="2"/><text x="42.1234%" y="147.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="41.8743%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="96490" fg:w="4"/><text x="42.1243%" y="147.50"></text></g><g><title>mod.nr:28:13::header.get_unchecked(header_field_sequence.index - 2) == CR (5 gates, 0.00%)</title><rect x="41.8743%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96490" fg:w="5"/><text x="42.1243%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.8760%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96494" fg:w="1"/><text x="42.1260%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8764%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96495" fg:w="1"/><text x="42.1264%" y="123.50"></text></g><g><title>mod.nr:28:13::header.get_unchecked (6 gates, 0.00%)</title><rect x="41.8764%" y="157" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96495" fg:w="6"/><text x="42.1264%" y="171.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (6 gates, 0.00%)</title><rect x="41.8764%" y="133" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96495" fg:w="6"/><text x="42.1264%" y="147.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="41.8769%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96496" fg:w="5"/><text x="42.1269%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8790%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96501" fg:w="1"/><text x="42.1290%" y="147.50"></text></g><g><title>mod.nr:28:34::header_field_sequence.index - 2 (2 gates, 0.00%)</title><rect x="41.8790%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96501" fg:w="2"/><text x="42.1290%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.8795%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96502" fg:w="1"/><text x="42.1295%" y="147.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="41.8799%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="96503" fg:w="3"/><text x="42.1299%" y="147.50"></text></g><g><title>mod.nr:32:13::header.get_unchecked(header_field_sequence.index - 1) == LF (4 gates, 0.00%)</title><rect x="41.8799%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="96503" fg:w="4"/><text x="42.1299%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.8812%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96506" fg:w="1"/><text x="42.1312%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8816%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96507" fg:w="1"/><text x="42.1316%" y="123.50"></text></g><g><title>mod.nr:32:13::header.get_unchecked (6 gates, 0.00%)</title><rect x="41.8816%" y="157" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96507" fg:w="6"/><text x="42.1316%" y="171.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (6 gates, 0.00%)</title><rect x="41.8816%" y="133" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96507" fg:w="6"/><text x="42.1316%" y="147.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="41.8821%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96508" fg:w="5"/><text x="42.1321%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8842%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96513" fg:w="1"/><text x="42.1342%" y="147.50"></text></g><g><title>mod.nr:32:34::header_field_sequence.index - 1 (3 gates, 0.00%)</title><rect x="41.8842%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="96513" fg:w="3"/><text x="42.1342%" y="171.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="41.8847%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96514" fg:w="2"/><text x="42.1347%" y="147.50"></text></g><g><title>mod.nr:38:8::end_index != header.len() (3 gates, 0.00%)</title><rect x="41.8855%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="96516" fg:w="3"/><text x="42.1355%" y="171.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="41.8855%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="96516" fg:w="3"/><text x="42.1355%" y="147.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="41.8868%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="96519" fg:w="4"/><text x="42.1368%" y="147.50"></text></g><g><title>mod.nr:39:16::header.get_unchecked(end_index) == CR (5 gates, 0.00%)</title><rect x="41.8868%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96519" fg:w="5"/><text x="42.1368%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.8886%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96523" fg:w="1"/><text x="42.1386%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8890%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96524" fg:w="1"/><text x="42.1390%" y="123.50"></text></g><g><title>mod.nr:39:16::header.get_unchecked (6 gates, 0.00%)</title><rect x="41.8890%" y="157" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96524" fg:w="6"/><text x="42.1390%" y="171.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (6 gates, 0.00%)</title><rect x="41.8890%" y="133" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96524" fg:w="6"/><text x="42.1390%" y="147.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="41.8894%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96525" fg:w="5"/><text x="42.1394%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="41.8916%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="96530" fg:w="3"/><text x="42.1416%" y="147.50"></text></g><g><title>mod.nr:40:16::header.get_unchecked(end_index + 1) == LF (5 gates, 0.00%)</title><rect x="41.8916%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96530" fg:w="5"/><text x="42.1416%" y="171.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="41.8929%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96533" fg:w="2"/><text x="42.1429%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8938%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96535" fg:w="1"/><text x="42.1438%" y="123.50"></text></g><g><title>mod.nr:40:16::header.get_unchecked (6 gates, 0.00%)</title><rect x="41.8938%" y="157" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96535" fg:w="6"/><text x="42.1438%" y="171.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (6 gates, 0.00%)</title><rect x="41.8938%" y="133" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="96535" fg:w="6"/><text x="42.1438%" y="147.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="41.8942%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96536" fg:w="5"/><text x="42.1442%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.8964%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96541" fg:w="1"/><text x="42.1464%" y="147.50"></text></g><g><title>mod.nr:40:37::end_index + 1 (2 gates, 0.00%)</title><rect x="41.8964%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96541" fg:w="2"/><text x="42.1464%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.8968%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96542" fg:w="1"/><text x="42.1468%" y="147.50"></text></g><g><title>mod.nr:46:13::header.get_unchecked(header_field_sequence.index + i) == header_field_name[i] (14 gates, 0.01%)</title><rect x="41.8973%" y="157" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="96543" fg:w="14"/><text x="42.1473%" y="171.50"></text></g><g><title>acir::arithmetic (14 gates, 0.01%)</title><rect x="41.8973%" y="133" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="96543" fg:w="14"/><text x="42.1473%" y="147.50"></text></g><g><title>mod.nr:46:13::header.get_unchecked (70 gates, 0.03%)</title><rect x="41.9033%" y="157" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="96557" fg:w="70"/><text x="42.1533%" y="171.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (70 gates, 0.03%)</title><rect x="41.9033%" y="133" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="96557" fg:w="70"/><text x="42.1533%" y="147.50"></text></g><g><title>acir::memory::op (70 gates, 0.03%)</title><rect x="41.9033%" y="109" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="96557" fg:w="70"/><text x="42.1533%" y="123.50"></text></g><g><title>acir::arithmetic (13 gates, 0.01%)</title><rect x="41.9337%" y="133" width="0.0056%" height="23" fill="rgb(255,248,248)" fg:x="96627" fg:w="13"/><text x="42.1837%" y="147.50"></text></g><g><title>mod.nr:46:34::header_field_sequence.index + i (37 gates, 0.02%)</title><rect x="41.9337%" y="157" width="0.0161%" height="23" fill="rgb(255,248,248)" fg:x="96627" fg:w="37"/><text x="42.1837%" y="171.50"></text></g><g><title>acir::blackbox::range (24 gates, 0.01%)</title><rect x="41.9393%" y="133" width="0.0104%" height="23" fill="rgb(255,248,248)" fg:x="96640" fg:w="24"/><text x="42.1893%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.9498%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96664" fg:w="1"/><text x="42.1998%" y="147.50"></text></g><g><title>mod.nr:51:30::header_field_sequence.index + HEADER_FIELD_NAME_LENGTH (2 gates, 0.00%)</title><rect x="41.9498%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96664" fg:w="2"/><text x="42.1998%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="41.9502%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96665" fg:w="1"/><text x="42.2002%" y="147.50"></text></g><g><title>mod.nr:51:9::header.get_unchecked(header_field_sequence.index + HEADER_FIELD_NAME_LENGTH) == 0x3a (1 gates, 0.00%)</title><rect x="41.9506%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96666" fg:w="1"/><text x="42.2006%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.9506%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96666" fg:w="1"/><text x="42.2006%" y="147.50"></text></g><g><title>mod.nr:72:5::check_header_field_bounds::&lt;MAX_HEADER_LENGTH, MAX_HEADER_FIELD_LENGTH, HEADER_FIELD_NAME_LENGTH&gt;(
        header,
        header_field_sequence,
        header_field_name,
    ) (191 gates, 0.08%)</title><rect x="41.8703%" y="181" width="0.0829%" height="23" fill="rgb(255,245,245)" fg:x="96481" fg:w="191"/><text x="42.1203%" y="195.50"></text></g><g><title>mod.nr:51:9::header.get_unchecked (5 gates, 0.00%)</title><rect x="41.9511%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96667" fg:w="5"/><text x="42.2011%" y="171.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (5 gates, 0.00%)</title><rect x="41.9511%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96667" fg:w="5"/><text x="42.2011%" y="147.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="41.9511%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="96667" fg:w="5"/><text x="42.2011%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="41.9532%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="96672" fg:w="1"/><text x="42.2032%" y="171.50"></text></g><g><title>mod.nr:79:23::header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1 (3 gates, 0.00%)</title><rect x="41.9532%" y="181" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="96672" fg:w="3"/><text x="42.2032%" y="195.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="41.9537%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="96673" fg:w="2"/><text x="42.2037%" y="171.50"></text></g><g><title>acir::arithmetic (299 gates, 0.13%)</title><rect x="41.9545%" y="157" width="0.1298%" height="23" fill="rgb(255,244,244)" fg:x="96675" fg:w="299"/><text x="42.2045%" y="171.50"></text></g><g><title>mod.nr:82:21::start_index + i (1,047 gates, 0.45%)</title><rect x="41.9545%" y="181" width="0.4544%" height="23" fill="rgb(255,239,239)" fg:x="96675" fg:w="1047"/><text x="42.2045%" y="195.50"></text></g><g><title>acir::blackbox::range (748 gates, 0.32%)</title><rect x="42.0843%" y="157" width="0.3246%" height="23" fill="rgb(255,241,241)" fg:x="96974" fg:w="748"/><text x="42.3343%" y="171.50"></text></g><g><title>acir::arithmetic (300 gates, 0.13%)</title><rect x="42.4089%" y="157" width="0.1302%" height="23" fill="rgb(255,244,244)" fg:x="97722" fg:w="300"/><text x="42.6589%" y="171.50"></text></g><g><title>mod.nr:83:13::index &lt; header_field_sequence.end_index() (900 gates, 0.39%)</title><rect x="42.4089%" y="181" width="0.3906%" height="23" fill="rgb(255,240,240)" fg:x="97722" fg:w="900"/><text x="42.6589%" y="195.50"></text></g><g><title>acir::blackbox::range (600 gates, 0.26%)</title><rect x="42.5391%" y="157" width="0.2604%" height="23" fill="rgb(255,242,242)" fg:x="98022" fg:w="600"/><text x="42.7891%" y="171.50"></text></g><g><title>mod.nr:84:20::header.get_unchecked(index) != CR (1,200 gates, 0.52%)</title><rect x="42.7995%" y="181" width="0.5208%" height="23" fill="rgb(255,239,239)" fg:x="98622" fg:w="1200"/><text x="43.0495%" y="195.50"></text></g><g><title>acir::arithmetic (1,200 gates, 0.52%)</title><rect x="42.7995%" y="157" width="0.5208%" height="23" fill="rgb(255,239,239)" fg:x="98622" fg:w="1200"/><text x="43.0495%" y="171.50"></text></g><g><title>acir::arithmetic (300 gates, 0.13%)</title><rect x="43.3203%" y="133" width="0.1302%" height="23" fill="rgb(255,244,244)" fg:x="99822" fg:w="300"/><text x="43.5703%" y="147.50"></text></g><g><title>body_hash.nr:22:5::constrain_header_field::&lt;MAX_HEADER_LENGTH, MAX_DKIM_HEADER_FIELD_LENGTH, 14&gt;(
        header,
        dkim_header_field_sequence,
        header_field_name,
    ) (5,141 gates, 2.23%)</title><rect x="41.8703%" y="205" width="2.2311%" height="23" fill="rgb(255,227,227)" fg:x="96481" fg:w="5141"/><text x="42.1203%" y="219.50">b..</text></g><g><title>mod.nr:84:20::header.get_unchecked (1,800 gates, 0.78%)</title><rect x="43.3203%" y="181" width="0.7812%" height="23" fill="rgb(255,236,236)" fg:x="99822" fg:w="1800"/><text x="43.5703%" y="195.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (1,800 gates, 0.78%)</title><rect x="43.3203%" y="157" width="0.7812%" height="23" fill="rgb(255,236,236)" fg:x="99822" fg:w="1800"/><text x="43.5703%" y="171.50"></text></g><g><title>acir::memory::op (1,500 gates, 0.65%)</title><rect x="43.4504%" y="133" width="0.6510%" height="23" fill="rgb(255,237,237)" fg:x="100122" fg:w="1500"/><text x="43.7004%" y="147.50"></text></g><g><title>body_hash.nr:29:9::body_hash_index &gt; dkim_header_field_sequence.index
            &amp; body_hash_index + BODY_HASH_BASE64_LENGTH &lt; dkim_header_field_sequence.end_index() + 1 (2 gates, 0.00%)</title><rect x="44.1014%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="101622" fg:w="2"/><text x="44.3514%" y="219.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="44.1014%" y="181" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="101622" fg:w="2"/><text x="44.3514%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.1023%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101624" fg:w="1"/><text x="44.3523%" y="195.50"></text></g><g><title>body_hash.nr:29:9::body_hash_index &gt; dkim_header_field_sequence.index (3 gates, 0.00%)</title><rect x="44.1023%" y="205" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="101624" fg:w="3"/><text x="44.3523%" y="219.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="44.1027%" y="181" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="101625" fg:w="2"/><text x="44.3527%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.1036%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101627" fg:w="1"/><text x="44.3536%" y="195.50"></text></g><g><title>body_hash.nr:30:15::body_hash_index + BODY_HASH_BASE64_LENGTH &lt; dkim_header_field_sequence.end_index() + 1 (2 gates, 0.00%)</title><rect x="44.1036%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="101627" fg:w="2"/><text x="44.3536%" y="219.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="44.1040%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101628" fg:w="1"/><text x="44.3540%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.1044%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101629" fg:w="1"/><text x="44.3544%" y="195.50"></text></g><g><title>body_hash.nr:30:15::body_hash_index + BODY_HASH_BASE64_LENGTH (2 gates, 0.00%)</title><rect x="44.1044%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="101629" fg:w="2"/><text x="44.3544%" y="219.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="44.1049%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101630" fg:w="1"/><text x="44.3549%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.1053%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101631" fg:w="1"/><text x="44.3553%" y="195.50"></text></g><g><title>body_hash.nr:30:59::dkim_header_field_sequence.end_index() + 1 (4 gates, 0.00%)</title><rect x="44.1053%" y="205" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="101631" fg:w="4"/><text x="44.3553%" y="219.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="44.1058%" y="181" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="101632" fg:w="3"/><text x="44.3558%" y="195.50"></text></g><g><title>body_hash.nr:36:29::header.get_unchecked (25 gates, 0.01%)</title><rect x="44.1071%" y="205" width="0.0108%" height="23" fill="rgb(255,248,248)" fg:x="101635" fg:w="25"/><text x="44.3571%" y="219.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (25 gates, 0.01%)</title><rect x="44.1071%" y="181" width="0.0108%" height="23" fill="rgb(255,248,248)" fg:x="101635" fg:w="25"/><text x="44.3571%" y="195.50"></text></g><g><title>acir::memory::op (25 gates, 0.01%)</title><rect x="44.1071%" y="157" width="0.0108%" height="23" fill="rgb(255,248,248)" fg:x="101635" fg:w="25"/><text x="44.3571%" y="171.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="44.1179%" y="181" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="101660" fg:w="4"/><text x="44.3679%" y="195.50"></text></g><g><title>body_hash.nr:36:50::body_hash_index - 5 + i (11 gates, 0.00%)</title><rect x="44.1179%" y="205" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="101660" fg:w="11"/><text x="44.3679%" y="219.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.00%)</title><rect x="44.1196%" y="181" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="101664" fg:w="7"/><text x="44.3696%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.1227%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101671" fg:w="1"/><text x="44.3727%" y="195.50"></text></g><g><title>body_hash.nr:36:50::body_hash_index - 5 (3 gates, 0.00%)</title><rect x="44.1227%" y="205" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="101671" fg:w="3"/><text x="44.3727%" y="219.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="44.1231%" y="181" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="101672" fg:w="2"/><text x="44.3731%" y="195.50"></text></g><g><title>body_hash.nr:37:20::character == bh_prefix[i] (5 gates, 0.00%)</title><rect x="44.1240%" y="205" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="101674" fg:w="5"/><text x="44.3740%" y="219.50"></text></g><g><title>acir::arithmetic (5 gates, 0.00%)</title><rect x="44.1240%" y="181" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="101674" fg:w="5"/><text x="44.3740%" y="195.50"></text></g><g><title>body_hash.nr:41:13::header.get_unchecked(body_hash_index + BODY_HASH_BASE64_LENGTH) == bh_suffix (1 gates, 0.00%)</title><rect x="44.1261%" y="205" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101679" fg:w="1"/><text x="44.3761%" y="219.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.1261%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="101679" fg:w="1"/><text x="44.3761%" y="195.50"></text></g><g><title>body_hash.nr:41:13::header.get_unchecked (5 gates, 0.00%)</title><rect x="44.1266%" y="205" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="101680" fg:w="5"/><text x="44.3766%" y="219.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (5 gates, 0.00%)</title><rect x="44.1266%" y="181" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="101680" fg:w="5"/><text x="44.3766%" y="195.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="44.1266%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="101680" fg:w="5"/><text x="44.3766%" y="171.50"></text></g><g><title>body_hash.nr:63:32::header.get_unchecked (220 gates, 0.10%)</title><rect x="44.1288%" y="181" width="0.0955%" height="23" fill="rgb(255,245,245)" fg:x="101685" fg:w="220"/><text x="44.3788%" y="195.50"></text></g><g><title>bounded_vec.nr:112:9::self.storage[index] (220 gates, 0.10%)</title><rect x="44.1288%" y="157" width="0.0955%" height="23" fill="rgb(255,245,245)" fg:x="101685" fg:w="220"/><text x="44.3788%" y="171.50"></text></g><g><title>acir::memory::op (220 gates, 0.10%)</title><rect x="44.1288%" y="133" width="0.0955%" height="23" fill="rgb(255,245,245)" fg:x="101685" fg:w="220"/><text x="44.3788%" y="147.50"></text></g><g><title>acir::arithmetic (43 gates, 0.02%)</title><rect x="44.2242%" y="157" width="0.0187%" height="23" fill="rgb(255,247,247)" fg:x="101905" fg:w="43"/><text x="44.4742%" y="171.50"></text></g><g><title>body_hash.nr:63:53::body_hash_index + i (118 gates, 0.05%)</title><rect x="44.2242%" y="181" width="0.0512%" height="23" fill="rgb(255,246,246)" fg:x="101905" fg:w="118"/><text x="44.4742%" y="195.50"></text></g><g><title>acir::blackbox::range (75 gates, 0.03%)</title><rect x="44.2429%" y="157" width="0.0325%" height="23" fill="rgb(255,247,247)" fg:x="101948" fg:w="75"/><text x="44.4929%" y="171.50"></text></g><g><title>decoder.nr:669:24::input[InputElements - 1] == BASE64_PADDING_CHAR (1 gates, 0.00%)</title><rect x="44.2754%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="102023" fg:w="1"/><text x="44.5254%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.2754%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="102023" fg:w="1"/><text x="44.5254%" y="147.50"></text></g><g><title>acir::arithmetic (49 gates, 0.02%)</title><rect x="44.2759%" y="109" width="0.0213%" height="23" fill="rgb(255,247,247)" fg:x="102024" fg:w="49"/><text x="44.5259%" y="123.50"></text></g><g><title>acir::memory::init (17 gates, 0.01%)</title><rect x="44.2971%" y="109" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="102073" fg:w="17"/><text x="44.5471%" y="123.50"></text></g><g><title>decoder.nr:697:35::self.get (746 gates, 0.32%)</title><rect x="44.2759%" y="157" width="0.3237%" height="23" fill="rgb(255,241,241)" fg:x="102024" fg:w="746"/><text x="44.5259%" y="171.50"></text></g><g><title>decoder.nr:610:9::self.table[idx] (746 gates, 0.32%)</title><rect x="44.2759%" y="133" width="0.3237%" height="23" fill="rgb(255,241,241)" fg:x="102024" fg:w="746"/><text x="44.5259%" y="147.50"></text></g><g><title>acir::memory::op (680 gates, 0.30%)</title><rect x="44.3045%" y="109" width="0.2951%" height="23" fill="rgb(255,241,241)" fg:x="102090" fg:w="680"/><text x="44.5545%" y="123.50"></text></g><g><title>decoder.nr:699:25::decoded != INVALID_VALUE (160 gates, 0.07%)</title><rect x="44.5996%" y="157" width="0.0694%" height="23" fill="rgb(255,246,246)" fg:x="102770" fg:w="160"/><text x="44.8496%" y="171.50"></text></g><g><title>acir::arithmetic (160 gates, 0.07%)</title><rect x="44.5996%" y="133" width="0.0694%" height="23" fill="rgb(255,246,246)" fg:x="102770" fg:w="160"/><text x="44.8496%" y="147.50"></text></g><g><title>decoder.nr:704:45::slice.to_be_bytes (37 gates, 0.02%)</title><rect x="44.6691%" y="157" width="0.0161%" height="23" fill="rgb(255,248,248)" fg:x="102930" fg:w="37"/><text x="44.9191%" y="171.50"></text></g><g><title>mod.nr:98:21::self.to_be_radix (37 gates, 0.02%)</title><rect x="44.6691%" y="133" width="0.0161%" height="23" fill="rgb(255,248,248)" fg:x="102930" fg:w="37"/><text x="44.9191%" y="147.50"></text></g><g><title>mod.nr:134:9::self.__to_be_radix (37 gates, 0.02%)</title><rect x="44.6691%" y="109" width="0.0161%" height="23" fill="rgb(255,248,248)" fg:x="102930" fg:w="37"/><text x="44.9191%" y="123.50"></text></g><g><title>acir::blackbox::range (37 gates, 0.02%)</title><rect x="44.6691%" y="85" width="0.0161%" height="23" fill="rgb(255,248,248)" fg:x="102930" fg:w="37"/><text x="44.9191%" y="99.50"></text></g><g><title>decoder.nr:725:31::self.get (51 gates, 0.02%)</title><rect x="44.6851%" y="157" width="0.0221%" height="23" fill="rgb(255,247,247)" fg:x="102967" fg:w="51"/><text x="44.9351%" y="171.50"></text></g><g><title>decoder.nr:610:9::self.table[idx] (51 gates, 0.02%)</title><rect x="44.6851%" y="133" width="0.0221%" height="23" fill="rgb(255,247,247)" fg:x="102967" fg:w="51"/><text x="44.9351%" y="147.50"></text></g><g><title>acir::memory::op (51 gates, 0.02%)</title><rect x="44.6851%" y="109" width="0.0221%" height="23" fill="rgb(255,247,247)" fg:x="102967" fg:w="51"/><text x="44.9351%" y="123.50"></text></g><g><title>decoder.nr:727:21::decoded != INVALID_VALUE (12 gates, 0.01%)</title><rect x="44.7072%" y="157" width="0.0052%" height="23" fill="rgb(255,248,248)" fg:x="103018" fg:w="12"/><text x="44.9572%" y="171.50"></text></g><g><title>acir::arithmetic (12 gates, 0.01%)</title><rect x="44.7072%" y="133" width="0.0052%" height="23" fill="rgb(255,248,248)" fg:x="103018" fg:w="12"/><text x="44.9572%" y="147.50"></text></g><g><title>main.nr:39:28::get_body_hash(header, dkim_header_sequence, body_hash_index) (6,587 gates, 2.86%)</title><rect x="41.8703%" y="229" width="2.8586%" height="23" fill="rgb(255,224,224)" fg:x="96481" fg:w="6587"/><text x="42.1203%" y="243.50">ma..</text></g><g><title>body_hash.nr:45:9::get_body_hash_unsafe(header, body_hash_index) (1,383 gates, 0.60%)</title><rect x="44.1288%" y="205" width="0.6002%" height="23" fill="rgb(255,238,238)" fg:x="101685" fg:w="1383"/><text x="44.3788%" y="219.50"></text></g><g><title>body_hash.nr:67:5::BASE64_DECODER.decode (1,045 gates, 0.45%)</title><rect x="44.2754%" y="181" width="0.4535%" height="23" fill="rgb(255,239,239)" fg:x="102023" fg:w="1045"/><text x="44.5254%" y="195.50"></text></g><g><title>decoder.nr:738:41::slice.to_be_bytes (38 gates, 0.02%)</title><rect x="44.7124%" y="157" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="103030" fg:w="38"/><text x="44.9624%" y="171.50"></text></g><g><title>mod.nr:98:21::self.to_be_radix (38 gates, 0.02%)</title><rect x="44.7124%" y="133" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="103030" fg:w="38"/><text x="44.9624%" y="147.50"></text></g><g><title>mod.nr:134:9::self.__to_be_radix (38 gates, 0.02%)</title><rect x="44.7124%" y="109" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="103030" fg:w="38"/><text x="44.9624%" y="123.50"></text></g><g><title>acir::blackbox::range (38 gates, 0.02%)</title><rect x="44.7124%" y="85" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="103030" fg:w="38"/><text x="44.9624%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7289%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103068" fg:w="1"/><text x="44.9789%" y="195.50"></text></g><g><title>sha256.nr:132:24::0 (2 gates, 0.00%)</title><rect x="44.7289%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103068" fg:w="2"/><text x="44.9789%" y="219.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="44.7294%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103069" fg:w="1"/><text x="44.9794%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7298%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103070" fg:w="1"/><text x="44.9798%" y="171.50"></text></g><g><title>sha256.nr:348:13::msg_byte_ptr / INT_SIZE (5 gates, 0.00%)</title><rect x="44.7298%" y="181" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="103070" fg:w="5"/><text x="44.9798%" y="195.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="44.7302%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103071" fg:w="4"/><text x="44.9802%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7320%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103075" fg:w="1"/><text x="44.9820%" y="123.50"></text></g><g><title>sha256.nr:360:17::INT_SIZE - msg_byte_ptr % INT_SIZE (3 gates, 0.00%)</title><rect x="44.7320%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103075" fg:w="3"/><text x="44.9820%" y="147.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="44.7324%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103076" fg:w="2"/><text x="44.9824%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7333%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103078" fg:w="1"/><text x="44.9833%" y="123.50"></text></g><g><title>sha256.nr:360:28::msg_byte_ptr % INT_SIZE (3 gates, 0.00%)</title><rect x="44.7333%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103078" fg:w="3"/><text x="44.9833%" y="147.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="44.7337%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103079" fg:w="2"/><text x="44.9837%" y="123.50"></text></g><g><title>sha256.nr:432:12::shifts == 0 (2 gates, 0.00%)</title><rect x="44.7346%" y="85" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103081" fg:w="2"/><text x="44.9846%" y="99.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="44.7346%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103081" fg:w="2"/><text x="44.9846%" y="75.50"></text></g><g><title>sha256.nr:434:19::shifts == 1 (3 gates, 0.00%)</title><rect x="44.7354%" y="85" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103083" fg:w="3"/><text x="44.9854%" y="99.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="44.7354%" y="61" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103083" fg:w="3"/><text x="44.9854%" y="75.50"></text></g><g><title>acir::arithmetic (10 gates, 0.00%)</title><rect x="44.7368%" y="61" width="0.0043%" height="23" fill="rgb(255,249,249)" fg:x="103086" fg:w="10"/><text x="44.9868%" y="75.50"></text></g><g><title>sha256.nr:435:13::item / TWO_POW_8 (18 gates, 0.01%)</title><rect x="44.7368%" y="85" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="103086" fg:w="18"/><text x="44.9868%" y="99.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.00%)</title><rect x="44.7411%" y="61" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="103096" fg:w="8"/><text x="44.9911%" y="75.50"></text></g><g><title>sha256.nr:436:19::shifts == 2 (4 gates, 0.00%)</title><rect x="44.7446%" y="85" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103104" fg:w="4"/><text x="44.9946%" y="99.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="44.7446%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103104" fg:w="4"/><text x="44.9946%" y="75.50"></text></g><g><title>acir::arithmetic (9 gates, 0.00%)</title><rect x="44.7463%" y="61" width="0.0039%" height="23" fill="rgb(255,249,249)" fg:x="103108" fg:w="9"/><text x="44.9963%" y="75.50"></text></g><g><title>sha256.nr:437:13::item / TWO_POW_16 (20 gates, 0.01%)</title><rect x="44.7463%" y="85" width="0.0087%" height="23" fill="rgb(255,248,248)" fg:x="103108" fg:w="20"/><text x="44.9963%" y="99.50"></text></g><g><title>acir::blackbox::range (11 gates, 0.00%)</title><rect x="44.7502%" y="61" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="103117" fg:w="11"/><text x="45.0002%" y="75.50"></text></g><g><title>sha256.nr:438:19::shifts == 3 (4 gates, 0.00%)</title><rect x="44.7550%" y="85" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103128" fg:w="4"/><text x="45.0050%" y="99.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="44.7550%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103128" fg:w="4"/><text x="45.0050%" y="75.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="44.7567%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103132" fg:w="4"/><text x="45.0067%" y="75.50"></text></g><g><title>sha256.nr:355:13::rshift8(item, zeros) (60 gates, 0.03%)</title><rect x="44.7346%" y="109" width="0.0260%" height="23" fill="rgb(255,247,247)" fg:x="103081" fg:w="60"/><text x="44.9846%" y="123.50"></text></g><g><title>sha256.nr:439:13::item / TWO_POW_24 (9 gates, 0.00%)</title><rect x="44.7567%" y="85" width="0.0039%" height="23" fill="rgb(255,249,249)" fg:x="103132" fg:w="9"/><text x="45.0067%" y="99.50"></text></g><g><title>acir::blackbox::range (5 gates, 0.00%)</title><rect x="44.7584%" y="61" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="103136" fg:w="5"/><text x="45.0084%" y="75.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="44.7606%" y="61" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="103141" fg:w="8"/><text x="45.0106%" y="75.50"></text></g><g><title>sha256.nr:412:13::item * TWO_POW_8 (15 gates, 0.01%)</title><rect x="44.7606%" y="85" width="0.0065%" height="23" fill="rgb(255,248,248)" fg:x="103141" fg:w="15"/><text x="45.0106%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.00%)</title><rect x="44.7641%" y="61" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="103149" fg:w="7"/><text x="45.0141%" y="75.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="44.7671%" y="61" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="103156" fg:w="8"/><text x="45.0171%" y="75.50"></text></g><g><title>sha256.nr:414:13::item * TWO_POW_16 (14 gates, 0.01%)</title><rect x="44.7671%" y="85" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="103156" fg:w="14"/><text x="45.0171%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.00%)</title><rect x="44.7706%" y="61" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="103164" fg:w="6"/><text x="45.0206%" y="75.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="44.7732%" y="61" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103170" fg:w="3"/><text x="45.0232%" y="75.50"></text></g><g><title>sha256.nr:361:23::set_item_zeros(msg_item, zeros as u8) (96 gates, 0.04%)</title><rect x="44.7346%" y="133" width="0.0417%" height="23" fill="rgb(255,247,247)" fg:x="103081" fg:w="96"/><text x="44.9846%" y="147.50"></text></g><g><title>sha256.nr:355:5::lshift8(rshift8(item, zeros), zeros) (36 gates, 0.02%)</title><rect x="44.7606%" y="109" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="103141" fg:w="36"/><text x="45.0106%" y="123.50"></text></g><g><title>sha256.nr:416:13::item * TWO_POW_24 (7 gates, 0.00%)</title><rect x="44.7732%" y="85" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="103170" fg:w="7"/><text x="45.0232%" y="99.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="44.7745%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103173" fg:w="4"/><text x="45.0245%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7762%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103177" fg:w="1"/><text x="45.0262%" y="123.50"></text></g><g><title>sha256.nr:361:48::zeros as u8 (3 gates, 0.00%)</title><rect x="44.7762%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103177" fg:w="3"/><text x="45.0262%" y="147.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="44.7767%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103178" fg:w="2"/><text x="45.0267%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7775%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103180" fg:w="1"/><text x="45.0275%" y="99.50"></text></g><g><title>sha256.nr:383:18::max_shifts - msg_byte_ptr % INT_SIZE (3 gates, 0.00%)</title><rect x="44.7775%" y="109" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103180" fg:w="3"/><text x="45.0275%" y="123.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="44.7780%" y="85" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103181" fg:w="2"/><text x="45.0280%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7788%" y="85" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103183" fg:w="1"/><text x="45.0288%" y="99.50"></text></g><g><title>sha256.nr:384:23::shifts as u8 (4 gates, 0.00%)</title><rect x="44.7788%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103183" fg:w="4"/><text x="45.0288%" y="123.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="44.7793%" y="85" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103184" fg:w="3"/><text x="45.0293%" y="99.50"></text></g><g><title>sha256.nr:409:12::shifts == 0 (2 gates, 0.00%)</title><rect x="44.7806%" y="85" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103187" fg:w="2"/><text x="45.0306%" y="99.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="44.7806%" y="61" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103187" fg:w="2"/><text x="45.0306%" y="75.50"></text></g><g><title>sha256.nr:411:19::shifts == 1 (3 gates, 0.00%)</title><rect x="44.7815%" y="85" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103189" fg:w="3"/><text x="45.0315%" y="99.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="44.7815%" y="61" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103189" fg:w="3"/><text x="45.0315%" y="75.50"></text></g><g><title>sha256.nr:413:19::shifts == 2 (4 gates, 0.00%)</title><rect x="44.7828%" y="85" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103192" fg:w="4"/><text x="45.0328%" y="99.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="44.7828%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103192" fg:w="4"/><text x="45.0328%" y="75.50"></text></g><g><title>sha256.nr:362:20::byte_into_item(msg_byte, msg_byte_ptr) (20 gates, 0.01%)</title><rect x="44.7775%" y="133" width="0.0087%" height="23" fill="rgb(255,248,248)" fg:x="103180" fg:w="20"/><text x="45.0275%" y="147.50"></text></g><g><title>sha256.nr:384:5::lshift8(msg_item, shifts as u8) (13 gates, 0.01%)</title><rect x="44.7806%" y="109" width="0.0056%" height="23" fill="rgb(255,248,248)" fg:x="103187" fg:w="13"/><text x="45.0306%" y="123.50"></text></g><g><title>sha256.nr:415:19::shifts == 3 (4 gates, 0.00%)</title><rect x="44.7845%" y="85" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103196" fg:w="4"/><text x="45.0345%" y="99.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="44.7845%" y="61" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103196" fg:w="4"/><text x="45.0345%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7862%" y="109" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103200" fg:w="1"/><text x="45.0362%" y="123.50"></text></g><g><title>sha256.nr:349:20::f(msg_block[i]) (128 gates, 0.06%)</title><rect x="44.7320%" y="181" width="0.0555%" height="23" fill="rgb(255,246,246)" fg:x="103075" fg:w="128"/><text x="44.9820%" y="195.50"></text></g><g><title>sha256.nr:141:20::set_item_byte_then_zeros(msg_item, msg_byte_ptr, 1 &lt;&lt; 7) (128 gates, 0.06%)</title><rect x="44.7320%" y="157" width="0.0555%" height="23" fill="rgb(255,246,246)" fg:x="103075" fg:w="128"/><text x="44.9820%" y="171.50"></text></g><g><title>sha256.nr:363:5::zeroed_item + new_item (3 gates, 0.00%)</title><rect x="44.7862%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="103200" fg:w="3"/><text x="45.0362%" y="147.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="44.7867%" y="109" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103201" fg:w="2"/><text x="45.0367%" y="123.50"></text></g><g><title>acir::arithmetic (6 gates, 0.00%)</title><rect x="44.7875%" y="157" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="103203" fg:w="6"/><text x="45.0375%" y="171.50"></text></g><g><title>acir::blackbox::range (11 gates, 0.00%)</title><rect x="44.7901%" y="157" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="103209" fg:w="11"/><text x="45.0401%" y="171.50"></text></g><g><title>sha256.nr:349:22::msg_block[i] (22 gates, 0.01%)</title><rect x="44.7875%" y="181" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="103203" fg:w="22"/><text x="45.0375%" y="195.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="44.7949%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="103220" fg:w="5"/><text x="45.0449%" y="171.50"></text></g><g><title>sha256.nr:138:17::update_block_item(
        msg_block,
        msg_byte_ptr,
        |msg_item| set_item_byte_then_zeros(msg_item, msg_byte_ptr, 1 &lt;&lt; 7),
    ) (160 gates, 0.07%)</title><rect x="44.7298%" y="205" width="0.0694%" height="23" fill="rgb(255,246,246)" fg:x="103070" fg:w="160"/><text x="44.9798%" y="219.50"></text></g><g><title>sha256.nr:349:5::msg_block[i] (5 gates, 0.00%)</title><rect x="44.7971%" y="181" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="103225" fg:w="5"/><text x="45.0471%" y="195.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="44.7971%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="103225" fg:w="5"/><text x="45.0471%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.7992%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103230" fg:w="1"/><text x="45.0492%" y="195.50"></text></g><g><title>sha256.nr:143:20::msg_byte_ptr + 1 (2 gates, 0.00%)</title><rect x="44.7992%" y="205" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="103230" fg:w="2"/><text x="45.0492%" y="219.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="44.7997%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103231" fg:w="1"/><text x="45.0497%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="44.8001%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="103232" fg:w="1"/><text x="45.0501%" y="195.50"></text></g><g><title>sha256.nr:147:8::msg_byte_ptr &gt; MSG_SIZE_PTR (5 gates, 0.00%)</title><rect x="44.8001%" y="205" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="103232" fg:w="5"/><text x="45.0501%" y="219.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="44.8005%" y="181" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="103233" fg:w="4"/><text x="45.0505%" y="195.50"></text></g><g><title>acir::arithmetic (41 gates, 0.02%)</title><rect x="44.8023%" y="181" width="0.0178%" height="23" fill="rgb(255,248,248)" fg:x="103237" fg:w="41"/><text x="45.0523%" y="195.50"></text></g><g><title>acir::blackbox::range (42 gates, 0.02%)</title><rect x="44.8201%" y="181" width="0.0182%" height="23" fill="rgb(255,247,247)" fg:x="103278" fg:w="42"/><text x="45.0701%" y="195.50"></text></g><g><title>acir::blackbox::sha256_compression (3,892 gates, 1.69%)</title><rect x="44.8383%" y="181" width="1.6890%" height="23" fill="rgb(255,230,230)" fg:x="103320" fg:w="3892"/><text x="45.0883%" y="195.50"></text></g><g><title>sha256.nr:148:13::sha256_compression(msg_block, h) (4,055 gates, 1.76%)</title><rect x="44.8023%" y="205" width="1.7598%" height="23" fill="rgb(255,230,230)" fg:x="103237" fg:w="4055"/><text x="45.0523%" y="219.50"></text></g><g><title>acir::memory::op (80 gates, 0.03%)</title><rect x="46.5273%" y="181" width="0.0347%" height="23" fill="rgb(255,247,247)" fg:x="107212" fg:w="80"/><text x="46.7773%" y="195.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="46.5620%" y="181" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="107292" fg:w="2"/><text x="46.8120%" y="195.50"></text></g><g><title>sha256.nr:150:24::0 (3 gates, 0.00%)</title><rect x="46.5620%" y="205" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="107292" fg:w="3"/><text x="46.8120%" y="219.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="46.5629%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="107294" fg:w="1"/><text x="46.8129%" y="195.50"></text></g><g><title>acir::blackbox::range (28 gates, 0.01%)</title><rect x="46.5634%" y="181" width="0.0122%" height="23" fill="rgb(255,248,248)" fg:x="107295" fg:w="28"/><text x="46.8134%" y="195.50"></text></g><g><title>sha256.nr:155:9::attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size) (45 gates, 0.02%)</title><rect x="46.5634%" y="205" width="0.0195%" height="23" fill="rgb(255,247,247)" fg:x="107295" fg:w="45"/><text x="46.8134%" y="219.50"></text></g><g><title>acir::memory::init (17 gates, 0.01%)</title><rect x="46.5755%" y="181" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="107323" fg:w="17"/><text x="46.8255%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="46.5829%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="107340" fg:w="1"/><text x="46.8329%" y="147.50"></text></g><g><title>sha256.nr:281:28::msg_byte_ptr / INT_SIZE (4 gates, 0.00%)</title><rect x="46.5829%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107340" fg:w="4"/><text x="46.8329%" y="171.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="46.5833%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="107341" fg:w="3"/><text x="46.8333%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="46.5846%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="107344" fg:w="1"/><text x="46.8346%" y="147.50"></text></g><g><title>sha256.nr:284:18::msg_byte_ptr % INT_SIZE (4 gates, 0.00%)</title><rect x="46.5846%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107344" fg:w="4"/><text x="46.8346%" y="171.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="46.5851%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="107345" fg:w="3"/><text x="46.8351%" y="147.50"></text></g><g><title>sha256.nr:285:8::modulo != 0 (2 gates, 0.00%)</title><rect x="46.5864%" y="157" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="107348" fg:w="2"/><text x="46.8364%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.00%)</title><rect x="46.5864%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="107348" fg:w="2"/><text x="46.8364%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="46.5872%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="107350" fg:w="1"/><text x="46.8372%" y="147.50"></text></g><g><title>sha256.nr:286:21::INT_SIZE - modulo (3 gates, 0.00%)</title><rect x="46.5872%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="107350" fg:w="3"/><text x="46.8372%" y="171.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.00%)</title><rect x="46.5877%" y="133" width="0.0009%" height="23" fill="rgb(255,249,249)" fg:x="107351" fg:w="2"/><text x="46.8377%" y="147.50"></text></g><g><title>sha256.nr:287:23::zeros == 3 (3 gates, 0.00%)</title><rect x="46.5885%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="107353" fg:w="3"/><text x="46.8385%" y="171.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="46.5885%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="107353" fg:w="3"/><text x="46.8385%" y="147.50"></text></g><g><title>sha256.nr:289:19::zeros == 2 (4 gates, 0.00%)</title><rect x="46.5898%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107356" fg:w="4"/><text x="46.8398%" y="171.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="46.5898%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107356" fg:w="4"/><text x="46.8398%" y="147.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="46.5916%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="107360" fg:w="3"/><text x="46.8416%" y="147.50"></text></g><g><title>sha256.nr:294:19::msg_block[int_byte_ptr] % mask, zero (4 gates, 0.00%)</title><rect x="46.5916%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107360" fg:w="4"/><text x="46.8416%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="46.5929%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="107363" fg:w="1"/><text x="46.8429%" y="147.50"></text></g><g><title>acir::arithmetic (5 gates, 0.00%)</title><rect x="46.5933%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="107364" fg:w="5"/><text x="46.8433%" y="147.50"></text></g><g><title>sha256.nr:294:19::msg_block[int_byte_ptr] % mask (11 gates, 0.00%)</title><rect x="46.5933%" y="157" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="107364" fg:w="11"/><text x="46.8433%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.00%)</title><rect x="46.5955%" y="133" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="107369" fg:w="6"/><text x="46.8455%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="46.5981%" y="133" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="107375" fg:w="1"/><text x="46.8481%" y="147.50"></text></g><g><title>sha256.nr:294:19::msg_block[int_byte_ptr] (18 gates, 0.01%)</title><rect x="46.5981%" y="157" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="107375" fg:w="18"/><text x="46.8481%" y="171.50"></text></g><g><title>acir::memory::op (17 gates, 0.01%)</title><rect x="46.5985%" y="133" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="107376" fg:w="17"/><text x="46.8485%" y="147.50"></text></g><g><title>acir::arithmetic (5 gates, 0.00%)</title><rect x="46.6059%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="107393" fg:w="5"/><text x="46.8559%" y="147.50"></text></g><g><title>sha256.nr:295:24::int_byte_ptr + 1 (12 gates, 0.01%)</title><rect x="46.6059%" y="157" width="0.0052%" height="23" fill="rgb(255,248,248)" fg:x="107393" fg:w="12"/><text x="46.8559%" y="171.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.00%)</title><rect x="46.6081%" y="133" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="107398" fg:w="7"/><text x="46.8581%" y="147.50"></text></g><g><title>acir::arithmetic (14 gates, 0.01%)</title><rect x="46.6111%" y="133" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="107405" fg:w="14"/><text x="46.8611%" y="147.50"></text></g><g><title>sha256.nr:300:12::i &gt;= int_byte_ptr (63 gates, 0.03%)</title><rect x="46.6111%" y="157" width="0.0273%" height="23" fill="rgb(255,247,247)" fg:x="107405" fg:w="63"/><text x="46.8611%" y="171.50"></text></g><g><title>acir::blackbox::range (49 gates, 0.02%)</title><rect x="46.6172%" y="133" width="0.0213%" height="23" fill="rgb(255,247,247)" fg:x="107419" fg:w="49"/><text x="46.8672%" y="147.50"></text></g><g><title>acir::arithmetic (42 gates, 0.02%)</title><rect x="46.6384%" y="133" width="0.0182%" height="23" fill="rgb(255,247,247)" fg:x="107468" fg:w="42"/><text x="46.8884%" y="147.50"></text></g><g><title>sha256.nr:495:5::verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR) (184 gates, 0.08%)</title><rect x="46.5829%" y="181" width="0.0799%" height="23" fill="rgb(255,245,245)" fg:x="107340" fg:w="184"/><text x="46.8329%" y="195.50"></text></g><g><title>sha256.nr:301:23::msg_block[i], zero (56 gates, 0.02%)</title><rect x="46.6384%" y="157" width="0.0243%" height="23" fill="rgb(255,247,247)" fg:x="107468" fg:w="56"/><text x="46.8884%" y="171.50"></text></g><g><title>acir::blackbox::range (14 gates, 0.01%)</title><rect x="46.6567%" y="133" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="107510" fg:w="14"/><text x="46.9067%" y="147.50"></text></g><g><title>acir::arithmetic (21 gates, 0.01%)</title><rect x="46.6627%" y="133" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="107524" fg:w="21"/><text x="46.9127%" y="147.50"></text></g><g><title>acir::blackbox::range (23 gates, 0.01%)</title><rect x="46.6718%" y="133" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="107545" fg:w="23"/><text x="46.9218%" y="147.50"></text></g><g><title>sha256.nr:321:26::last_block[int_byte_ptr] (49 gates, 0.02%)</title><rect x="46.6627%" y="157" width="0.0213%" height="23" fill="rgb(255,247,247)" fg:x="107524" fg:w="49"/><text x="46.9127%" y="171.50"></text></g><g><title>acir::memory::op (5 gates, 0.00%)</title><rect x="46.6818%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="107568" fg:w="5"/><text x="46.9318%" y="147.50"></text></g><g><title>acir::arithmetic (7 gates, 0.00%)</title><rect x="46.6840%" y="133" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="107573" fg:w="7"/><text x="46.9340%" y="147.50"></text></g><g><title>sha256.nr:324:24::msg_byte_ptr - modulo (14 gates, 0.01%)</title><rect x="46.6840%" y="157" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="107573" fg:w="14"/><text x="46.9340%" y="171.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.00%)</title><rect x="46.6870%" y="133" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="107580" fg:w="7"/><text x="46.9370%" y="147.50"></text></g><g><title>acir::arithmetic (17 gates, 0.01%)</title><rect x="46.6901%" y="109" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="107587" fg:w="17"/><text x="46.9401%" y="123.50"></text></g><g><title>sha256.nr:326:24::lshift8(msg_item, 1) (38 gates, 0.02%)</title><rect x="46.6901%" y="157" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="107587" fg:w="38"/><text x="46.9401%" y="171.50"></text></g><g><title>sha256.nr:412:13::item * TWO_POW_8 (38 gates, 0.02%)</title><rect x="46.6901%" y="133" width="0.0165%" height="23" fill="rgb(255,248,248)" fg:x="107587" fg:w="38"/><text x="46.9401%" y="147.50"></text></g><g><title>acir::blackbox::range (21 gates, 0.01%)</title><rect x="46.6974%" y="109" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="107604" fg:w="21"/><text x="46.9474%" y="123.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="46.7066%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107625" fg:w="4"/><text x="46.9566%" y="147.50"></text></g><g><title>sha256.nr:327:16::i &lt; modulo (15 gates, 0.01%)</title><rect x="46.7066%" y="157" width="0.0065%" height="23" fill="rgb(255,248,248)" fg:x="107625" fg:w="15"/><text x="46.9566%" y="171.50"></text></g><g><title>acir::blackbox::range (11 gates, 0.00%)</title><rect x="46.7083%" y="133" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="107629" fg:w="11"/><text x="46.9583%" y="147.50"></text></g><g><title>acir::arithmetic (20 gates, 0.01%)</title><rect x="46.7131%" y="133" width="0.0087%" height="23" fill="rgb(255,248,248)" fg:x="107640" fg:w="20"/><text x="46.9631%" y="147.50"></text></g><g><title>sha256.nr:328:28::msg_item + get_item_byte(last_field, msg_byte_ptr) as u32 (41 gates, 0.02%)</title><rect x="46.7131%" y="157" width="0.0178%" height="23" fill="rgb(255,248,248)" fg:x="107640" fg:w="41"/><text x="46.9631%" y="171.50"></text></g><g><title>acir::blackbox::range (21 gates, 0.01%)</title><rect x="46.7218%" y="133" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="107660" fg:w="21"/><text x="46.9718%" y="147.50"></text></g><g><title>acir::arithmetic (12 gates, 0.01%)</title><rect x="46.7309%" y="109" width="0.0052%" height="23" fill="rgb(255,248,248)" fg:x="107681" fg:w="12"/><text x="46.9809%" y="123.50"></text></g><g><title>sha256.nr:370:18::max_shifts - msg_byte_ptr % INT_SIZE (22 gates, 0.01%)</title><rect x="46.7309%" y="133" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="107681" fg:w="22"/><text x="46.9809%" y="147.50"></text></g><g><title>acir::blackbox::range (10 gates, 0.00%)</title><rect x="46.7361%" y="109" width="0.0043%" height="23" fill="rgb(255,249,249)" fg:x="107693" fg:w="10"/><text x="46.9861%" y="123.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="46.7404%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107703" fg:w="4"/><text x="46.9904%" y="123.50"></text></g><g><title>sha256.nr:370:31::msg_byte_ptr % INT_SIZE (15 gates, 0.01%)</title><rect x="46.7404%" y="133" width="0.0065%" height="23" fill="rgb(255,248,248)" fg:x="107703" fg:w="15"/><text x="46.9904%" y="147.50"></text></g><g><title>acir::blackbox::range (11 gates, 0.00%)</title><rect x="46.7421%" y="109" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="107707" fg:w="11"/><text x="46.9921%" y="123.50"></text></g><g><title>sha256.nr:432:12::shifts == 0 (8 gates, 0.00%)</title><rect x="46.7469%" y="109" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="107718" fg:w="8"/><text x="46.9969%" y="123.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="46.7469%" y="85" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="107718" fg:w="8"/><text x="46.9969%" y="99.50"></text></g><g><title>sha256.nr:434:19::shifts == 1 (16 gates, 0.01%)</title><rect x="46.7504%" y="109" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="107726" fg:w="16"/><text x="47.0004%" y="123.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="46.7504%" y="85" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="107726" fg:w="16"/><text x="47.0004%" y="99.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="46.7573%" y="85" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="107742" fg:w="36"/><text x="47.0073%" y="99.50"></text></g><g><title>sha256.nr:435:13::item / TWO_POW_8 (69 gates, 0.03%)</title><rect x="46.7573%" y="109" width="0.0299%" height="23" fill="rgb(255,247,247)" fg:x="107742" fg:w="69"/><text x="47.0073%" y="123.50"></text></g><g><title>acir::blackbox::range (33 gates, 0.01%)</title><rect x="46.7730%" y="85" width="0.0143%" height="23" fill="rgb(255,248,248)" fg:x="107778" fg:w="33"/><text x="47.0230%" y="99.50"></text></g><g><title>sha256.nr:436:19::shifts == 2 (16 gates, 0.01%)</title><rect x="46.7873%" y="109" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="107811" fg:w="16"/><text x="47.0373%" y="123.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="46.7873%" y="85" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="107811" fg:w="16"/><text x="47.0373%" y="99.50"></text></g><g><title>acir::arithmetic (36 gates, 0.02%)</title><rect x="46.7942%" y="85" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="107827" fg:w="36"/><text x="47.0442%" y="99.50"></text></g><g><title>sha256.nr:437:13::item / TWO_POW_16 (77 gates, 0.03%)</title><rect x="46.7942%" y="109" width="0.0334%" height="23" fill="rgb(255,247,247)" fg:x="107827" fg:w="77"/><text x="47.0442%" y="123.50"></text></g><g><title>acir::blackbox::range (41 gates, 0.02%)</title><rect x="46.8098%" y="85" width="0.0178%" height="23" fill="rgb(255,248,248)" fg:x="107863" fg:w="41"/><text x="47.0598%" y="99.50"></text></g><g><title>sha256.nr:438:19::shifts == 3 (16 gates, 0.01%)</title><rect x="46.8276%" y="109" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="107904" fg:w="16"/><text x="47.0776%" y="123.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="46.8276%" y="85" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="107904" fg:w="16"/><text x="47.0776%" y="99.50"></text></g><g><title>acir::arithmetic (16 gates, 0.01%)</title><rect x="46.8346%" y="85" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="107920" fg:w="16"/><text x="47.0846%" y="99.50"></text></g><g><title>sha256.nr:371:16::rshift8(msg_item, shifts as u8) (242 gates, 0.11%)</title><rect x="46.7469%" y="133" width="0.1050%" height="23" fill="rgb(255,245,245)" fg:x="107718" fg:w="242"/><text x="46.9969%" y="147.50"></text></g><g><title>sha256.nr:439:13::item / TWO_POW_24 (40 gates, 0.02%)</title><rect x="46.8346%" y="109" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="107920" fg:w="40"/><text x="47.0846%" y="123.50"></text></g><g><title>acir::blackbox::range (24 gates, 0.01%)</title><rect x="46.8415%" y="85" width="0.0104%" height="23" fill="rgb(255,248,248)" fg:x="107936" fg:w="24"/><text x="47.0915%" y="99.50"></text></g><g><title>acir::arithmetic (4 gates, 0.00%)</title><rect x="46.8519%" y="109" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="107960" fg:w="4"/><text x="47.1019%" y="123.50"></text></g><g><title>sha256.nr:371:34::shifts as u8 (15 gates, 0.01%)</title><rect x="46.8519%" y="133" width="0.0065%" height="23" fill="rgb(255,248,248)" fg:x="107960" fg:w="15"/><text x="47.1019%" y="147.50"></text></g><g><title>acir::blackbox::range (11 gates, 0.00%)</title><rect x="46.8537%" y="109" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="107964" fg:w="11"/><text x="47.1037%" y="123.50"></text></g><g><title>acir::arithmetic (6 gates, 0.00%)</title><rect x="46.8585%" y="109" width="0.0026%" height="23" fill="rgb(255,249,249)" fg:x="107975" fg:w="6"/><text x="47.1085%" y="123.50"></text></g><g><title>sha256.nr:328:39::get_item_byte(last_field, msg_byte_ptr) (311 gates, 0.13%)</title><rect x="46.7309%" y="157" width="0.1350%" height="23" fill="rgb(255,244,244)" fg:x="107681" fg:w="311"/><text x="46.9809%" y="171.50"></text></g><g><title>sha256.nr:373:5::msg_item as u8 (17 gates, 0.01%)</title><rect x="46.8585%" y="133" width="0.0074%" height="23" fill="rgb(255,248,248)" fg:x="107975" fg:w="17"/><text x="47.1085%" y="147.50"></text></g><g><title>acir::blackbox::range (11 gates, 0.00%)</title><rect x="46.8611%" y="109" width="0.0048%" height="23" fill="rgb(255,249,249)" fg:x="107981" fg:w="11"/><text x="47.1111%" y="123.50"></text></g><g><title>acir::arithmetic (18 gates, 0.01%)</title><rect x="46.8658%" y="133" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="107992" fg:w="18"/><text x="47.1158%" y="147.50"></text></g><g><title>sha256.nr:329:32::msg_byte_ptr + 1 (39 gates, 0.02%)</title><rect x="46.8658%" y="157" width="0.0169%" height="23" fill="rgb(255,248,248)" fg:x="107992" fg:w="39"/><text x="47.1158%" y="171.50"></text></g><g><title>acir::blackbox::range (21 gates, 0.01%)</title><rect x="46.8736%" y="133" width="0.0091%" height="23" fill="rgb(255,248,248)" fg:x="108010" fg:w="21"/><text x="47.1236%" y="147.50"></text></g><g><title>acir::arithmetic (3 gates, 0.00%)</title><rect x="46.8828%" y="133" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="108031" fg:w="3"/><text x="47.1328%" y="147.50"></text></g><g><title>sha256.nr:332:19::msg_block[int_byte_ptr], msg_item (7 gates, 0.00%)</title><rect x="46.8828%" y="157" width="0.0030%" height="23" fill="rgb(255,249,249)" fg:x="108031" fg:w="7"/><text x="47.1328%" y="171.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="46.8841%" y="133" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="108034" fg:w="4"/><text x="47.1341%" y="147.50"></text></g><g><title>acir::arithmetic (14 gates, 0.01%)</title><rect x="46.8858%" y="133" width="0.0061%" height="23" fill="rgb(255,248,248)" fg:x="108038" fg:w="14"/><text x="47.1358%" y="147.50"></text></g><g><title>sha256.nr:336:12::i &lt; int_byte_ptr (53 gates, 0.02%)</title><rect x="46.8858%" y="157" width="0.0230%" height="23" fill="rgb(255,247,247)" fg:x="108038" fg:w="53"/><text x="47.1358%" y="171.50"></text></g><g><title>acir::blackbox::range (39 gates, 0.02%)</title><rect x="46.8919%" y="133" width="0.0169%" height="23" fill="rgb(255,248,248)" fg:x="108052" fg:w="39"/><text x="47.1419%" y="147.50"></text></g><g><title>acir::arithmetic (70 gates, 0.03%)</title><rect x="46.9088%" y="133" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="108091" fg:w="70"/><text x="47.1588%" y="147.50"></text></g><g><title>sha256.nr:337:23::msg_block[i], last_block[i] (118 gates, 0.05%)</title><rect x="46.9088%" y="157" width="0.0512%" height="23" fill="rgb(255,246,246)" fg:x="108091" fg:w="118"/><text x="47.1588%" y="171.50"></text></g><g><title>acir::blackbox::range (48 gates, 0.02%)</title><rect x="46.9392%" y="133" width="0.0208%" height="23" fill="rgb(255,247,247)" fg:x="108161" fg:w="48"/><text x="47.1892%" y="147.50"></text></g><g><title>sha256.nr:498:5::verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr) (755 gates, 0.33%)</title><rect x="46.6627%" y="181" width="0.3277%" height="23" fill="rgb(255,241,241)" fg:x="107524" fg:w="755"/><text x="46.9127%" y="195.50"></text></g><g><title>sha256.nr:337:37::last_block[i] (70 gates, 0.03%)</title><rect x="46.9600%" y="157" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="108209" fg:w="70"/><text x="47.2100%" y="171.50"></text></g><g><title>acir::memory::op (70 gates, 0.03%)</title><rect x="46.9600%" y="133" width="0.0304%" height="23" fill="rgb(255,247,247)" fg:x="108209" fg:w="70"/><text x="47.2100%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="46.9904%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="108279" fg:w="1"/><text x="47.2404%" y="171.50"></text></g><g><title>sha256.nr:503:29::reconstructed_len * TWO_POW_32 (5 gates, 0.00%)</title><rect x="46.9904%" y="181" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="108279" fg:w="5"/><text x="47.2404%" y="195.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.00%)</title><rect x="46.9908%" y="157" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="108280" fg:w="4"/><text x="47.2408%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="46.9926%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="108284" fg:w="1"/><text x="47.2426%" y="171.50"></text></g><g><title>sha256.nr:504:29::reconstructed_len + msg_block[i] as u64 (4 gates, 0.00%)</title><rect x="46.9926%" y="181" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="108284" fg:w="4"/><text x="47.2426%" y="195.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="46.9930%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="108285" fg:w="3"/><text x="47.2430%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="46.9943%" y="157" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="108288" fg:w="1"/><text x="47.2443%" y="171.50"></text></g><g><title>sha256.nr:159:9::verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size) (952 gates, 0.41%)</title><rect x="46.5829%" y="205" width="0.4131%" height="23" fill="rgb(255,240,240)" fg:x="107340" fg:w="952"/><text x="46.8329%" y="219.50"></text></g><g><title>sha256.nr:506:15::8 * message_size as u64 (4 gates, 0.00%)</title><rect x="46.9943%" y="181" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="108288" fg:w="4"/><text x="47.2443%" y="195.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="46.9947%" y="157" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="108289" fg:w="3"/><text x="47.2447%" y="171.50"></text></g><g><title>acir::arithmetic (8 gates, 0.00%)</title><rect x="46.9960%" y="157" width="0.0035%" height="23" fill="rgb(255,249,249)" fg:x="108292" fg:w="8"/><text x="47.2460%" y="171.50"></text></g><g><title>sha256.nr:514:13::sha256_compression(msg_block, state) (3,900 gates, 1.69%)</title><rect x="46.9960%" y="181" width="1.6925%" height="23" fill="rgb(255,230,230)" fg:x="108292" fg:w="3900"/><text x="47.2460%" y="195.50"></text></g><g><title>acir::blackbox::sha256_compression (3,892 gates, 1.69%)</title><rect x="46.9995%" y="157" width="1.6890%" height="23" fill="rgb(255,230,230)" fg:x="108300" fg:w="3892"/><text x="47.2495%" y="171.50"></text></g><g><title>sha256.nr:162:5::hash_final_block(msg_block, h) (3,940 gates, 1.71%)</title><rect x="46.9960%" y="205" width="1.7099%" height="23" fill="rgb(255,230,230)" fg:x="108292" fg:w="3940"/><text x="47.2460%" y="219.50"></text></g><g><title>sha256.nr:518:32::(state[j] as Field).to_be_bytes (40 gates, 0.02%)</title><rect x="48.6885%" y="181" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="112192" fg:w="40"/><text x="48.9385%" y="195.50"></text></g><g><title>mod.nr:98:21::self.to_be_radix (40 gates, 0.02%)</title><rect x="48.6885%" y="157" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="112192" fg:w="40"/><text x="48.9385%" y="171.50"></text></g><g><title>mod.nr:134:9::self.__to_be_radix (40 gates, 0.02%)</title><rect x="48.6885%" y="133" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="112192" fg:w="40"/><text x="48.9385%" y="147.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.02%)</title><rect x="48.6885%" y="109" width="0.0174%" height="23" fill="rgb(255,248,248)" fg:x="112192" fg:w="40"/><text x="48.9385%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="48.7059%" y="181" width="0.0004%" height="23" fill="rgb(255,249,249)" fg:x="112232" fg:w="1"/><text x="48.9559%" y="195.50"></text></g><g><title>sha256.nr:65:24::message_size as u32 (4 gates, 0.00%)</title><rect x="48.7059%" y="205" width="0.0017%" height="23" fill="rgb(255,249,249)" fg:x="112232" fg:w="4"/><text x="48.9559%" y="219.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.00%)</title><rect x="48.7063%" y="181" width="0.0013%" height="23" fill="rgb(255,249,249)" fg:x="112233" fg:w="3"/><text x="48.9563%" y="195.50"></text></g><g><title>sha256.nr:79:13::build_msg_block(msg, message_size, msg_start) (489 gates, 0.21%)</title><rect x="48.7076%" y="205" width="0.2122%" height="23" fill="rgb(255,243,243)" fg:x="112236" fg:w="489"/><text x="48.9576%" y="219.50"></text></g><g><title>acir::blackbox::range (489 gates, 0.21%)</title><rect x="48.7076%" y="181" width="0.2122%" height="23" fill="rgb(255,243,243)" fg:x="112236" fg:w="489"/><text x="48.9576%" y="195.50"></text></g><g><title>acir::arithmetic (1,054 gates, 0.46%)</title><rect x="48.9198%" y="181" width="0.4574%" height="23" fill="rgb(255,239,239)" fg:x="112725" fg:w="1054"/><text x="49.1698%" y="195.50"></text></g><g><title>sha256.nr:82:12::msg_start &lt; message_size (2,344 gates, 1.02%)</title><rect x="48.9198%" y="205" width="1.0172%" height="23" fill="rgb(255,234,234)" fg:x="112725" fg:w="2344"/><text x="49.1698%" y="219.50"></text></g><g><title>acir::blackbox::range (1,290 gates, 0.56%)</title><rect x="49.3772%" y="181" width="0.5598%" height="23" fill="rgb(255,238,238)" fg:x="113779" fg:w="1290"/><text x="49.6272%" y="195.50"></text></g><g><title>acir::arithmetic (768 gates, 0.33%)</title><rect x="49.9371%" y="157" width="0.3333%" height="23" fill="rgb(255,241,241)" fg:x="115069" fg:w="768"/><text x="50.1871%" y="171.50"></text></g><g><title>sha256.nr:243:27::msg_block[i], msg_item as u32 (1,662 gates, 0.72%)</title><rect x="49.9371%" y="181" width="0.7213%" height="23" fill="rgb(255,237,237)" fg:x="115069" fg:w="1662"/><text x="50.1871%" y="195.50"></text></g><g><title>acir::blackbox::range (894 gates, 0.39%)</title><rect x="50.2704%" y="157" width="0.3880%" height="23" fill="rgb(255,240,240)" fg:x="115837" fg:w="894"/><text x="50.5204%" y="171.50"></text></g><g><title>acir::arithmetic (480 gates, 0.21%)</title><rect x="50.6583%" y="157" width="0.2083%" height="23" fill="rgb(255,243,243)" fg:x="116731" fg:w="480"/><text x="50.9083%" y="171.50"></text></g><g><title>acir::memory::init (50 gates, 0.02%)</title><rect x="50.8666%" y="157" width="0.0217%" height="23" fill="rgb(255,247,247)" fg:x="117211" fg:w="50"/><text x="51.1166%" y="171.50"></text></g><g><title>sha256.nr:243:27::msg_block[i] (1,280 gates, 0.56%)</title><rect x="50.6583%" y="181" width="0.5555%" height="23" fill="rgb(255,238,238)" fg:x="116731" fg:w="1280"/><text x="50.9083%" y="195.50"></text></g><g><title>acir::memory::op (750 gates, 0.33%)</title><rect x="50.8883%" y="157" width="0.3255%" height="23" fill="rgb(255,241,241)" fg:x="117261" fg:w="750"/><text x="51.1383%" y="171.50"></text></g><g><title>acir::arithmetic (1,536 gates, 0.67%)</title><rect x="51.2138%" y="157" width="0.6666%" height="23" fill="rgb(255,237,237)" fg:x="118011" fg:w="1536"/><text x="51.4638%" y="171.50"></text></g><g><title>sha256.nr:244:21::i + 1 (3,048 gates, 1.32%)</title><rect x="51.2138%" y="181" width="1.3228%" height="23" fill="rgb(255,232,232)" fg:x="118011" fg:w="3048"/><text x="51.4638%" y="195.50"></text></g><g><title>acir::blackbox::range (1,512 gates, 0.66%)</title><rect x="51.8804%" y="157" width="0.6562%" height="23" fill="rgb(255,237,237)" fg:x="119547" fg:w="1512"/><text x="52.1304%" y="171.50"></text></g><g><title>acir::arithmetic (240 gates, 0.10%)</title><rect x="52.5366%" y="157" width="0.1042%" height="23" fill="rgb(255,245,245)" fg:x="121059" fg:w="240"/><text x="52.7866%" y="171.50"></text></g><g><title>sha256.nr:245:28::0 (651 gates, 0.28%)</title><rect x="52.5366%" y="181" width="0.2825%" height="23" fill="rgb(255,242,242)" fg:x="121059" fg:w="651"/><text x="52.7866%" y="195.50"></text></g><g><title>acir::blackbox::range (411 gates, 0.18%)</title><rect x="52.6407%" y="157" width="0.1784%" height="23" fill="rgb(255,243,243)" fg:x="121299" fg:w="411"/><text x="52.8907%" y="171.50"></text></g><g><title>acir::arithmetic (1,008 gates, 0.44%)</title><rect x="52.8191%" y="133" width="0.4374%" height="23" fill="rgb(255,240,240)" fg:x="121710" fg:w="1008"/><text x="53.0691%" y="147.50"></text></g><g><title>sha256.nr:249:20::lshift8(msg_item, 1) (2,782 gates, 1.21%)</title><rect x="52.8191%" y="181" width="1.2073%" height="23" fill="rgb(255,233,233)" fg:x="121710" fg:w="2782"/><text x="53.0691%" y="195.50"></text></g><g><title>sha256.nr:412:13::item * TWO_POW_8 (2,782 gates, 1.21%)</title><rect x="52.8191%" y="157" width="1.2073%" height="23" fill="rgb(255,233,233)" fg:x="121710" fg:w="2782"/><text x="53.0691%" y="171.50"></text></g><g><title>acir::blackbox::range (1,774 gates, 0.77%)</title><rect x="53.2565%" y="133" width="0.7699%" height="23" fill="rgb(255,236,236)" fg:x="122718" fg:w="1774"/><text x="53.5065%" y="147.50"></text></g><g><title>acir::arithmetic (1,023 gates, 0.44%)</title><rect x="54.0264%" y="157" width="0.4440%" height="23" fill="rgb(255,240,240)" fg:x="124492" fg:w="1023"/><text x="54.2764%" y="171.50"></text></g><g><title>sha256.nr:251:12::k &lt; message_size (3,835 gates, 1.66%)</title><rect x="54.0264%" y="181" width="1.6643%" height="23" fill="rgb(255,230,230)" fg:x="124492" fg:w="3835"/><text x="54.2764%" y="195.50"></text></g><g><title>acir::blackbox::range (2,812 gates, 1.22%)</title><rect x="54.4704%" y="157" width="1.2203%" height="23" fill="rgb(255,233,233)" fg:x="125515" fg:w="2812"/><text x="54.7204%" y="171.50"></text></g><g><title>acir::arithmetic (8,064 gates, 3.50%)</title><rect x="55.6907%" y="157" width="3.4996%" height="23" fill="rgb(255,221,221)" fg:x="128327" fg:w="8064"/><text x="55.9407%" y="171.50">aci..</text></g><g><title>sha256.nr:252:24::msg_item + msg[k] as u32 (15,120 gates, 6.56%)</title><rect x="55.6907%" y="181" width="6.5617%" height="23" fill="rgb(255,211,211)" fg:x="128327" fg:w="15120"/><text x="55.9407%" y="195.50">sha256.nr..</text></g><g><title>acir::blackbox::range (7,056 gates, 3.06%)</title><rect x="59.1903%" y="157" width="3.0621%" height="23" fill="rgb(255,223,223)" fg:x="136391" fg:w="7056"/><text x="59.4403%" y="171.50">aci..</text></g><g><title>acir::arithmetic (6,032 gates, 2.62%)</title><rect x="62.2524%" y="157" width="2.6177%" height="23" fill="rgb(255,225,225)" fg:x="143447" fg:w="6032"/><text x="62.5024%" y="171.50">ac..</text></g><g><title>sha256.nr:88:36::verify_msg_block(msg, message_size, msg_block, msg_start) (41,483 gates, 18.00%)</title><rect x="49.9371%" y="205" width="18.0026%" height="23" fill="rgb(255,186,186)" fg:x="115069" fg:w="41483"/><text x="50.1871%" y="219.50">sha256.nr:88:36::verify_msg_..</text></g><g><title>sha256.nr:253:28::msg_byte_ptr + 1 (13,105 gates, 5.69%)</title><rect x="62.2524%" y="181" width="5.6872%" height="23" fill="rgb(255,214,214)" fg:x="143447" fg:w="13105"/><text x="62.5024%" y="195.50">sha256...</text></g><g><title>acir::blackbox::range (7,073 gates, 3.07%)</title><rect x="64.8702%" y="157" width="3.0695%" height="23" fill="rgb(255,223,223)" fg:x="149479" fg:w="7073"/><text x="65.1202%" y="171.50">aci..</text></g><g><title>sha256.nr:98:42::msg_byte_ptr == BLOCK_SIZE (48 gates, 0.02%)</title><rect x="67.9397%" y="205" width="0.0208%" height="23" fill="rgb(255,247,247)" fg:x="156552" fg:w="48"/><text x="68.1897%" y="219.50"></text></g><g><title>acir::arithmetic (48 gates, 0.02%)</title><rect x="67.9397%" y="181" width="0.0208%" height="23" fill="rgb(255,247,247)" fg:x="156552" fg:w="48"/><text x="68.1897%" y="195.50"></text></g><g><title>acir::arithmetic (658 gates, 0.29%)</title><rect x="67.9605%" y="181" width="0.2856%" height="23" fill="rgb(255,242,242)" fg:x="156600" fg:w="658"/><text x="68.2105%" y="195.50"></text></g><g><title>acir::blackbox::range (662 gates, 0.29%)</title><rect x="68.2460%" y="181" width="0.2873%" height="23" fill="rgb(255,241,241)" fg:x="157258" fg:w="662"/><text x="68.4960%" y="195.50"></text></g><g><title>main.nr:43:40::sha256_var(body.storage, body.len() as u64) (117,124 gates, 50.83%)</title><rect x="44.7289%" y="229" width="50.8289%" height="23" fill="rgb(255,143,143)" fg:x="103068" fg:w="117124"/><text x="44.9789%" y="243.50">main.nr:43:40::sha256_var(body.storage, body.len() as u64)</text></g><g><title>sha256.nr:99:17::sha256_compression(msg_block, h) (63,592 gates, 27.60%)</title><rect x="67.9605%" y="205" width="27.5973%" height="23" fill="rgb(255,171,171)" fg:x="156600" fg:w="63592"/><text x="68.2105%" y="219.50">sha256.nr:99:17::sha256_compression(msg_bloc..</text></g><g><title>acir::blackbox::sha256_compression (62,272 gates, 27.02%)</title><rect x="68.5333%" y="181" width="27.0245%" height="23" fill="rgb(255,172,172)" fg:x="157920" fg:w="62272"/><text x="68.7833%" y="195.50">acir::blackbox::sha256_compression</text></g><g><title>main.nr:53:27::pedersen_hash(signature) (18 gates, 0.01%)</title><rect x="95.5578%" y="181" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="220192" fg:w="18"/><text x="95.8078%" y="195.50"></text></g><g><title>mod.nr:53:5::pedersen_hash_with_separator(input, 0) (18 gates, 0.01%)</title><rect x="95.5578%" y="157" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="220192" fg:w="18"/><text x="95.8078%" y="171.50"></text></g><g><title>acir::arithmetic (18 gates, 0.01%)</title><rect x="95.5578%" y="133" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="220192" fg:w="18"/><text x="95.8078%" y="147.50"></text></g><g><title>mod.nr:65:22::from_field_unsafe(input[i]) (36 gates, 0.02%)</title><rect x="95.5578%" y="229" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="220192" fg:w="36"/><text x="95.8078%" y="243.50"></text></g><g><title>mod.nr:104:15::scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi (36 gates, 0.02%)</title><rect x="95.5578%" y="205" width="0.0156%" height="23" fill="rgb(255,248,248)" fg:x="220192" fg:w="36"/><text x="95.8078%" y="219.50"></text></g><g><title>main.nr:54:6::pubkey.hash (18 gates, 0.01%)</title><rect x="95.5656%" y="181" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="220210" fg:w="18"/><text x="95.8156%" y="195.50"></text></g><g><title>dkim.nr:87:9::pedersen_hash(dkim_preimage) (18 gates, 0.01%)</title><rect x="95.5656%" y="157" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="220210" fg:w="18"/><text x="95.8156%" y="171.50"></text></g><g><title>mod.nr:53:5::pedersen_hash_with_separator(input, 0) (18 gates, 0.01%)</title><rect x="95.5656%" y="133" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="220210" fg:w="18"/><text x="95.8156%" y="147.50"></text></g><g><title>acir::arithmetic (18 gates, 0.01%)</title><rect x="95.5656%" y="109" width="0.0078%" height="23" fill="rgb(255,248,248)" fg:x="220210" fg:w="18"/><text x="95.8156%" y="123.50"></text></g><g><title>main.nr:53:27::pedersen_hash(signature) (5,366 gates, 2.33%)</title><rect x="95.5735%" y="205" width="2.3287%" height="23" fill="rgb(255,227,227)" fg:x="220228" fg:w="5366"/><text x="95.8235%" y="219.50">m..</text></g><g><title>mod.nr:53:5::pedersen_hash_with_separator(input, 0) (5,366 gates, 2.33%)</title><rect x="95.5735%" y="181" width="2.3287%" height="23" fill="rgb(255,227,227)" fg:x="220228" fg:w="5366"/><text x="95.8235%" y="195.50">m..</text></g><g><title>acir::blackbox::multi_scalar_mul (5,366 gates, 2.33%)</title><rect x="95.5735%" y="157" width="2.3287%" height="23" fill="rgb(255,227,227)" fg:x="220228" fg:w="5366"/><text x="95.8235%" y="171.50">a..</text></g><g><title>all (230,428 gates, 100%)</title><rect x="0.0000%" y="253" width="100.0000%" height="23" fill="rgb(255,100,100)" fg:x="0" fg:w="230428"/><text x="0.2500%" y="267.50"></text></g><g><title>mod.nr:73:5::multi_scalar_mul_array_return(generators, scalars) (10,200 gates, 4.43%)</title><rect x="95.5735%" y="229" width="4.4265%" height="23" fill="rgb(255,218,218)" fg:x="220228" fg:w="10200"/><text x="95.8235%" y="243.50">mod.n..</text></g><g><title>main.nr:54:6::pubkey.hash (4,834 gates, 2.10%)</title><rect x="97.9022%" y="205" width="2.0978%" height="23" fill="rgb(255,228,228)" fg:x="225594" fg:w="4834"/><text x="98.1522%" y="219.50">m..</text></g><g><title>dkim.nr:87:9::pedersen_hash(dkim_preimage) (4,834 gates, 2.10%)</title><rect x="97.9022%" y="181" width="2.0978%" height="23" fill="rgb(255,228,228)" fg:x="225594" fg:w="4834"/><text x="98.1522%" y="195.50">d..</text></g><g><title>mod.nr:53:5::pedersen_hash_with_separator(input, 0) (4,834 gates, 2.10%)</title><rect x="97.9022%" y="157" width="2.0978%" height="23" fill="rgb(255,228,228)" fg:x="225594" fg:w="4834"/><text x="98.1522%" y="171.50">m..</text></g><g><title>acir::blackbox::multi_scalar_mul (4,834 gates, 2.10%)</title><rect x="97.9022%" y="133" width="2.0978%" height="23" fill="rgb(255,228,228)" fg:x="225594" fg:w="4834"/><text x="98.1522%" y="147.50">a..</text></g></svg></svg>